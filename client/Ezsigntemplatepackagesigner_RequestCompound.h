/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Ezsigntemplatepackagesigner_RequestCompound.h
 *
 * A Ezsigntemplatepackagesigner Object and children
 */

#ifndef Ezsigntemplatepackagesigner_RequestCompound_H
#define Ezsigntemplatepackagesigner_RequestCompound_H

#include <QJsonObject>

#include "Field_eEzsigntemplatepackagesignerMapping.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Ezsigntemplatepackagesigner_RequestCompound : public Object {
public:
    Ezsigntemplatepackagesigner_RequestCompound();
    Ezsigntemplatepackagesigner_RequestCompound(QString json);
    ~Ezsigntemplatepackagesigner_RequestCompound() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiEzsigntemplatepackagesignerId() const;
    void setPkiEzsigntemplatepackagesignerId(const qint32 &pki_ezsigntemplatepackagesigner_id);
    bool is_pki_ezsigntemplatepackagesigner_id_Set() const;
    bool is_pki_ezsigntemplatepackagesigner_id_Valid() const;

    qint32 getFkiEzsigntemplatepackageId() const;
    void setFkiEzsigntemplatepackageId(const qint32 &fki_ezsigntemplatepackage_id);
    bool is_fki_ezsigntemplatepackage_id_Set() const;
    bool is_fki_ezsigntemplatepackage_id_Valid() const;

    qint32 getFkiEzdoctemplatedocumentId() const;
    void setFkiEzdoctemplatedocumentId(const qint32 &fki_ezdoctemplatedocument_id);
    bool is_fki_ezdoctemplatedocument_id_Set() const;
    bool is_fki_ezdoctemplatedocument_id_Valid() const;

    qint32 getFkiUserId() const;
    void setFkiUserId(const qint32 &fki_user_id);
    bool is_fki_user_id_Set() const;
    bool is_fki_user_id_Valid() const;

    qint32 getFkiUsergroupId() const;
    void setFkiUsergroupId(const qint32 &fki_usergroup_id);
    bool is_fki_usergroup_id_Set() const;
    bool is_fki_usergroup_id_Valid() const;

    bool isBEzsigntemplatepackagesignerReceivecopy() const;
    void setBEzsigntemplatepackagesignerReceivecopy(const bool &b_ezsigntemplatepackagesigner_receivecopy);
    bool is_b_ezsigntemplatepackagesigner_receivecopy_Set() const;
    bool is_b_ezsigntemplatepackagesigner_receivecopy_Valid() const;

    Field_eEzsigntemplatepackagesignerMapping getEEzsigntemplatepackagesignerMapping() const;
    void setEEzsigntemplatepackagesignerMapping(const Field_eEzsigntemplatepackagesignerMapping &e_ezsigntemplatepackagesigner_mapping);
    bool is_e_ezsigntemplatepackagesigner_mapping_Set() const;
    bool is_e_ezsigntemplatepackagesigner_mapping_Valid() const;

    QString getSEzsigntemplatepackagesignerDescription() const;
    void setSEzsigntemplatepackagesignerDescription(const QString &s_ezsigntemplatepackagesigner_description);
    bool is_s_ezsigntemplatepackagesigner_description_Set() const;
    bool is_s_ezsigntemplatepackagesigner_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_ezsigntemplatepackagesigner_id;
    bool m_pki_ezsigntemplatepackagesigner_id_isSet;
    bool m_pki_ezsigntemplatepackagesigner_id_isValid;

    qint32 m_fki_ezsigntemplatepackage_id;
    bool m_fki_ezsigntemplatepackage_id_isSet;
    bool m_fki_ezsigntemplatepackage_id_isValid;

    qint32 m_fki_ezdoctemplatedocument_id;
    bool m_fki_ezdoctemplatedocument_id_isSet;
    bool m_fki_ezdoctemplatedocument_id_isValid;

    qint32 m_fki_user_id;
    bool m_fki_user_id_isSet;
    bool m_fki_user_id_isValid;

    qint32 m_fki_usergroup_id;
    bool m_fki_usergroup_id_isSet;
    bool m_fki_usergroup_id_isValid;

    bool m_b_ezsigntemplatepackagesigner_receivecopy;
    bool m_b_ezsigntemplatepackagesigner_receivecopy_isSet;
    bool m_b_ezsigntemplatepackagesigner_receivecopy_isValid;

    Field_eEzsigntemplatepackagesignerMapping m_e_ezsigntemplatepackagesigner_mapping;
    bool m_e_ezsigntemplatepackagesigner_mapping_isSet;
    bool m_e_ezsigntemplatepackagesigner_mapping_isValid;

    QString m_s_ezsigntemplatepackagesigner_description;
    bool m_s_ezsigntemplatepackagesigner_description_isSet;
    bool m_s_ezsigntemplatepackagesigner_description_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Ezsigntemplatepackagesigner_RequestCompound)

#endif // Ezsigntemplatepackagesigner_RequestCompound_H
