/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Glaccountcontainer_AutocompleteElement_Response.h
 *
 * A Glaccountcontainer AutocompleteElement Response
 */

#ifndef Glaccountcontainer_AutocompleteElement_Response_H
#define Glaccountcontainer_AutocompleteElement_Response_H

#include <QJsonObject>

#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Glaccountcontainer_AutocompleteElement_Response : public Object {
public:
    Glaccountcontainer_AutocompleteElement_Response();
    Glaccountcontainer_AutocompleteElement_Response(QString json);
    ~Glaccountcontainer_AutocompleteElement_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiGlaccountcontainerId() const;
    void setPkiGlaccountcontainerId(const qint32 &pki_glaccountcontainer_id);
    bool is_pki_glaccountcontainer_id_Set() const;
    bool is_pki_glaccountcontainer_id_Valid() const;

    QString getSGlaccountcontainerLongcode() const;
    void setSGlaccountcontainerLongcode(const QString &s_glaccountcontainer_longcode);
    bool is_s_glaccountcontainer_longcode_Set() const;
    bool is_s_glaccountcontainer_longcode_Valid() const;

    QString getSGlaccountcontainerLongdescriptionX() const;
    void setSGlaccountcontainerLongdescriptionX(const QString &s_glaccountcontainer_longdescription_x);
    bool is_s_glaccountcontainer_longdescription_x_Set() const;
    bool is_s_glaccountcontainer_longdescription_x_Valid() const;

    bool isBGlaccountcontainerIsactive() const;
    void setBGlaccountcontainerIsactive(const bool &b_glaccountcontainer_isactive);
    bool is_b_glaccountcontainer_isactive_Set() const;
    bool is_b_glaccountcontainer_isactive_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_glaccountcontainer_id;
    bool m_pki_glaccountcontainer_id_isSet;
    bool m_pki_glaccountcontainer_id_isValid;

    QString m_s_glaccountcontainer_longcode;
    bool m_s_glaccountcontainer_longcode_isSet;
    bool m_s_glaccountcontainer_longcode_isValid;

    QString m_s_glaccountcontainer_longdescription_x;
    bool m_s_glaccountcontainer_longdescription_x_isSet;
    bool m_s_glaccountcontainer_longdescription_x_isValid;

    bool m_b_glaccountcontainer_isactive;
    bool m_b_glaccountcontainer_isactive_isSet;
    bool m_b_glaccountcontainer_isactive_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Glaccountcontainer_AutocompleteElement_Response)

#endif // Glaccountcontainer_AutocompleteElement_Response_H
