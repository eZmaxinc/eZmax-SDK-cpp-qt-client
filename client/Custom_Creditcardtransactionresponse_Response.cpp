/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_Creditcardtransactionresponse_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_Creditcardtransactionresponse_Response::Custom_Creditcardtransactionresponse_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_Creditcardtransactionresponse_Response::Custom_Creditcardtransactionresponse_Response() {
    this->initializeModel();
}

Custom_Creditcardtransactionresponse_Response::~Custom_Creditcardtransactionresponse_Response() {}

void Custom_Creditcardtransactionresponse_Response::initializeModel() {

    m_s_creditcardtransaction_is_ocode_isSet = false;
    m_s_creditcardtransaction_is_ocode_isValid = false;

    m_s_creditcardtransaction_responsecode_isSet = false;
    m_s_creditcardtransaction_responsecode_isValid = false;

    m_s_creditcardtransaction_responseterminalmessage_isSet = false;
    m_s_creditcardtransaction_responseterminalmessage_isValid = false;

    m_e_creditcardtransaction_avsresult_isSet = false;
    m_e_creditcardtransaction_avsresult_isValid = false;

    m_e_creditcardtransaction_cvdresult_isSet = false;
    m_e_creditcardtransaction_cvdresult_isValid = false;
}

void Custom_Creditcardtransactionresponse_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Custom_Creditcardtransactionresponse_Response::fromJsonObject(QJsonObject json) {

    m_s_creditcardtransaction_is_ocode_isValid = ::Ezmaxapi::fromJsonValue(m_s_creditcardtransaction_is_ocode, json[QString("sCreditcardtransactionISOcode")]);
    m_s_creditcardtransaction_is_ocode_isSet = !json[QString("sCreditcardtransactionISOcode")].isNull() && m_s_creditcardtransaction_is_ocode_isValid;

    m_s_creditcardtransaction_responsecode_isValid = ::Ezmaxapi::fromJsonValue(m_s_creditcardtransaction_responsecode, json[QString("sCreditcardtransactionResponsecode")]);
    m_s_creditcardtransaction_responsecode_isSet = !json[QString("sCreditcardtransactionResponsecode")].isNull() && m_s_creditcardtransaction_responsecode_isValid;

    m_s_creditcardtransaction_responseterminalmessage_isValid = ::Ezmaxapi::fromJsonValue(m_s_creditcardtransaction_responseterminalmessage, json[QString("sCreditcardtransactionResponseterminalmessage")]);
    m_s_creditcardtransaction_responseterminalmessage_isSet = !json[QString("sCreditcardtransactionResponseterminalmessage")].isNull() && m_s_creditcardtransaction_responseterminalmessage_isValid;

    m_e_creditcardtransaction_avsresult_isValid = ::Ezmaxapi::fromJsonValue(m_e_creditcardtransaction_avsresult, json[QString("eCreditcardtransactionAvsresult")]);
    m_e_creditcardtransaction_avsresult_isSet = !json[QString("eCreditcardtransactionAvsresult")].isNull() && m_e_creditcardtransaction_avsresult_isValid;

    m_e_creditcardtransaction_cvdresult_isValid = ::Ezmaxapi::fromJsonValue(m_e_creditcardtransaction_cvdresult, json[QString("eCreditcardtransactionCvdresult")]);
    m_e_creditcardtransaction_cvdresult_isSet = !json[QString("eCreditcardtransactionCvdresult")].isNull() && m_e_creditcardtransaction_cvdresult_isValid;
}

QString Custom_Creditcardtransactionresponse_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Custom_Creditcardtransactionresponse_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_s_creditcardtransaction_is_ocode_isSet) {
        obj.insert(QString("sCreditcardtransactionISOcode"), ::Ezmaxapi::toJsonValue(m_s_creditcardtransaction_is_ocode));
    }
    if (m_s_creditcardtransaction_responsecode_isSet) {
        obj.insert(QString("sCreditcardtransactionResponsecode"), ::Ezmaxapi::toJsonValue(m_s_creditcardtransaction_responsecode));
    }
    if (m_s_creditcardtransaction_responseterminalmessage_isSet) {
        obj.insert(QString("sCreditcardtransactionResponseterminalmessage"), ::Ezmaxapi::toJsonValue(m_s_creditcardtransaction_responseterminalmessage));
    }
    if (m_e_creditcardtransaction_avsresult.isSet()) {
        obj.insert(QString("eCreditcardtransactionAvsresult"), ::Ezmaxapi::toJsonValue(m_e_creditcardtransaction_avsresult));
    }
    if (m_e_creditcardtransaction_cvdresult.isSet()) {
        obj.insert(QString("eCreditcardtransactionCvdresult"), ::Ezmaxapi::toJsonValue(m_e_creditcardtransaction_cvdresult));
    }
    return obj;
}

QString Custom_Creditcardtransactionresponse_Response::getSCreditcardtransactionIsOcode() const {
    return m_s_creditcardtransaction_is_ocode;
}
void Custom_Creditcardtransactionresponse_Response::setSCreditcardtransactionIsOcode(const QString &s_creditcardtransaction_is_ocode) {
    m_s_creditcardtransaction_is_ocode = s_creditcardtransaction_is_ocode;
    m_s_creditcardtransaction_is_ocode_isSet = true;
}

bool Custom_Creditcardtransactionresponse_Response::is_s_creditcardtransaction_is_ocode_Set() const{
    return m_s_creditcardtransaction_is_ocode_isSet;
}

bool Custom_Creditcardtransactionresponse_Response::is_s_creditcardtransaction_is_ocode_Valid() const{
    return m_s_creditcardtransaction_is_ocode_isValid;
}

QString Custom_Creditcardtransactionresponse_Response::getSCreditcardtransactionResponsecode() const {
    return m_s_creditcardtransaction_responsecode;
}
void Custom_Creditcardtransactionresponse_Response::setSCreditcardtransactionResponsecode(const QString &s_creditcardtransaction_responsecode) {
    m_s_creditcardtransaction_responsecode = s_creditcardtransaction_responsecode;
    m_s_creditcardtransaction_responsecode_isSet = true;
}

bool Custom_Creditcardtransactionresponse_Response::is_s_creditcardtransaction_responsecode_Set() const{
    return m_s_creditcardtransaction_responsecode_isSet;
}

bool Custom_Creditcardtransactionresponse_Response::is_s_creditcardtransaction_responsecode_Valid() const{
    return m_s_creditcardtransaction_responsecode_isValid;
}

QString Custom_Creditcardtransactionresponse_Response::getSCreditcardtransactionResponseterminalmessage() const {
    return m_s_creditcardtransaction_responseterminalmessage;
}
void Custom_Creditcardtransactionresponse_Response::setSCreditcardtransactionResponseterminalmessage(const QString &s_creditcardtransaction_responseterminalmessage) {
    m_s_creditcardtransaction_responseterminalmessage = s_creditcardtransaction_responseterminalmessage;
    m_s_creditcardtransaction_responseterminalmessage_isSet = true;
}

bool Custom_Creditcardtransactionresponse_Response::is_s_creditcardtransaction_responseterminalmessage_Set() const{
    return m_s_creditcardtransaction_responseterminalmessage_isSet;
}

bool Custom_Creditcardtransactionresponse_Response::is_s_creditcardtransaction_responseterminalmessage_Valid() const{
    return m_s_creditcardtransaction_responseterminalmessage_isValid;
}

Field_eCreditcardtransactionAvsresult Custom_Creditcardtransactionresponse_Response::getECreditcardtransactionAvsresult() const {
    return m_e_creditcardtransaction_avsresult;
}
void Custom_Creditcardtransactionresponse_Response::setECreditcardtransactionAvsresult(const Field_eCreditcardtransactionAvsresult &e_creditcardtransaction_avsresult) {
    m_e_creditcardtransaction_avsresult = e_creditcardtransaction_avsresult;
    m_e_creditcardtransaction_avsresult_isSet = true;
}

bool Custom_Creditcardtransactionresponse_Response::is_e_creditcardtransaction_avsresult_Set() const{
    return m_e_creditcardtransaction_avsresult_isSet;
}

bool Custom_Creditcardtransactionresponse_Response::is_e_creditcardtransaction_avsresult_Valid() const{
    return m_e_creditcardtransaction_avsresult_isValid;
}

Field_eCreditcardtransactionCvdresult Custom_Creditcardtransactionresponse_Response::getECreditcardtransactionCvdresult() const {
    return m_e_creditcardtransaction_cvdresult;
}
void Custom_Creditcardtransactionresponse_Response::setECreditcardtransactionCvdresult(const Field_eCreditcardtransactionCvdresult &e_creditcardtransaction_cvdresult) {
    m_e_creditcardtransaction_cvdresult = e_creditcardtransaction_cvdresult;
    m_e_creditcardtransaction_cvdresult_isSet = true;
}

bool Custom_Creditcardtransactionresponse_Response::is_e_creditcardtransaction_cvdresult_Set() const{
    return m_e_creditcardtransaction_cvdresult_isSet;
}

bool Custom_Creditcardtransactionresponse_Response::is_e_creditcardtransaction_cvdresult_Valid() const{
    return m_e_creditcardtransaction_cvdresult_isValid;
}

bool Custom_Creditcardtransactionresponse_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_creditcardtransaction_is_ocode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_creditcardtransaction_responsecode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_creditcardtransaction_responseterminalmessage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_creditcardtransaction_avsresult.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_creditcardtransaction_cvdresult.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Custom_Creditcardtransactionresponse_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_creditcardtransaction_is_ocode_isValid && m_s_creditcardtransaction_responsecode_isValid && m_s_creditcardtransaction_responseterminalmessage_isValid && true;
}

} // namespace Ezmaxapi
