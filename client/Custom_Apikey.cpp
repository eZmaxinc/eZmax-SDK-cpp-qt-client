/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_Apikey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_Apikey::Custom_Apikey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_Apikey::Custom_Apikey() {
    this->initializeModel();
}

Custom_Apikey::~Custom_Apikey() {}

void Custom_Apikey::initializeModel() {

    m_s_apikey_key_isSet = false;
    m_s_apikey_key_isValid = false;

    m_s_apikey_secret_isSet = false;
    m_s_apikey_secret_isValid = false;
}

void Custom_Apikey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Custom_Apikey::fromJsonObject(QJsonObject json) {

    m_s_apikey_key_isValid = ::Ezmaxapi::fromJsonValue(m_s_apikey_key, json[QString("sApikeyKey")]);
    m_s_apikey_key_isSet = !json[QString("sApikeyKey")].isNull() && m_s_apikey_key_isValid;

    m_s_apikey_secret_isValid = ::Ezmaxapi::fromJsonValue(m_s_apikey_secret, json[QString("sApikeySecret")]);
    m_s_apikey_secret_isSet = !json[QString("sApikeySecret")].isNull() && m_s_apikey_secret_isValid;
}

QString Custom_Apikey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Custom_Apikey::asJsonObject() const {
    QJsonObject obj;
    if (m_s_apikey_key_isSet) {
        obj.insert(QString("sApikeyKey"), ::Ezmaxapi::toJsonValue(m_s_apikey_key));
    }
    if (m_s_apikey_secret_isSet) {
        obj.insert(QString("sApikeySecret"), ::Ezmaxapi::toJsonValue(m_s_apikey_secret));
    }
    return obj;
}

QString Custom_Apikey::getSApikeyKey() const {
    return m_s_apikey_key;
}
void Custom_Apikey::setSApikeyKey(const QString &s_apikey_key) {
    m_s_apikey_key = s_apikey_key;
    m_s_apikey_key_isSet = true;
}

bool Custom_Apikey::is_s_apikey_key_Set() const{
    return m_s_apikey_key_isSet;
}

bool Custom_Apikey::is_s_apikey_key_Valid() const{
    return m_s_apikey_key_isValid;
}

QString Custom_Apikey::getSApikeySecret() const {
    return m_s_apikey_secret;
}
void Custom_Apikey::setSApikeySecret(const QString &s_apikey_secret) {
    m_s_apikey_secret = s_apikey_secret;
    m_s_apikey_secret_isSet = true;
}

bool Custom_Apikey::is_s_apikey_secret_Set() const{
    return m_s_apikey_secret_isSet;
}

bool Custom_Apikey::is_s_apikey_secret_Valid() const{
    return m_s_apikey_secret_isValid;
}

bool Custom_Apikey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_apikey_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_apikey_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Custom_Apikey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_apikey_key_isValid && m_s_apikey_secret_isValid && true;
}

} // namespace Ezmaxapi
