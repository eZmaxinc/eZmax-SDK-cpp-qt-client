/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.9
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEzsigntemplatepackage_ResponseCompound_allOf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEzsigntemplatepackage_ResponseCompound_allOf::OAIEzsigntemplatepackage_ResponseCompound_allOf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEzsigntemplatepackage_ResponseCompound_allOf::OAIEzsigntemplatepackage_ResponseCompound_allOf() {
    this->initializeModel();
}

OAIEzsigntemplatepackage_ResponseCompound_allOf::~OAIEzsigntemplatepackage_ResponseCompound_allOf() {}

void OAIEzsigntemplatepackage_ResponseCompound_allOf::initializeModel() {

    m_a_obj_ezsigntemplatepackagesigner_isSet = false;
    m_a_obj_ezsigntemplatepackagesigner_isValid = false;

    m_a_obj_ezsigntemplatepackagemembership_isSet = false;
    m_a_obj_ezsigntemplatepackagemembership_isValid = false;
}

void OAIEzsigntemplatepackage_ResponseCompound_allOf::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEzsigntemplatepackage_ResponseCompound_allOf::fromJsonObject(QJsonObject json) {

    m_a_obj_ezsigntemplatepackagesigner_isValid = ::OpenAPI::fromJsonValue(a_obj_ezsigntemplatepackagesigner, json[QString("a_objEzsigntemplatepackagesigner")]);
    m_a_obj_ezsigntemplatepackagesigner_isSet = !json[QString("a_objEzsigntemplatepackagesigner")].isNull() && m_a_obj_ezsigntemplatepackagesigner_isValid;

    m_a_obj_ezsigntemplatepackagemembership_isValid = ::OpenAPI::fromJsonValue(a_obj_ezsigntemplatepackagemembership, json[QString("a_objEzsigntemplatepackagemembership")]);
    m_a_obj_ezsigntemplatepackagemembership_isSet = !json[QString("a_objEzsigntemplatepackagemembership")].isNull() && m_a_obj_ezsigntemplatepackagemembership_isValid;
}

QString OAIEzsigntemplatepackage_ResponseCompound_allOf::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEzsigntemplatepackage_ResponseCompound_allOf::asJsonObject() const {
    QJsonObject obj;
    if (a_obj_ezsigntemplatepackagesigner.size() > 0) {
        obj.insert(QString("a_objEzsigntemplatepackagesigner"), ::OpenAPI::toJsonValue(a_obj_ezsigntemplatepackagesigner));
    }
    if (a_obj_ezsigntemplatepackagemembership.size() > 0) {
        obj.insert(QString("a_objEzsigntemplatepackagemembership"), ::OpenAPI::toJsonValue(a_obj_ezsigntemplatepackagemembership));
    }
    return obj;
}

QList<OAIEzsigntemplatepackagesigner_ResponseCompound> OAIEzsigntemplatepackage_ResponseCompound_allOf::getAObjEzsigntemplatepackagesigner() const {
    return a_obj_ezsigntemplatepackagesigner;
}
void OAIEzsigntemplatepackage_ResponseCompound_allOf::setAObjEzsigntemplatepackagesigner(const QList<OAIEzsigntemplatepackagesigner_ResponseCompound> &a_obj_ezsigntemplatepackagesigner) {
    this->a_obj_ezsigntemplatepackagesigner = a_obj_ezsigntemplatepackagesigner;
    this->m_a_obj_ezsigntemplatepackagesigner_isSet = true;
}

bool OAIEzsigntemplatepackage_ResponseCompound_allOf::is_a_obj_ezsigntemplatepackagesigner_Set() const{
    return m_a_obj_ezsigntemplatepackagesigner_isSet;
}

bool OAIEzsigntemplatepackage_ResponseCompound_allOf::is_a_obj_ezsigntemplatepackagesigner_Valid() const{
    return m_a_obj_ezsigntemplatepackagesigner_isValid;
}

QList<OAIEzsigntemplatepackagemembership_ResponseCompound> OAIEzsigntemplatepackage_ResponseCompound_allOf::getAObjEzsigntemplatepackagemembership() const {
    return a_obj_ezsigntemplatepackagemembership;
}
void OAIEzsigntemplatepackage_ResponseCompound_allOf::setAObjEzsigntemplatepackagemembership(const QList<OAIEzsigntemplatepackagemembership_ResponseCompound> &a_obj_ezsigntemplatepackagemembership) {
    this->a_obj_ezsigntemplatepackagemembership = a_obj_ezsigntemplatepackagemembership;
    this->m_a_obj_ezsigntemplatepackagemembership_isSet = true;
}

bool OAIEzsigntemplatepackage_ResponseCompound_allOf::is_a_obj_ezsigntemplatepackagemembership_Set() const{
    return m_a_obj_ezsigntemplatepackagemembership_isSet;
}

bool OAIEzsigntemplatepackage_ResponseCompound_allOf::is_a_obj_ezsigntemplatepackagemembership_Valid() const{
    return m_a_obj_ezsigntemplatepackagemembership_isValid;
}

bool OAIEzsigntemplatepackage_ResponseCompound_allOf::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (a_obj_ezsigntemplatepackagesigner.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (a_obj_ezsigntemplatepackagemembership.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEzsigntemplatepackage_ResponseCompound_allOf::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_a_obj_ezsigntemplatepackagesigner_isValid && m_a_obj_ezsigntemplatepackagemembership_isValid && true;
}

} // namespace OpenAPI
