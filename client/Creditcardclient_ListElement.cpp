/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Creditcardclient_ListElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Creditcardclient_ListElement::Creditcardclient_ListElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Creditcardclient_ListElement::Creditcardclient_ListElement() {
    this->initializeModel();
}

Creditcardclient_ListElement::~Creditcardclient_ListElement() {}

void Creditcardclient_ListElement::initializeModel() {

    m_pki_creditcardclient_id_isSet = false;
    m_pki_creditcardclient_id_isValid = false;

    m_fki_creditcarddetail_id_isSet = false;
    m_fki_creditcarddetail_id_isValid = false;

    m_fki_creditcardtype_id_isSet = false;
    m_fki_creditcardtype_id_isValid = false;

    m_b_creditcardclientrelation_isdefault_isSet = false;
    m_b_creditcardclientrelation_isdefault_isValid = false;

    m_s_creditcardclient_description_isSet = false;
    m_s_creditcardclient_description_isValid = false;

    m_b_creditcardclient_allowedcompanypayment_isSet = false;
    m_b_creditcardclient_allowedcompanypayment_isValid = false;

    m_b_creditcardclient_allowedtranquillit_isSet = false;
    m_b_creditcardclient_allowedtranquillit_isValid = false;

    m_i_creditcarddetail_expirationmonth_isSet = false;
    m_i_creditcarddetail_expirationmonth_isValid = false;

    m_i_creditcarddetail_expirationyear_isSet = false;
    m_i_creditcarddetail_expirationyear_isValid = false;

    m_i_creditcarddetail_lastdigits_isSet = false;
    m_i_creditcarddetail_lastdigits_isValid = false;
}

void Creditcardclient_ListElement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Creditcardclient_ListElement::fromJsonObject(QJsonObject json) {

    m_pki_creditcardclient_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_creditcardclient_id, json[QString("pkiCreditcardclientID")]);
    m_pki_creditcardclient_id_isSet = !json[QString("pkiCreditcardclientID")].isNull() && m_pki_creditcardclient_id_isValid;

    m_fki_creditcarddetail_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_creditcarddetail_id, json[QString("fkiCreditcarddetailID")]);
    m_fki_creditcarddetail_id_isSet = !json[QString("fkiCreditcarddetailID")].isNull() && m_fki_creditcarddetail_id_isValid;

    m_fki_creditcardtype_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_creditcardtype_id, json[QString("fkiCreditcardtypeID")]);
    m_fki_creditcardtype_id_isSet = !json[QString("fkiCreditcardtypeID")].isNull() && m_fki_creditcardtype_id_isValid;

    m_b_creditcardclientrelation_isdefault_isValid = ::Ezmaxapi::fromJsonValue(m_b_creditcardclientrelation_isdefault, json[QString("bCreditcardclientrelationIsdefault")]);
    m_b_creditcardclientrelation_isdefault_isSet = !json[QString("bCreditcardclientrelationIsdefault")].isNull() && m_b_creditcardclientrelation_isdefault_isValid;

    m_s_creditcardclient_description_isValid = ::Ezmaxapi::fromJsonValue(m_s_creditcardclient_description, json[QString("sCreditcardclientDescription")]);
    m_s_creditcardclient_description_isSet = !json[QString("sCreditcardclientDescription")].isNull() && m_s_creditcardclient_description_isValid;

    m_b_creditcardclient_allowedcompanypayment_isValid = ::Ezmaxapi::fromJsonValue(m_b_creditcardclient_allowedcompanypayment, json[QString("bCreditcardclientAllowedcompanypayment")]);
    m_b_creditcardclient_allowedcompanypayment_isSet = !json[QString("bCreditcardclientAllowedcompanypayment")].isNull() && m_b_creditcardclient_allowedcompanypayment_isValid;

    m_b_creditcardclient_allowedtranquillit_isValid = ::Ezmaxapi::fromJsonValue(m_b_creditcardclient_allowedtranquillit, json[QString("bCreditcardclientAllowedtranquillit")]);
    m_b_creditcardclient_allowedtranquillit_isSet = !json[QString("bCreditcardclientAllowedtranquillit")].isNull() && m_b_creditcardclient_allowedtranquillit_isValid;

    m_i_creditcarddetail_expirationmonth_isValid = ::Ezmaxapi::fromJsonValue(m_i_creditcarddetail_expirationmonth, json[QString("iCreditcarddetailExpirationmonth")]);
    m_i_creditcarddetail_expirationmonth_isSet = !json[QString("iCreditcarddetailExpirationmonth")].isNull() && m_i_creditcarddetail_expirationmonth_isValid;

    m_i_creditcarddetail_expirationyear_isValid = ::Ezmaxapi::fromJsonValue(m_i_creditcarddetail_expirationyear, json[QString("iCreditcarddetailExpirationyear")]);
    m_i_creditcarddetail_expirationyear_isSet = !json[QString("iCreditcarddetailExpirationyear")].isNull() && m_i_creditcarddetail_expirationyear_isValid;

    m_i_creditcarddetail_lastdigits_isValid = ::Ezmaxapi::fromJsonValue(m_i_creditcarddetail_lastdigits, json[QString("iCreditcarddetailLastdigits")]);
    m_i_creditcarddetail_lastdigits_isSet = !json[QString("iCreditcarddetailLastdigits")].isNull() && m_i_creditcarddetail_lastdigits_isValid;
}

QString Creditcardclient_ListElement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Creditcardclient_ListElement::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_creditcardclient_id_isSet) {
        obj.insert(QString("pkiCreditcardclientID"), ::Ezmaxapi::toJsonValue(m_pki_creditcardclient_id));
    }
    if (m_fki_creditcarddetail_id_isSet) {
        obj.insert(QString("fkiCreditcarddetailID"), ::Ezmaxapi::toJsonValue(m_fki_creditcarddetail_id));
    }
    if (m_fki_creditcardtype_id_isSet) {
        obj.insert(QString("fkiCreditcardtypeID"), ::Ezmaxapi::toJsonValue(m_fki_creditcardtype_id));
    }
    if (m_b_creditcardclientrelation_isdefault_isSet) {
        obj.insert(QString("bCreditcardclientrelationIsdefault"), ::Ezmaxapi::toJsonValue(m_b_creditcardclientrelation_isdefault));
    }
    if (m_s_creditcardclient_description_isSet) {
        obj.insert(QString("sCreditcardclientDescription"), ::Ezmaxapi::toJsonValue(m_s_creditcardclient_description));
    }
    if (m_b_creditcardclient_allowedcompanypayment_isSet) {
        obj.insert(QString("bCreditcardclientAllowedcompanypayment"), ::Ezmaxapi::toJsonValue(m_b_creditcardclient_allowedcompanypayment));
    }
    if (m_b_creditcardclient_allowedtranquillit_isSet) {
        obj.insert(QString("bCreditcardclientAllowedtranquillit"), ::Ezmaxapi::toJsonValue(m_b_creditcardclient_allowedtranquillit));
    }
    if (m_i_creditcarddetail_expirationmonth_isSet) {
        obj.insert(QString("iCreditcarddetailExpirationmonth"), ::Ezmaxapi::toJsonValue(m_i_creditcarddetail_expirationmonth));
    }
    if (m_i_creditcarddetail_expirationyear_isSet) {
        obj.insert(QString("iCreditcarddetailExpirationyear"), ::Ezmaxapi::toJsonValue(m_i_creditcarddetail_expirationyear));
    }
    if (m_i_creditcarddetail_lastdigits_isSet) {
        obj.insert(QString("iCreditcarddetailLastdigits"), ::Ezmaxapi::toJsonValue(m_i_creditcarddetail_lastdigits));
    }
    return obj;
}

qint32 Creditcardclient_ListElement::getPkiCreditcardclientId() const {
    return m_pki_creditcardclient_id;
}
void Creditcardclient_ListElement::setPkiCreditcardclientId(const qint32 &pki_creditcardclient_id) {
    m_pki_creditcardclient_id = pki_creditcardclient_id;
    m_pki_creditcardclient_id_isSet = true;
}

bool Creditcardclient_ListElement::is_pki_creditcardclient_id_Set() const{
    return m_pki_creditcardclient_id_isSet;
}

bool Creditcardclient_ListElement::is_pki_creditcardclient_id_Valid() const{
    return m_pki_creditcardclient_id_isValid;
}

qint32 Creditcardclient_ListElement::getFkiCreditcarddetailId() const {
    return m_fki_creditcarddetail_id;
}
void Creditcardclient_ListElement::setFkiCreditcarddetailId(const qint32 &fki_creditcarddetail_id) {
    m_fki_creditcarddetail_id = fki_creditcarddetail_id;
    m_fki_creditcarddetail_id_isSet = true;
}

bool Creditcardclient_ListElement::is_fki_creditcarddetail_id_Set() const{
    return m_fki_creditcarddetail_id_isSet;
}

bool Creditcardclient_ListElement::is_fki_creditcarddetail_id_Valid() const{
    return m_fki_creditcarddetail_id_isValid;
}

qint32 Creditcardclient_ListElement::getFkiCreditcardtypeId() const {
    return m_fki_creditcardtype_id;
}
void Creditcardclient_ListElement::setFkiCreditcardtypeId(const qint32 &fki_creditcardtype_id) {
    m_fki_creditcardtype_id = fki_creditcardtype_id;
    m_fki_creditcardtype_id_isSet = true;
}

bool Creditcardclient_ListElement::is_fki_creditcardtype_id_Set() const{
    return m_fki_creditcardtype_id_isSet;
}

bool Creditcardclient_ListElement::is_fki_creditcardtype_id_Valid() const{
    return m_fki_creditcardtype_id_isValid;
}

bool Creditcardclient_ListElement::isBCreditcardclientrelationIsdefault() const {
    return m_b_creditcardclientrelation_isdefault;
}
void Creditcardclient_ListElement::setBCreditcardclientrelationIsdefault(const bool &b_creditcardclientrelation_isdefault) {
    m_b_creditcardclientrelation_isdefault = b_creditcardclientrelation_isdefault;
    m_b_creditcardclientrelation_isdefault_isSet = true;
}

bool Creditcardclient_ListElement::is_b_creditcardclientrelation_isdefault_Set() const{
    return m_b_creditcardclientrelation_isdefault_isSet;
}

bool Creditcardclient_ListElement::is_b_creditcardclientrelation_isdefault_Valid() const{
    return m_b_creditcardclientrelation_isdefault_isValid;
}

QString Creditcardclient_ListElement::getSCreditcardclientDescription() const {
    return m_s_creditcardclient_description;
}
void Creditcardclient_ListElement::setSCreditcardclientDescription(const QString &s_creditcardclient_description) {
    m_s_creditcardclient_description = s_creditcardclient_description;
    m_s_creditcardclient_description_isSet = true;
}

bool Creditcardclient_ListElement::is_s_creditcardclient_description_Set() const{
    return m_s_creditcardclient_description_isSet;
}

bool Creditcardclient_ListElement::is_s_creditcardclient_description_Valid() const{
    return m_s_creditcardclient_description_isValid;
}

bool Creditcardclient_ListElement::isBCreditcardclientAllowedcompanypayment() const {
    return m_b_creditcardclient_allowedcompanypayment;
}
void Creditcardclient_ListElement::setBCreditcardclientAllowedcompanypayment(const bool &b_creditcardclient_allowedcompanypayment) {
    m_b_creditcardclient_allowedcompanypayment = b_creditcardclient_allowedcompanypayment;
    m_b_creditcardclient_allowedcompanypayment_isSet = true;
}

bool Creditcardclient_ListElement::is_b_creditcardclient_allowedcompanypayment_Set() const{
    return m_b_creditcardclient_allowedcompanypayment_isSet;
}

bool Creditcardclient_ListElement::is_b_creditcardclient_allowedcompanypayment_Valid() const{
    return m_b_creditcardclient_allowedcompanypayment_isValid;
}

bool Creditcardclient_ListElement::isBCreditcardclientAllowedtranquillit() const {
    return m_b_creditcardclient_allowedtranquillit;
}
void Creditcardclient_ListElement::setBCreditcardclientAllowedtranquillit(const bool &b_creditcardclient_allowedtranquillit) {
    m_b_creditcardclient_allowedtranquillit = b_creditcardclient_allowedtranquillit;
    m_b_creditcardclient_allowedtranquillit_isSet = true;
}

bool Creditcardclient_ListElement::is_b_creditcardclient_allowedtranquillit_Set() const{
    return m_b_creditcardclient_allowedtranquillit_isSet;
}

bool Creditcardclient_ListElement::is_b_creditcardclient_allowedtranquillit_Valid() const{
    return m_b_creditcardclient_allowedtranquillit_isValid;
}

qint32 Creditcardclient_ListElement::getICreditcarddetailExpirationmonth() const {
    return m_i_creditcarddetail_expirationmonth;
}
void Creditcardclient_ListElement::setICreditcarddetailExpirationmonth(const qint32 &i_creditcarddetail_expirationmonth) {
    m_i_creditcarddetail_expirationmonth = i_creditcarddetail_expirationmonth;
    m_i_creditcarddetail_expirationmonth_isSet = true;
}

bool Creditcardclient_ListElement::is_i_creditcarddetail_expirationmonth_Set() const{
    return m_i_creditcarddetail_expirationmonth_isSet;
}

bool Creditcardclient_ListElement::is_i_creditcarddetail_expirationmonth_Valid() const{
    return m_i_creditcarddetail_expirationmonth_isValid;
}

qint32 Creditcardclient_ListElement::getICreditcarddetailExpirationyear() const {
    return m_i_creditcarddetail_expirationyear;
}
void Creditcardclient_ListElement::setICreditcarddetailExpirationyear(const qint32 &i_creditcarddetail_expirationyear) {
    m_i_creditcarddetail_expirationyear = i_creditcarddetail_expirationyear;
    m_i_creditcarddetail_expirationyear_isSet = true;
}

bool Creditcardclient_ListElement::is_i_creditcarddetail_expirationyear_Set() const{
    return m_i_creditcarddetail_expirationyear_isSet;
}

bool Creditcardclient_ListElement::is_i_creditcarddetail_expirationyear_Valid() const{
    return m_i_creditcarddetail_expirationyear_isValid;
}

qint32 Creditcardclient_ListElement::getICreditcarddetailLastdigits() const {
    return m_i_creditcarddetail_lastdigits;
}
void Creditcardclient_ListElement::setICreditcarddetailLastdigits(const qint32 &i_creditcarddetail_lastdigits) {
    m_i_creditcarddetail_lastdigits = i_creditcarddetail_lastdigits;
    m_i_creditcarddetail_lastdigits_isSet = true;
}

bool Creditcardclient_ListElement::is_i_creditcarddetail_lastdigits_Set() const{
    return m_i_creditcarddetail_lastdigits_isSet;
}

bool Creditcardclient_ListElement::is_i_creditcarddetail_lastdigits_Valid() const{
    return m_i_creditcarddetail_lastdigits_isValid;
}

bool Creditcardclient_ListElement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_creditcardclient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_creditcarddetail_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_creditcardtype_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_creditcardclientrelation_isdefault_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_creditcardclient_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_creditcardclient_allowedcompanypayment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_creditcardclient_allowedtranquillit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_creditcarddetail_expirationmonth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_creditcarddetail_expirationyear_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_creditcarddetail_lastdigits_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Creditcardclient_ListElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_creditcardclient_id_isValid && m_fki_creditcarddetail_id_isValid && m_fki_creditcardtype_id_isValid && m_b_creditcardclientrelation_isdefault_isValid && m_s_creditcardclient_description_isValid && m_b_creditcardclient_allowedcompanypayment_isValid && m_b_creditcardclient_allowedtranquillit_isValid && m_i_creditcarddetail_expirationmonth_isValid && m_i_creditcarddetail_expirationyear_isValid && m_i_creditcarddetail_lastdigits_isValid && true;
}

} // namespace Ezmaxapi
