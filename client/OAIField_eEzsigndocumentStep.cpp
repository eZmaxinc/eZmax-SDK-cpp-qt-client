/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.29
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIField_eEzsigndocumentStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIField_eEzsigndocumentStep::OAIField_eEzsigndocumentStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIField_eEzsigndocumentStep::OAIField_eEzsigndocumentStep() {
    this->initializeModel();
}

OAIField_eEzsigndocumentStep::~OAIField_eEzsigndocumentStep() {}

void OAIField_eEzsigndocumentStep::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIField_eEzsigndocumentStep::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIField_eEzsigndocumentStep::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Unsent", Qt::CaseInsensitive) == 0) {
        m_value = eOAIField_eEzsigndocumentStep::UNSENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unsigned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIField_eEzsigndocumentStep::UNSIGNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PartiallySigned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIField_eEzsigndocumentStep::PARTIALLYSIGNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIField_eEzsigndocumentStep::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIField_eEzsigndocumentStep::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIField_eEzsigndocumentStep::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIField_eEzsigndocumentStep::UNSENT:
            val = "Unsent";
            break;
        case eOAIField_eEzsigndocumentStep::UNSIGNED:
            val = "Unsigned";
            break;
        case eOAIField_eEzsigndocumentStep::PARTIALLYSIGNED:
            val = "PartiallySigned";
            break;
        case eOAIField_eEzsigndocumentStep::COMPLETED:
            val = "Completed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIField_eEzsigndocumentStep::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIField_eEzsigndocumentStep::eOAIField_eEzsigndocumentStep OAIField_eEzsigndocumentStep::getValue() const {
    return m_value;
}

void OAIField_eEzsigndocumentStep::setValue(const OAIField_eEzsigndocumentStep::eOAIField_eEzsigndocumentStep& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIField_eEzsigndocumentStep::isSet() const {
    
    return m_value_isSet;
}

bool OAIField_eEzsigndocumentStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
