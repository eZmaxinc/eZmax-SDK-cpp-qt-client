/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommunicationimage_ResponseCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommunicationimage_ResponseCompound::OAICommunicationimage_ResponseCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommunicationimage_ResponseCompound::OAICommunicationimage_ResponseCompound() {
    this->initializeModel();
}

OAICommunicationimage_ResponseCompound::~OAICommunicationimage_ResponseCompound() {}

void OAICommunicationimage_ResponseCompound::initializeModel() {

    m_pki_communicationimage_id_isSet = false;
    m_pki_communicationimage_id_isValid = false;

    m_fki_image_id_isSet = false;
    m_fki_image_id_isValid = false;

    m_s_communicationimage_name_isSet = false;
    m_s_communicationimage_name_isValid = false;
}

void OAICommunicationimage_ResponseCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommunicationimage_ResponseCompound::fromJsonObject(QJsonObject json) {

    m_pki_communicationimage_id_isValid = ::OpenAPI::fromJsonValue(pki_communicationimage_id, json[QString("pkiCommunicationimageID")]);
    m_pki_communicationimage_id_isSet = !json[QString("pkiCommunicationimageID")].isNull() && m_pki_communicationimage_id_isValid;

    m_fki_image_id_isValid = ::OpenAPI::fromJsonValue(fki_image_id, json[QString("fkiImageID")]);
    m_fki_image_id_isSet = !json[QString("fkiImageID")].isNull() && m_fki_image_id_isValid;

    m_s_communicationimage_name_isValid = ::OpenAPI::fromJsonValue(s_communicationimage_name, json[QString("sCommunicationimageName")]);
    m_s_communicationimage_name_isSet = !json[QString("sCommunicationimageName")].isNull() && m_s_communicationimage_name_isValid;
}

QString OAICommunicationimage_ResponseCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommunicationimage_ResponseCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_communicationimage_id_isSet) {
        obj.insert(QString("pkiCommunicationimageID"), ::OpenAPI::toJsonValue(pki_communicationimage_id));
    }
    if (m_fki_image_id_isSet) {
        obj.insert(QString("fkiImageID"), ::OpenAPI::toJsonValue(fki_image_id));
    }
    if (m_s_communicationimage_name_isSet) {
        obj.insert(QString("sCommunicationimageName"), ::OpenAPI::toJsonValue(s_communicationimage_name));
    }
    return obj;
}

qint32 OAICommunicationimage_ResponseCompound::getPkiCommunicationimageId() const {
    return pki_communicationimage_id;
}
void OAICommunicationimage_ResponseCompound::setPkiCommunicationimageId(const qint32 &pki_communicationimage_id) {
    this->pki_communicationimage_id = pki_communicationimage_id;
    this->m_pki_communicationimage_id_isSet = true;
}

bool OAICommunicationimage_ResponseCompound::is_pki_communicationimage_id_Set() const{
    return m_pki_communicationimage_id_isSet;
}

bool OAICommunicationimage_ResponseCompound::is_pki_communicationimage_id_Valid() const{
    return m_pki_communicationimage_id_isValid;
}

qint32 OAICommunicationimage_ResponseCompound::getFkiImageId() const {
    return fki_image_id;
}
void OAICommunicationimage_ResponseCompound::setFkiImageId(const qint32 &fki_image_id) {
    this->fki_image_id = fki_image_id;
    this->m_fki_image_id_isSet = true;
}

bool OAICommunicationimage_ResponseCompound::is_fki_image_id_Set() const{
    return m_fki_image_id_isSet;
}

bool OAICommunicationimage_ResponseCompound::is_fki_image_id_Valid() const{
    return m_fki_image_id_isValid;
}

QString OAICommunicationimage_ResponseCompound::getSCommunicationimageName() const {
    return s_communicationimage_name;
}
void OAICommunicationimage_ResponseCompound::setSCommunicationimageName(const QString &s_communicationimage_name) {
    this->s_communicationimage_name = s_communicationimage_name;
    this->m_s_communicationimage_name_isSet = true;
}

bool OAICommunicationimage_ResponseCompound::is_s_communicationimage_name_Set() const{
    return m_s_communicationimage_name_isSet;
}

bool OAICommunicationimage_ResponseCompound::is_s_communicationimage_name_Valid() const{
    return m_s_communicationimage_name_isValid;
}

bool OAICommunicationimage_ResponseCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_communicationimage_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_image_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_communicationimage_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommunicationimage_ResponseCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_communicationimage_id_isValid && m_fki_image_id_isValid && true;
}

} // namespace OpenAPI
