/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Custom_Communicationsender_Response.h
 *
 * Generic Communicationsender Response
 */

#ifndef Custom_Communicationsender_Response_H
#define Custom_Communicationsender_Response_H

#include <QJsonObject>

#include "Custom_ContactName_Response.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Custom_ContactName_Response;

class Custom_Communicationsender_Response : public Object {
public:
    Custom_Communicationsender_Response();
    Custom_Communicationsender_Response(QString json);
    ~Custom_Communicationsender_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFkiAgentId() const;
    void setFkiAgentId(const qint32 &fki_agent_id);
    bool is_fki_agent_id_Set() const;
    bool is_fki_agent_id_Valid() const;

    qint32 getFkiBrokerId() const;
    void setFkiBrokerId(const qint32 &fki_broker_id);
    bool is_fki_broker_id_Set() const;
    bool is_fki_broker_id_Valid() const;

    qint32 getFkiUserId() const;
    void setFkiUserId(const qint32 &fki_user_id);
    bool is_fki_user_id_Set() const;
    bool is_fki_user_id_Valid() const;

    qint32 getFkiMailboxsharedId() const;
    void setFkiMailboxsharedId(const qint32 &fki_mailboxshared_id);
    bool is_fki_mailboxshared_id_Set() const;
    bool is_fki_mailboxshared_id_Valid() const;

    QString getECommunicationsenderObjecttype() const;
    void setECommunicationsenderObjecttype(const QString &e_communicationsender_objecttype);
    bool is_e_communicationsender_objecttype_Set() const;
    bool is_e_communicationsender_objecttype_Valid() const;

    Custom_ContactName_Response getObjContactName() const;
    void setObjContactName(const Custom_ContactName_Response &obj_contact_name);
    bool is_obj_contact_name_Set() const;
    bool is_obj_contact_name_Valid() const;

    QString getSEmailAddress() const;
    void setSEmailAddress(const QString &s_email_address);
    bool is_s_email_address_Set() const;
    bool is_s_email_address_Valid() const;

    QString getSPhoneE164() const;
    void setSPhoneE164(const QString &s_phone_e164);
    bool is_s_phone_e164_Set() const;
    bool is_s_phone_e164_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_fki_agent_id;
    bool m_fki_agent_id_isSet;
    bool m_fki_agent_id_isValid;

    qint32 m_fki_broker_id;
    bool m_fki_broker_id_isSet;
    bool m_fki_broker_id_isValid;

    qint32 m_fki_user_id;
    bool m_fki_user_id_isSet;
    bool m_fki_user_id_isValid;

    qint32 m_fki_mailboxshared_id;
    bool m_fki_mailboxshared_id_isSet;
    bool m_fki_mailboxshared_id_isValid;

    QString m_e_communicationsender_objecttype;
    bool m_e_communicationsender_objecttype_isSet;
    bool m_e_communicationsender_objecttype_isValid;

    Custom_ContactName_Response m_obj_contact_name;
    bool m_obj_contact_name_isSet;
    bool m_obj_contact_name_isValid;

    QString m_s_email_address;
    bool m_s_email_address_isSet;
    bool m_s_email_address_isValid;

    QString m_s_phone_e164;
    bool m_s_phone_e164_isSet;
    bool m_s_phone_e164_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Custom_Communicationsender_Response)

#endif // Custom_Communicationsender_Response_H
