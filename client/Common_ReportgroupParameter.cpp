/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Common_ReportgroupParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Common_ReportgroupParameter::Common_ReportgroupParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Common_ReportgroupParameter::Common_ReportgroupParameter() {
    this->initializeModel();
}

Common_ReportgroupParameter::~Common_ReportgroupParameter() {}

void Common_ReportgroupParameter::initializeModel() {

    m_s_reportgroup_parameter_name_isSet = false;
    m_s_reportgroup_parameter_name_isValid = false;

    m_s_reportgroup_parameter_value_isSet = false;
    m_s_reportgroup_parameter_value_isValid = false;

    m_a_s_reportgroup_parameter_value_isSet = false;
    m_a_s_reportgroup_parameter_value_isValid = false;
}

void Common_ReportgroupParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Common_ReportgroupParameter::fromJsonObject(QJsonObject json) {

    m_s_reportgroup_parameter_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_reportgroup_parameter_name, json[QString("sReportgroupParameterName")]);
    m_s_reportgroup_parameter_name_isSet = !json[QString("sReportgroupParameterName")].isNull() && m_s_reportgroup_parameter_name_isValid;

    m_s_reportgroup_parameter_value_isValid = ::Ezmaxapi::fromJsonValue(m_s_reportgroup_parameter_value, json[QString("sReportgroupParameterValue")]);
    m_s_reportgroup_parameter_value_isSet = !json[QString("sReportgroupParameterValue")].isNull() && m_s_reportgroup_parameter_value_isValid;

    m_a_s_reportgroup_parameter_value_isValid = ::Ezmaxapi::fromJsonValue(m_a_s_reportgroup_parameter_value, json[QString("a_sReportgroupParameterValue")]);
    m_a_s_reportgroup_parameter_value_isSet = !json[QString("a_sReportgroupParameterValue")].isNull() && m_a_s_reportgroup_parameter_value_isValid;
}

QString Common_ReportgroupParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Common_ReportgroupParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_s_reportgroup_parameter_name_isSet) {
        obj.insert(QString("sReportgroupParameterName"), ::Ezmaxapi::toJsonValue(m_s_reportgroup_parameter_name));
    }
    if (m_s_reportgroup_parameter_value_isSet) {
        obj.insert(QString("sReportgroupParameterValue"), ::Ezmaxapi::toJsonValue(m_s_reportgroup_parameter_value));
    }
    if (m_a_s_reportgroup_parameter_value.size() > 0) {
        obj.insert(QString("a_sReportgroupParameterValue"), ::Ezmaxapi::toJsonValue(m_a_s_reportgroup_parameter_value));
    }
    return obj;
}

QString Common_ReportgroupParameter::getSReportgroupParameterName() const {
    return m_s_reportgroup_parameter_name;
}
void Common_ReportgroupParameter::setSReportgroupParameterName(const QString &s_reportgroup_parameter_name) {
    m_s_reportgroup_parameter_name = s_reportgroup_parameter_name;
    m_s_reportgroup_parameter_name_isSet = true;
}

bool Common_ReportgroupParameter::is_s_reportgroup_parameter_name_Set() const{
    return m_s_reportgroup_parameter_name_isSet;
}

bool Common_ReportgroupParameter::is_s_reportgroup_parameter_name_Valid() const{
    return m_s_reportgroup_parameter_name_isValid;
}

QString Common_ReportgroupParameter::getSReportgroupParameterValue() const {
    return m_s_reportgroup_parameter_value;
}
void Common_ReportgroupParameter::setSReportgroupParameterValue(const QString &s_reportgroup_parameter_value) {
    m_s_reportgroup_parameter_value = s_reportgroup_parameter_value;
    m_s_reportgroup_parameter_value_isSet = true;
}

bool Common_ReportgroupParameter::is_s_reportgroup_parameter_value_Set() const{
    return m_s_reportgroup_parameter_value_isSet;
}

bool Common_ReportgroupParameter::is_s_reportgroup_parameter_value_Valid() const{
    return m_s_reportgroup_parameter_value_isValid;
}

QList<QString> Common_ReportgroupParameter::getASReportgroupParameterValue() const {
    return m_a_s_reportgroup_parameter_value;
}
void Common_ReportgroupParameter::setASReportgroupParameterValue(const QList<QString> &a_s_reportgroup_parameter_value) {
    m_a_s_reportgroup_parameter_value = a_s_reportgroup_parameter_value;
    m_a_s_reportgroup_parameter_value_isSet = true;
}

bool Common_ReportgroupParameter::is_a_s_reportgroup_parameter_value_Set() const{
    return m_a_s_reportgroup_parameter_value_isSet;
}

bool Common_ReportgroupParameter::is_a_s_reportgroup_parameter_value_Valid() const{
    return m_a_s_reportgroup_parameter_value_isValid;
}

bool Common_ReportgroupParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_reportgroup_parameter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_reportgroup_parameter_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_s_reportgroup_parameter_value.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Common_ReportgroupParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_reportgroup_parameter_name_isValid && true;
}

} // namespace Ezmaxapi
