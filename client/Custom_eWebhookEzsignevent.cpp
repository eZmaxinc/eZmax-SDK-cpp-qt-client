/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_eWebhookEzsignevent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_eWebhookEzsignevent::Custom_eWebhookEzsignevent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_eWebhookEzsignevent::Custom_eWebhookEzsignevent() {
    this->initializeModel();
}

Custom_eWebhookEzsignevent::~Custom_eWebhookEzsignevent() {}

void Custom_eWebhookEzsignevent::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eCustom_eWebhookEzsignevent::INVALID_VALUE_OPENAPI_GENERATED;
}

void Custom_eWebhookEzsignevent::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DocumentCompleted", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::DOCUMENTCOMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DocumentFormCompleted", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::DOCUMENTFORMCOMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DocumentUnsent", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::DOCUMENTUNSENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EzsignsignerAcceptclause", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::EZSIGNSIGNERACCEPTCLAUSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EzsignsignerConnect", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::EZSIGNSIGNERCONNECT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FolderCompleted", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::FOLDERCOMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FolderDisposed", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::FOLDERDISPOSED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FolderSent", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::FOLDERSENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FolderUnsent", Qt::CaseInsensitive) == 0) {
        m_value = eCustom_eWebhookEzsignevent::FOLDERUNSENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void Custom_eWebhookEzsignevent::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString Custom_eWebhookEzsignevent::asJson() const {
    
    QString val;
    switch (m_value){
        case eCustom_eWebhookEzsignevent::DOCUMENTCOMPLETED:
            val = "DocumentCompleted";
            break;
        case eCustom_eWebhookEzsignevent::DOCUMENTFORMCOMPLETED:
            val = "DocumentFormCompleted";
            break;
        case eCustom_eWebhookEzsignevent::DOCUMENTUNSENT:
            val = "DocumentUnsent";
            break;
        case eCustom_eWebhookEzsignevent::EZSIGNSIGNERACCEPTCLAUSE:
            val = "EzsignsignerAcceptclause";
            break;
        case eCustom_eWebhookEzsignevent::EZSIGNSIGNERCONNECT:
            val = "EzsignsignerConnect";
            break;
        case eCustom_eWebhookEzsignevent::FOLDERCOMPLETED:
            val = "FolderCompleted";
            break;
        case eCustom_eWebhookEzsignevent::FOLDERDISPOSED:
            val = "FolderDisposed";
            break;
        case eCustom_eWebhookEzsignevent::FOLDERSENT:
            val = "FolderSent";
            break;
        case eCustom_eWebhookEzsignevent::FOLDERUNSENT:
            val = "FolderUnsent";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue Custom_eWebhookEzsignevent::asJsonValue() const {
    
    return QJsonValue(asJson());
}


Custom_eWebhookEzsignevent::eCustom_eWebhookEzsignevent Custom_eWebhookEzsignevent::getValue() const {
    return m_value;
}

void Custom_eWebhookEzsignevent::setValue(const Custom_eWebhookEzsignevent::eCustom_eWebhookEzsignevent& value){
    m_value = value;
    m_value_isSet = true;
}
bool Custom_eWebhookEzsignevent::isSet() const {
    
    return m_value_isSet;
}

bool Custom_eWebhookEzsignevent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace Ezmaxapi
