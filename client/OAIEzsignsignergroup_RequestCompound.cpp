/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEzsignsignergroup_RequestCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEzsignsignergroup_RequestCompound::OAIEzsignsignergroup_RequestCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEzsignsignergroup_RequestCompound::OAIEzsignsignergroup_RequestCompound() {
    this->initializeModel();
}

OAIEzsignsignergroup_RequestCompound::~OAIEzsignsignergroup_RequestCompound() {}

void OAIEzsignsignergroup_RequestCompound::initializeModel() {

    m_pki_ezsignsignergroup_id_isSet = false;
    m_pki_ezsignsignergroup_id_isValid = false;

    m_fki_ezsignfolder_id_isSet = false;
    m_fki_ezsignfolder_id_isValid = false;

    m_obj_ezsignsignergroup_description_isSet = false;
    m_obj_ezsignsignergroup_description_isValid = false;
}

void OAIEzsignsignergroup_RequestCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEzsignsignergroup_RequestCompound::fromJsonObject(QJsonObject json) {

    m_pki_ezsignsignergroup_id_isValid = ::OpenAPI::fromJsonValue(m_pki_ezsignsignergroup_id, json[QString("pkiEzsignsignergroupID")]);
    m_pki_ezsignsignergroup_id_isSet = !json[QString("pkiEzsignsignergroupID")].isNull() && m_pki_ezsignsignergroup_id_isValid;

    m_fki_ezsignfolder_id_isValid = ::OpenAPI::fromJsonValue(m_fki_ezsignfolder_id, json[QString("fkiEzsignfolderID")]);
    m_fki_ezsignfolder_id_isSet = !json[QString("fkiEzsignfolderID")].isNull() && m_fki_ezsignfolder_id_isValid;

    m_obj_ezsignsignergroup_description_isValid = ::OpenAPI::fromJsonValue(m_obj_ezsignsignergroup_description, json[QString("objEzsignsignergroupDescription")]);
    m_obj_ezsignsignergroup_description_isSet = !json[QString("objEzsignsignergroupDescription")].isNull() && m_obj_ezsignsignergroup_description_isValid;
}

QString OAIEzsignsignergroup_RequestCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEzsignsignergroup_RequestCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsignsignergroup_id_isSet) {
        obj.insert(QString("pkiEzsignsignergroupID"), ::OpenAPI::toJsonValue(m_pki_ezsignsignergroup_id));
    }
    if (m_fki_ezsignfolder_id_isSet) {
        obj.insert(QString("fkiEzsignfolderID"), ::OpenAPI::toJsonValue(m_fki_ezsignfolder_id));
    }
    if (m_obj_ezsignsignergroup_description.isSet()) {
        obj.insert(QString("objEzsignsignergroupDescription"), ::OpenAPI::toJsonValue(m_obj_ezsignsignergroup_description));
    }
    return obj;
}

qint32 OAIEzsignsignergroup_RequestCompound::getPkiEzsignsignergroupId() const {
    return m_pki_ezsignsignergroup_id;
}
void OAIEzsignsignergroup_RequestCompound::setPkiEzsignsignergroupId(const qint32 &pki_ezsignsignergroup_id) {
    m_pki_ezsignsignergroup_id = pki_ezsignsignergroup_id;
    m_pki_ezsignsignergroup_id_isSet = true;
}

bool OAIEzsignsignergroup_RequestCompound::is_pki_ezsignsignergroup_id_Set() const{
    return m_pki_ezsignsignergroup_id_isSet;
}

bool OAIEzsignsignergroup_RequestCompound::is_pki_ezsignsignergroup_id_Valid() const{
    return m_pki_ezsignsignergroup_id_isValid;
}

qint32 OAIEzsignsignergroup_RequestCompound::getFkiEzsignfolderId() const {
    return m_fki_ezsignfolder_id;
}
void OAIEzsignsignergroup_RequestCompound::setFkiEzsignfolderId(const qint32 &fki_ezsignfolder_id) {
    m_fki_ezsignfolder_id = fki_ezsignfolder_id;
    m_fki_ezsignfolder_id_isSet = true;
}

bool OAIEzsignsignergroup_RequestCompound::is_fki_ezsignfolder_id_Set() const{
    return m_fki_ezsignfolder_id_isSet;
}

bool OAIEzsignsignergroup_RequestCompound::is_fki_ezsignfolder_id_Valid() const{
    return m_fki_ezsignfolder_id_isValid;
}

OAIMultilingual_EzsignsignergroupDescription OAIEzsignsignergroup_RequestCompound::getObjEzsignsignergroupDescription() const {
    return m_obj_ezsignsignergroup_description;
}
void OAIEzsignsignergroup_RequestCompound::setObjEzsignsignergroupDescription(const OAIMultilingual_EzsignsignergroupDescription &obj_ezsignsignergroup_description) {
    m_obj_ezsignsignergroup_description = obj_ezsignsignergroup_description;
    m_obj_ezsignsignergroup_description_isSet = true;
}

bool OAIEzsignsignergroup_RequestCompound::is_obj_ezsignsignergroup_description_Set() const{
    return m_obj_ezsignsignergroup_description_isSet;
}

bool OAIEzsignsignergroup_RequestCompound::is_obj_ezsignsignergroup_description_Valid() const{
    return m_obj_ezsignsignergroup_description_isValid;
}

bool OAIEzsignsignergroup_RequestCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsignsignergroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsignfolder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_ezsignsignergroup_description.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEzsignsignergroup_RequestCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fki_ezsignfolder_id_isValid && m_obj_ezsignsignergroup_description_isValid && true;
}

} // namespace OpenAPI
