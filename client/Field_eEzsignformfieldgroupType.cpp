/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Field_eEzsignformfieldgroupType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Field_eEzsignformfieldgroupType::Field_eEzsignformfieldgroupType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Field_eEzsignformfieldgroupType::Field_eEzsignformfieldgroupType() {
    this->initializeModel();
}

Field_eEzsignformfieldgroupType::~Field_eEzsignformfieldgroupType() {}

void Field_eEzsignformfieldgroupType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eField_eEzsignformfieldgroupType::INVALID_VALUE_OPENAPI_GENERATED;
}

void Field_eEzsignformfieldgroupType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Text", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::TEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Textarea", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::TEXTAREA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Dropdown", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::DROPDOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Radio", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::RADIO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Checkbox", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::CHECKBOX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Number", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Date", Qt::CaseInsensitive) == 0) {
        m_value = eField_eEzsignformfieldgroupType::DATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void Field_eEzsignformfieldgroupType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString Field_eEzsignformfieldgroupType::asJson() const {
    
    QString val;
    switch (m_value){
        case eField_eEzsignformfieldgroupType::TEXT:
            val = "Text";
            break;
        case eField_eEzsignformfieldgroupType::TEXTAREA:
            val = "Textarea";
            break;
        case eField_eEzsignformfieldgroupType::DROPDOWN:
            val = "Dropdown";
            break;
        case eField_eEzsignformfieldgroupType::RADIO:
            val = "Radio";
            break;
        case eField_eEzsignformfieldgroupType::CHECKBOX:
            val = "Checkbox";
            break;
        case eField_eEzsignformfieldgroupType::NUMBER:
            val = "Number";
            break;
        case eField_eEzsignformfieldgroupType::DATE:
            val = "Date";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue Field_eEzsignformfieldgroupType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


Field_eEzsignformfieldgroupType::eField_eEzsignformfieldgroupType Field_eEzsignformfieldgroupType::getValue() const {
    return m_value;
}

void Field_eEzsignformfieldgroupType::setValue(const Field_eEzsignformfieldgroupType::eField_eEzsignformfieldgroupType& value){
    m_value = value;
    m_value_isSet = true;
}
bool Field_eEzsignformfieldgroupType::isSet() const {
    
    return m_value_isSet;
}

bool Field_eEzsignformfieldgroupType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace Ezmaxapi
