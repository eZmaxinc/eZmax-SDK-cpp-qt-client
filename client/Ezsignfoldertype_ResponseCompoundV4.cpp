/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsignfoldertype_ResponseCompoundV4.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsignfoldertype_ResponseCompoundV4::Ezsignfoldertype_ResponseCompoundV4(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsignfoldertype_ResponseCompoundV4::Ezsignfoldertype_ResponseCompoundV4() {
    this->initializeModel();
}

Ezsignfoldertype_ResponseCompoundV4::~Ezsignfoldertype_ResponseCompoundV4() {}

void Ezsignfoldertype_ResponseCompoundV4::initializeModel() {

    m_pki_ezsignfoldertype_id_isSet = false;
    m_pki_ezsignfoldertype_id_isValid = false;

    m_obj_ezsignfoldertype_name_isSet = false;
    m_obj_ezsignfoldertype_name_isValid = false;

    m_fki_branding_id_isSet = false;
    m_fki_branding_id_isValid = false;

    m_fki_billingentityinternal_id_isSet = false;
    m_fki_billingentityinternal_id_isValid = false;

    m_fki_ezsigntsarequirement_id_isSet = false;
    m_fki_ezsigntsarequirement_id_isValid = false;

    m_fki_font_id_annotation_isSet = false;
    m_fki_font_id_annotation_isValid = false;

    m_fki_font_id_formfield_isSet = false;
    m_fki_font_id_formfield_isValid = false;

    m_fki_font_id_signature_isSet = false;
    m_fki_font_id_signature_isValid = false;

    m_fki_pdfalevel_id_convert_isSet = false;
    m_fki_pdfalevel_id_convert_isValid = false;

    m_e_ezsignfoldertype_documentdependency_isSet = false;
    m_e_ezsignfoldertype_documentdependency_isValid = false;

    m_s_branding_description_x_isSet = false;
    m_s_branding_description_x_isValid = false;

    m_s_billingentityinternal_description_x_isSet = false;
    m_s_billingentityinternal_description_x_isValid = false;

    m_s_ezsigntsarequirement_description_x_isSet = false;
    m_s_ezsigntsarequirement_description_x_isValid = false;

    m_s_email_address_signed_isSet = false;
    m_s_email_address_signed_isValid = false;

    m_s_email_address_summary_isSet = false;
    m_s_email_address_summary_isValid = false;

    m_e_ezsignfoldertype_pdfarequirement_isSet = false;
    m_e_ezsignfoldertype_pdfarequirement_isValid = false;

    m_e_ezsignfoldertype_pdfanoncompliantaction_isSet = false;
    m_e_ezsignfoldertype_pdfanoncompliantaction_isValid = false;

    m_e_ezsignfoldertype_privacylevel_isSet = false;
    m_e_ezsignfoldertype_privacylevel_isValid = false;

    m_i_ezsignfoldertype_fontsizeannotation_isSet = false;
    m_i_ezsignfoldertype_fontsizeannotation_isValid = false;

    m_i_ezsignfoldertype_fontsizeformfield_isSet = false;
    m_i_ezsignfoldertype_fontsizeformfield_isValid = false;

    m_i_ezsignfoldertype_sendreminderfirstdays_isSet = false;
    m_i_ezsignfoldertype_sendreminderfirstdays_isValid = false;

    m_i_ezsignfoldertype_sendreminderotherdays_isSet = false;
    m_i_ezsignfoldertype_sendreminderotherdays_isValid = false;

    m_i_ezsignfoldertype_archivaldays_isSet = false;
    m_i_ezsignfoldertype_archivaldays_isValid = false;

    m_e_ezsignfoldertype_disposal_isSet = false;
    m_e_ezsignfoldertype_disposal_isValid = false;

    m_e_ezsignfoldertype_completion_isSet = false;
    m_e_ezsignfoldertype_completion_isValid = false;

    m_i_ezsignfoldertype_disposaldays_isSet = false;
    m_i_ezsignfoldertype_disposaldays_isValid = false;

    m_i_ezsignfoldertype_deadlinedays_isSet = false;
    m_i_ezsignfoldertype_deadlinedays_isValid = false;

    m_b_ezsignfoldertype_prematurelyendautomatically_isSet = false;
    m_b_ezsignfoldertype_prematurelyendautomatically_isValid = false;

    m_i_ezsignfoldertype_prematurelyendautomaticallydays_isSet = false;
    m_i_ezsignfoldertype_prematurelyendautomaticallydays_isValid = false;

    m_b_ezsignfoldertype_automaticsignature_isSet = false;
    m_b_ezsignfoldertype_automaticsignature_isValid = false;

    m_b_ezsignfoldertype_delegate_isSet = false;
    m_b_ezsignfoldertype_delegate_isValid = false;

    m_b_ezsignfoldertype_discussion_isSet = false;
    m_b_ezsignfoldertype_discussion_isValid = false;

    m_b_ezsignfoldertype_logrecipientinproof_isSet = false;
    m_b_ezsignfoldertype_logrecipientinproof_isValid = false;

    m_b_ezsignfoldertype_reassignezsignsigner_isSet = false;
    m_b_ezsignfoldertype_reassignezsignsigner_isValid = false;

    m_b_ezsignfoldertype_reassignuser_isSet = false;
    m_b_ezsignfoldertype_reassignuser_isValid = false;

    m_b_ezsignfoldertype_reassigngroup_isSet = false;
    m_b_ezsignfoldertype_reassigngroup_isValid = false;

    m_b_ezsignfoldertype_sendsignedtoezsignsigner_isSet = false;
    m_b_ezsignfoldertype_sendsignedtoezsignsigner_isValid = false;

    m_b_ezsignfoldertype_sendsignedtouser_isSet = false;
    m_b_ezsignfoldertype_sendsignedtouser_isValid = false;

    m_b_ezsignfoldertype_sendattachmentezsignsigner_isSet = false;
    m_b_ezsignfoldertype_sendattachmentezsignsigner_isValid = false;

    m_b_ezsignfoldertype_sendproofezsignsigner_isSet = false;
    m_b_ezsignfoldertype_sendproofezsignsigner_isValid = false;

    m_b_ezsignfoldertype_sendattachmentuser_isSet = false;
    m_b_ezsignfoldertype_sendattachmentuser_isValid = false;

    m_b_ezsignfoldertype_sendproofuser_isSet = false;
    m_b_ezsignfoldertype_sendproofuser_isValid = false;

    m_b_ezsignfoldertype_sendproofemail_isSet = false;
    m_b_ezsignfoldertype_sendproofemail_isValid = false;

    m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isSet = false;
    m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isValid = false;

    m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isSet = false;
    m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isValid = false;

    m_b_ezsignfoldertype_sendproofreceivealldocument_isSet = false;
    m_b_ezsignfoldertype_sendproofreceivealldocument_isValid = false;

    m_b_ezsignfoldertype_sendsignedtodocumentowner_isSet = false;
    m_b_ezsignfoldertype_sendsignedtodocumentowner_isValid = false;

    m_b_ezsignfoldertype_sendsignedtofolderowner_isSet = false;
    m_b_ezsignfoldertype_sendsignedtofolderowner_isValid = false;

    m_b_ezsignfoldertype_sendsignedtofullgroup_isSet = false;
    m_b_ezsignfoldertype_sendsignedtofullgroup_isValid = false;

    m_b_ezsignfoldertype_sendsignedtolimitedgroup_isSet = false;
    m_b_ezsignfoldertype_sendsignedtolimitedgroup_isValid = false;

    m_b_ezsignfoldertype_sendsignedtocolleague_isSet = false;
    m_b_ezsignfoldertype_sendsignedtocolleague_isValid = false;

    m_b_ezsignfoldertype_sendsummarytodocumentowner_isSet = false;
    m_b_ezsignfoldertype_sendsummarytodocumentowner_isValid = false;

    m_b_ezsignfoldertype_sendsummarytofolderowner_isSet = false;
    m_b_ezsignfoldertype_sendsummarytofolderowner_isValid = false;

    m_b_ezsignfoldertype_sendsummarytofullgroup_isSet = false;
    m_b_ezsignfoldertype_sendsummarytofullgroup_isValid = false;

    m_b_ezsignfoldertype_sendsummarytolimitedgroup_isSet = false;
    m_b_ezsignfoldertype_sendsummarytolimitedgroup_isValid = false;

    m_b_ezsignfoldertype_sendsummarytocolleague_isSet = false;
    m_b_ezsignfoldertype_sendsummarytocolleague_isValid = false;

    m_e_ezsignfoldertype_signeraccess_isSet = false;
    m_e_ezsignfoldertype_signeraccess_isValid = false;

    m_b_ezsignfoldertype_isactive_isSet = false;
    m_b_ezsignfoldertype_isactive_isValid = false;

    m_a_fki_pdfalevel_id_isSet = false;
    m_a_fki_pdfalevel_id_isValid = false;

    m_a_obj_userlogintype_isSet = false;
    m_a_obj_userlogintype_isValid = false;

    m_a_obj_usergroup_all_isSet = false;
    m_a_obj_usergroup_all_isValid = false;

    m_a_obj_usergroup_restricted_isSet = false;
    m_a_obj_usergroup_restricted_isValid = false;

    m_a_obj_usergroup_template_isSet = false;
    m_a_obj_usergroup_template_isValid = false;

    m_obj_audit_isSet = false;
    m_obj_audit_isValid = false;

    m_a_fki_user_id_signed_isSet = false;
    m_a_fki_user_id_signed_isValid = false;

    m_a_fki_user_id_summary_isSet = false;
    m_a_fki_user_id_summary_isValid = false;
}

void Ezsignfoldertype_ResponseCompoundV4::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsignfoldertype_ResponseCompoundV4::fromJsonObject(QJsonObject json) {

    m_pki_ezsignfoldertype_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsignfoldertype_id, json[QString("pkiEzsignfoldertypeID")]);
    m_pki_ezsignfoldertype_id_isSet = !json[QString("pkiEzsignfoldertypeID")].isNull() && m_pki_ezsignfoldertype_id_isValid;

    m_obj_ezsignfoldertype_name_isValid = ::Ezmaxapi::fromJsonValue(m_obj_ezsignfoldertype_name, json[QString("objEzsignfoldertypeName")]);
    m_obj_ezsignfoldertype_name_isSet = !json[QString("objEzsignfoldertypeName")].isNull() && m_obj_ezsignfoldertype_name_isValid;

    m_fki_branding_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_branding_id, json[QString("fkiBrandingID")]);
    m_fki_branding_id_isSet = !json[QString("fkiBrandingID")].isNull() && m_fki_branding_id_isValid;

    m_fki_billingentityinternal_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_billingentityinternal_id, json[QString("fkiBillingentityinternalID")]);
    m_fki_billingentityinternal_id_isSet = !json[QString("fkiBillingentityinternalID")].isNull() && m_fki_billingentityinternal_id_isValid;

    m_fki_ezsigntsarequirement_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsigntsarequirement_id, json[QString("fkiEzsigntsarequirementID")]);
    m_fki_ezsigntsarequirement_id_isSet = !json[QString("fkiEzsigntsarequirementID")].isNull() && m_fki_ezsigntsarequirement_id_isValid;

    m_fki_font_id_annotation_isValid = ::Ezmaxapi::fromJsonValue(m_fki_font_id_annotation, json[QString("fkiFontIDAnnotation")]);
    m_fki_font_id_annotation_isSet = !json[QString("fkiFontIDAnnotation")].isNull() && m_fki_font_id_annotation_isValid;

    m_fki_font_id_formfield_isValid = ::Ezmaxapi::fromJsonValue(m_fki_font_id_formfield, json[QString("fkiFontIDFormfield")]);
    m_fki_font_id_formfield_isSet = !json[QString("fkiFontIDFormfield")].isNull() && m_fki_font_id_formfield_isValid;

    m_fki_font_id_signature_isValid = ::Ezmaxapi::fromJsonValue(m_fki_font_id_signature, json[QString("fkiFontIDSignature")]);
    m_fki_font_id_signature_isSet = !json[QString("fkiFontIDSignature")].isNull() && m_fki_font_id_signature_isValid;

    m_fki_pdfalevel_id_convert_isValid = ::Ezmaxapi::fromJsonValue(m_fki_pdfalevel_id_convert, json[QString("fkiPdfalevelIDConvert")]);
    m_fki_pdfalevel_id_convert_isSet = !json[QString("fkiPdfalevelIDConvert")].isNull() && m_fki_pdfalevel_id_convert_isValid;

    m_e_ezsignfoldertype_documentdependency_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_documentdependency, json[QString("eEzsignfoldertypeDocumentdependency")]);
    m_e_ezsignfoldertype_documentdependency_isSet = !json[QString("eEzsignfoldertypeDocumentdependency")].isNull() && m_e_ezsignfoldertype_documentdependency_isValid;

    m_s_branding_description_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_branding_description_x, json[QString("sBrandingDescriptionX")]);
    m_s_branding_description_x_isSet = !json[QString("sBrandingDescriptionX")].isNull() && m_s_branding_description_x_isValid;

    m_s_billingentityinternal_description_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_billingentityinternal_description_x, json[QString("sBillingentityinternalDescriptionX")]);
    m_s_billingentityinternal_description_x_isSet = !json[QString("sBillingentityinternalDescriptionX")].isNull() && m_s_billingentityinternal_description_x_isValid;

    m_s_ezsigntsarequirement_description_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigntsarequirement_description_x, json[QString("sEzsigntsarequirementDescriptionX")]);
    m_s_ezsigntsarequirement_description_x_isSet = !json[QString("sEzsigntsarequirementDescriptionX")].isNull() && m_s_ezsigntsarequirement_description_x_isValid;

    m_s_email_address_signed_isValid = ::Ezmaxapi::fromJsonValue(m_s_email_address_signed, json[QString("sEmailAddressSigned")]);
    m_s_email_address_signed_isSet = !json[QString("sEmailAddressSigned")].isNull() && m_s_email_address_signed_isValid;

    m_s_email_address_summary_isValid = ::Ezmaxapi::fromJsonValue(m_s_email_address_summary, json[QString("sEmailAddressSummary")]);
    m_s_email_address_summary_isSet = !json[QString("sEmailAddressSummary")].isNull() && m_s_email_address_summary_isValid;

    m_e_ezsignfoldertype_pdfarequirement_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_pdfarequirement, json[QString("eEzsignfoldertypePdfarequirement")]);
    m_e_ezsignfoldertype_pdfarequirement_isSet = !json[QString("eEzsignfoldertypePdfarequirement")].isNull() && m_e_ezsignfoldertype_pdfarequirement_isValid;

    m_e_ezsignfoldertype_pdfanoncompliantaction_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_pdfanoncompliantaction, json[QString("eEzsignfoldertypePdfanoncompliantaction")]);
    m_e_ezsignfoldertype_pdfanoncompliantaction_isSet = !json[QString("eEzsignfoldertypePdfanoncompliantaction")].isNull() && m_e_ezsignfoldertype_pdfanoncompliantaction_isValid;

    m_e_ezsignfoldertype_privacylevel_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_privacylevel, json[QString("eEzsignfoldertypePrivacylevel")]);
    m_e_ezsignfoldertype_privacylevel_isSet = !json[QString("eEzsignfoldertypePrivacylevel")].isNull() && m_e_ezsignfoldertype_privacylevel_isValid;

    m_i_ezsignfoldertype_fontsizeannotation_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_fontsizeannotation, json[QString("iEzsignfoldertypeFontsizeannotation")]);
    m_i_ezsignfoldertype_fontsizeannotation_isSet = !json[QString("iEzsignfoldertypeFontsizeannotation")].isNull() && m_i_ezsignfoldertype_fontsizeannotation_isValid;

    m_i_ezsignfoldertype_fontsizeformfield_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_fontsizeformfield, json[QString("iEzsignfoldertypeFontsizeformfield")]);
    m_i_ezsignfoldertype_fontsizeformfield_isSet = !json[QString("iEzsignfoldertypeFontsizeformfield")].isNull() && m_i_ezsignfoldertype_fontsizeformfield_isValid;

    m_i_ezsignfoldertype_sendreminderfirstdays_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_sendreminderfirstdays, json[QString("iEzsignfoldertypeSendreminderfirstdays")]);
    m_i_ezsignfoldertype_sendreminderfirstdays_isSet = !json[QString("iEzsignfoldertypeSendreminderfirstdays")].isNull() && m_i_ezsignfoldertype_sendreminderfirstdays_isValid;

    m_i_ezsignfoldertype_sendreminderotherdays_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_sendreminderotherdays, json[QString("iEzsignfoldertypeSendreminderotherdays")]);
    m_i_ezsignfoldertype_sendreminderotherdays_isSet = !json[QString("iEzsignfoldertypeSendreminderotherdays")].isNull() && m_i_ezsignfoldertype_sendreminderotherdays_isValid;

    m_i_ezsignfoldertype_archivaldays_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_archivaldays, json[QString("iEzsignfoldertypeArchivaldays")]);
    m_i_ezsignfoldertype_archivaldays_isSet = !json[QString("iEzsignfoldertypeArchivaldays")].isNull() && m_i_ezsignfoldertype_archivaldays_isValid;

    m_e_ezsignfoldertype_disposal_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_disposal, json[QString("eEzsignfoldertypeDisposal")]);
    m_e_ezsignfoldertype_disposal_isSet = !json[QString("eEzsignfoldertypeDisposal")].isNull() && m_e_ezsignfoldertype_disposal_isValid;

    m_e_ezsignfoldertype_completion_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_completion, json[QString("eEzsignfoldertypeCompletion")]);
    m_e_ezsignfoldertype_completion_isSet = !json[QString("eEzsignfoldertypeCompletion")].isNull() && m_e_ezsignfoldertype_completion_isValid;

    m_i_ezsignfoldertype_disposaldays_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_disposaldays, json[QString("iEzsignfoldertypeDisposaldays")]);
    m_i_ezsignfoldertype_disposaldays_isSet = !json[QString("iEzsignfoldertypeDisposaldays")].isNull() && m_i_ezsignfoldertype_disposaldays_isValid;

    m_i_ezsignfoldertype_deadlinedays_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_deadlinedays, json[QString("iEzsignfoldertypeDeadlinedays")]);
    m_i_ezsignfoldertype_deadlinedays_isSet = !json[QString("iEzsignfoldertypeDeadlinedays")].isNull() && m_i_ezsignfoldertype_deadlinedays_isValid;

    m_b_ezsignfoldertype_prematurelyendautomatically_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_prematurelyendautomatically, json[QString("bEzsignfoldertypePrematurelyendautomatically")]);
    m_b_ezsignfoldertype_prematurelyendautomatically_isSet = !json[QString("bEzsignfoldertypePrematurelyendautomatically")].isNull() && m_b_ezsignfoldertype_prematurelyendautomatically_isValid;

    m_i_ezsignfoldertype_prematurelyendautomaticallydays_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsignfoldertype_prematurelyendautomaticallydays, json[QString("iEzsignfoldertypePrematurelyendautomaticallydays")]);
    m_i_ezsignfoldertype_prematurelyendautomaticallydays_isSet = !json[QString("iEzsignfoldertypePrematurelyendautomaticallydays")].isNull() && m_i_ezsignfoldertype_prematurelyendautomaticallydays_isValid;

    m_b_ezsignfoldertype_automaticsignature_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_automaticsignature, json[QString("bEzsignfoldertypeAutomaticsignature")]);
    m_b_ezsignfoldertype_automaticsignature_isSet = !json[QString("bEzsignfoldertypeAutomaticsignature")].isNull() && m_b_ezsignfoldertype_automaticsignature_isValid;

    m_b_ezsignfoldertype_delegate_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_delegate, json[QString("bEzsignfoldertypeDelegate")]);
    m_b_ezsignfoldertype_delegate_isSet = !json[QString("bEzsignfoldertypeDelegate")].isNull() && m_b_ezsignfoldertype_delegate_isValid;

    m_b_ezsignfoldertype_discussion_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_discussion, json[QString("bEzsignfoldertypeDiscussion")]);
    m_b_ezsignfoldertype_discussion_isSet = !json[QString("bEzsignfoldertypeDiscussion")].isNull() && m_b_ezsignfoldertype_discussion_isValid;

    m_b_ezsignfoldertype_logrecipientinproof_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_logrecipientinproof, json[QString("bEzsignfoldertypeLogrecipientinproof")]);
    m_b_ezsignfoldertype_logrecipientinproof_isSet = !json[QString("bEzsignfoldertypeLogrecipientinproof")].isNull() && m_b_ezsignfoldertype_logrecipientinproof_isValid;

    m_b_ezsignfoldertype_reassignezsignsigner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_reassignezsignsigner, json[QString("bEzsignfoldertypeReassignezsignsigner")]);
    m_b_ezsignfoldertype_reassignezsignsigner_isSet = !json[QString("bEzsignfoldertypeReassignezsignsigner")].isNull() && m_b_ezsignfoldertype_reassignezsignsigner_isValid;

    m_b_ezsignfoldertype_reassignuser_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_reassignuser, json[QString("bEzsignfoldertypeReassignuser")]);
    m_b_ezsignfoldertype_reassignuser_isSet = !json[QString("bEzsignfoldertypeReassignuser")].isNull() && m_b_ezsignfoldertype_reassignuser_isValid;

    m_b_ezsignfoldertype_reassigngroup_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_reassigngroup, json[QString("bEzsignfoldertypeReassigngroup")]);
    m_b_ezsignfoldertype_reassigngroup_isSet = !json[QString("bEzsignfoldertypeReassigngroup")].isNull() && m_b_ezsignfoldertype_reassigngroup_isValid;

    m_b_ezsignfoldertype_sendsignedtoezsignsigner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtoezsignsigner, json[QString("bEzsignfoldertypeSendsignedtoezsignsigner")]);
    m_b_ezsignfoldertype_sendsignedtoezsignsigner_isSet = !json[QString("bEzsignfoldertypeSendsignedtoezsignsigner")].isNull() && m_b_ezsignfoldertype_sendsignedtoezsignsigner_isValid;

    m_b_ezsignfoldertype_sendsignedtouser_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtouser, json[QString("bEzsignfoldertypeSendsignedtouser")]);
    m_b_ezsignfoldertype_sendsignedtouser_isSet = !json[QString("bEzsignfoldertypeSendsignedtouser")].isNull() && m_b_ezsignfoldertype_sendsignedtouser_isValid;

    m_b_ezsignfoldertype_sendattachmentezsignsigner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendattachmentezsignsigner, json[QString("bEzsignfoldertypeSendattachmentezsignsigner")]);
    m_b_ezsignfoldertype_sendattachmentezsignsigner_isSet = !json[QString("bEzsignfoldertypeSendattachmentezsignsigner")].isNull() && m_b_ezsignfoldertype_sendattachmentezsignsigner_isValid;

    m_b_ezsignfoldertype_sendproofezsignsigner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendproofezsignsigner, json[QString("bEzsignfoldertypeSendproofezsignsigner")]);
    m_b_ezsignfoldertype_sendproofezsignsigner_isSet = !json[QString("bEzsignfoldertypeSendproofezsignsigner")].isNull() && m_b_ezsignfoldertype_sendproofezsignsigner_isValid;

    m_b_ezsignfoldertype_sendattachmentuser_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendattachmentuser, json[QString("bEzsignfoldertypeSendattachmentuser")]);
    m_b_ezsignfoldertype_sendattachmentuser_isSet = !json[QString("bEzsignfoldertypeSendattachmentuser")].isNull() && m_b_ezsignfoldertype_sendattachmentuser_isValid;

    m_b_ezsignfoldertype_sendproofuser_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendproofuser, json[QString("bEzsignfoldertypeSendproofuser")]);
    m_b_ezsignfoldertype_sendproofuser_isSet = !json[QString("bEzsignfoldertypeSendproofuser")].isNull() && m_b_ezsignfoldertype_sendproofuser_isValid;

    m_b_ezsignfoldertype_sendproofemail_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendproofemail, json[QString("bEzsignfoldertypeSendproofemail")]);
    m_b_ezsignfoldertype_sendproofemail_isSet = !json[QString("bEzsignfoldertypeSendproofemail")].isNull() && m_b_ezsignfoldertype_sendproofemail_isValid;

    m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner, json[QString("bEzsignfoldertypeAllowdownloadattachmentezsignsigner")]);
    m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isSet = !json[QString("bEzsignfoldertypeAllowdownloadattachmentezsignsigner")].isNull() && m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isValid;

    m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_allowdownloadproofezsignsigner, json[QString("bEzsignfoldertypeAllowdownloadproofezsignsigner")]);
    m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isSet = !json[QString("bEzsignfoldertypeAllowdownloadproofezsignsigner")].isNull() && m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isValid;

    m_b_ezsignfoldertype_sendproofreceivealldocument_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendproofreceivealldocument, json[QString("bEzsignfoldertypeSendproofreceivealldocument")]);
    m_b_ezsignfoldertype_sendproofreceivealldocument_isSet = !json[QString("bEzsignfoldertypeSendproofreceivealldocument")].isNull() && m_b_ezsignfoldertype_sendproofreceivealldocument_isValid;

    m_b_ezsignfoldertype_sendsignedtodocumentowner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtodocumentowner, json[QString("bEzsignfoldertypeSendsignedtodocumentowner")]);
    m_b_ezsignfoldertype_sendsignedtodocumentowner_isSet = !json[QString("bEzsignfoldertypeSendsignedtodocumentowner")].isNull() && m_b_ezsignfoldertype_sendsignedtodocumentowner_isValid;

    m_b_ezsignfoldertype_sendsignedtofolderowner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtofolderowner, json[QString("bEzsignfoldertypeSendsignedtofolderowner")]);
    m_b_ezsignfoldertype_sendsignedtofolderowner_isSet = !json[QString("bEzsignfoldertypeSendsignedtofolderowner")].isNull() && m_b_ezsignfoldertype_sendsignedtofolderowner_isValid;

    m_b_ezsignfoldertype_sendsignedtofullgroup_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtofullgroup, json[QString("bEzsignfoldertypeSendsignedtofullgroup")]);
    m_b_ezsignfoldertype_sendsignedtofullgroup_isSet = !json[QString("bEzsignfoldertypeSendsignedtofullgroup")].isNull() && m_b_ezsignfoldertype_sendsignedtofullgroup_isValid;

    m_b_ezsignfoldertype_sendsignedtolimitedgroup_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtolimitedgroup, json[QString("bEzsignfoldertypeSendsignedtolimitedgroup")]);
    m_b_ezsignfoldertype_sendsignedtolimitedgroup_isSet = !json[QString("bEzsignfoldertypeSendsignedtolimitedgroup")].isNull() && m_b_ezsignfoldertype_sendsignedtolimitedgroup_isValid;

    m_b_ezsignfoldertype_sendsignedtocolleague_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsignedtocolleague, json[QString("bEzsignfoldertypeSendsignedtocolleague")]);
    m_b_ezsignfoldertype_sendsignedtocolleague_isSet = !json[QString("bEzsignfoldertypeSendsignedtocolleague")].isNull() && m_b_ezsignfoldertype_sendsignedtocolleague_isValid;

    m_b_ezsignfoldertype_sendsummarytodocumentowner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsummarytodocumentowner, json[QString("bEzsignfoldertypeSendsummarytodocumentowner")]);
    m_b_ezsignfoldertype_sendsummarytodocumentowner_isSet = !json[QString("bEzsignfoldertypeSendsummarytodocumentowner")].isNull() && m_b_ezsignfoldertype_sendsummarytodocumentowner_isValid;

    m_b_ezsignfoldertype_sendsummarytofolderowner_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsummarytofolderowner, json[QString("bEzsignfoldertypeSendsummarytofolderowner")]);
    m_b_ezsignfoldertype_sendsummarytofolderowner_isSet = !json[QString("bEzsignfoldertypeSendsummarytofolderowner")].isNull() && m_b_ezsignfoldertype_sendsummarytofolderowner_isValid;

    m_b_ezsignfoldertype_sendsummarytofullgroup_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsummarytofullgroup, json[QString("bEzsignfoldertypeSendsummarytofullgroup")]);
    m_b_ezsignfoldertype_sendsummarytofullgroup_isSet = !json[QString("bEzsignfoldertypeSendsummarytofullgroup")].isNull() && m_b_ezsignfoldertype_sendsummarytofullgroup_isValid;

    m_b_ezsignfoldertype_sendsummarytolimitedgroup_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsummarytolimitedgroup, json[QString("bEzsignfoldertypeSendsummarytolimitedgroup")]);
    m_b_ezsignfoldertype_sendsummarytolimitedgroup_isSet = !json[QString("bEzsignfoldertypeSendsummarytolimitedgroup")].isNull() && m_b_ezsignfoldertype_sendsummarytolimitedgroup_isValid;

    m_b_ezsignfoldertype_sendsummarytocolleague_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_sendsummarytocolleague, json[QString("bEzsignfoldertypeSendsummarytocolleague")]);
    m_b_ezsignfoldertype_sendsummarytocolleague_isSet = !json[QString("bEzsignfoldertypeSendsummarytocolleague")].isNull() && m_b_ezsignfoldertype_sendsummarytocolleague_isValid;

    m_e_ezsignfoldertype_signeraccess_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsignfoldertype_signeraccess, json[QString("eEzsignfoldertypeSigneraccess")]);
    m_e_ezsignfoldertype_signeraccess_isSet = !json[QString("eEzsignfoldertypeSigneraccess")].isNull() && m_e_ezsignfoldertype_signeraccess_isValid;

    m_b_ezsignfoldertype_isactive_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsignfoldertype_isactive, json[QString("bEzsignfoldertypeIsactive")]);
    m_b_ezsignfoldertype_isactive_isSet = !json[QString("bEzsignfoldertypeIsactive")].isNull() && m_b_ezsignfoldertype_isactive_isValid;

    m_a_fki_pdfalevel_id_isValid = ::Ezmaxapi::fromJsonValue(m_a_fki_pdfalevel_id, json[QString("a_fkiPdfalevelID")]);
    m_a_fki_pdfalevel_id_isSet = !json[QString("a_fkiPdfalevelID")].isNull() && m_a_fki_pdfalevel_id_isValid;

    m_a_obj_userlogintype_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_userlogintype, json[QString("a_objUserlogintype")]);
    m_a_obj_userlogintype_isSet = !json[QString("a_objUserlogintype")].isNull() && m_a_obj_userlogintype_isValid;

    m_a_obj_usergroup_all_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_usergroup_all, json[QString("a_objUsergroupAll")]);
    m_a_obj_usergroup_all_isSet = !json[QString("a_objUsergroupAll")].isNull() && m_a_obj_usergroup_all_isValid;

    m_a_obj_usergroup_restricted_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_usergroup_restricted, json[QString("a_objUsergroupRestricted")]);
    m_a_obj_usergroup_restricted_isSet = !json[QString("a_objUsergroupRestricted")].isNull() && m_a_obj_usergroup_restricted_isValid;

    m_a_obj_usergroup_template_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_usergroup_template, json[QString("a_objUsergroupTemplate")]);
    m_a_obj_usergroup_template_isSet = !json[QString("a_objUsergroupTemplate")].isNull() && m_a_obj_usergroup_template_isValid;

    m_obj_audit_isValid = ::Ezmaxapi::fromJsonValue(m_obj_audit, json[QString("objAudit")]);
    m_obj_audit_isSet = !json[QString("objAudit")].isNull() && m_obj_audit_isValid;

    m_a_fki_user_id_signed_isValid = ::Ezmaxapi::fromJsonValue(m_a_fki_user_id_signed, json[QString("a_fkiUserIDSigned")]);
    m_a_fki_user_id_signed_isSet = !json[QString("a_fkiUserIDSigned")].isNull() && m_a_fki_user_id_signed_isValid;

    m_a_fki_user_id_summary_isValid = ::Ezmaxapi::fromJsonValue(m_a_fki_user_id_summary, json[QString("a_fkiUserIDSummary")]);
    m_a_fki_user_id_summary_isSet = !json[QString("a_fkiUserIDSummary")].isNull() && m_a_fki_user_id_summary_isValid;
}

QString Ezsignfoldertype_ResponseCompoundV4::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsignfoldertype_ResponseCompoundV4::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsignfoldertype_id_isSet) {
        obj.insert(QString("pkiEzsignfoldertypeID"), ::Ezmaxapi::toJsonValue(m_pki_ezsignfoldertype_id));
    }
    if (m_obj_ezsignfoldertype_name.isSet()) {
        obj.insert(QString("objEzsignfoldertypeName"), ::Ezmaxapi::toJsonValue(m_obj_ezsignfoldertype_name));
    }
    if (m_fki_branding_id_isSet) {
        obj.insert(QString("fkiBrandingID"), ::Ezmaxapi::toJsonValue(m_fki_branding_id));
    }
    if (m_fki_billingentityinternal_id_isSet) {
        obj.insert(QString("fkiBillingentityinternalID"), ::Ezmaxapi::toJsonValue(m_fki_billingentityinternal_id));
    }
    if (m_fki_ezsigntsarequirement_id_isSet) {
        obj.insert(QString("fkiEzsigntsarequirementID"), ::Ezmaxapi::toJsonValue(m_fki_ezsigntsarequirement_id));
    }
    if (m_fki_font_id_annotation_isSet) {
        obj.insert(QString("fkiFontIDAnnotation"), ::Ezmaxapi::toJsonValue(m_fki_font_id_annotation));
    }
    if (m_fki_font_id_formfield_isSet) {
        obj.insert(QString("fkiFontIDFormfield"), ::Ezmaxapi::toJsonValue(m_fki_font_id_formfield));
    }
    if (m_fki_font_id_signature_isSet) {
        obj.insert(QString("fkiFontIDSignature"), ::Ezmaxapi::toJsonValue(m_fki_font_id_signature));
    }
    if (m_fki_pdfalevel_id_convert_isSet) {
        obj.insert(QString("fkiPdfalevelIDConvert"), ::Ezmaxapi::toJsonValue(m_fki_pdfalevel_id_convert));
    }
    if (m_e_ezsignfoldertype_documentdependency.isSet()) {
        obj.insert(QString("eEzsignfoldertypeDocumentdependency"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_documentdependency));
    }
    if (m_s_branding_description_x_isSet) {
        obj.insert(QString("sBrandingDescriptionX"), ::Ezmaxapi::toJsonValue(m_s_branding_description_x));
    }
    if (m_s_billingentityinternal_description_x_isSet) {
        obj.insert(QString("sBillingentityinternalDescriptionX"), ::Ezmaxapi::toJsonValue(m_s_billingentityinternal_description_x));
    }
    if (m_s_ezsigntsarequirement_description_x_isSet) {
        obj.insert(QString("sEzsigntsarequirementDescriptionX"), ::Ezmaxapi::toJsonValue(m_s_ezsigntsarequirement_description_x));
    }
    if (m_s_email_address_signed_isSet) {
        obj.insert(QString("sEmailAddressSigned"), ::Ezmaxapi::toJsonValue(m_s_email_address_signed));
    }
    if (m_s_email_address_summary_isSet) {
        obj.insert(QString("sEmailAddressSummary"), ::Ezmaxapi::toJsonValue(m_s_email_address_summary));
    }
    if (m_e_ezsignfoldertype_pdfarequirement.isSet()) {
        obj.insert(QString("eEzsignfoldertypePdfarequirement"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_pdfarequirement));
    }
    if (m_e_ezsignfoldertype_pdfanoncompliantaction.isSet()) {
        obj.insert(QString("eEzsignfoldertypePdfanoncompliantaction"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_pdfanoncompliantaction));
    }
    if (m_e_ezsignfoldertype_privacylevel.isSet()) {
        obj.insert(QString("eEzsignfoldertypePrivacylevel"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_privacylevel));
    }
    if (m_i_ezsignfoldertype_fontsizeannotation_isSet) {
        obj.insert(QString("iEzsignfoldertypeFontsizeannotation"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_fontsizeannotation));
    }
    if (m_i_ezsignfoldertype_fontsizeformfield_isSet) {
        obj.insert(QString("iEzsignfoldertypeFontsizeformfield"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_fontsizeformfield));
    }
    if (m_i_ezsignfoldertype_sendreminderfirstdays_isSet) {
        obj.insert(QString("iEzsignfoldertypeSendreminderfirstdays"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_sendreminderfirstdays));
    }
    if (m_i_ezsignfoldertype_sendreminderotherdays_isSet) {
        obj.insert(QString("iEzsignfoldertypeSendreminderotherdays"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_sendreminderotherdays));
    }
    if (m_i_ezsignfoldertype_archivaldays_isSet) {
        obj.insert(QString("iEzsignfoldertypeArchivaldays"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_archivaldays));
    }
    if (m_e_ezsignfoldertype_disposal.isSet()) {
        obj.insert(QString("eEzsignfoldertypeDisposal"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_disposal));
    }
    if (m_e_ezsignfoldertype_completion.isSet()) {
        obj.insert(QString("eEzsignfoldertypeCompletion"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_completion));
    }
    if (m_i_ezsignfoldertype_disposaldays_isSet) {
        obj.insert(QString("iEzsignfoldertypeDisposaldays"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_disposaldays));
    }
    if (m_i_ezsignfoldertype_deadlinedays_isSet) {
        obj.insert(QString("iEzsignfoldertypeDeadlinedays"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_deadlinedays));
    }
    if (m_b_ezsignfoldertype_prematurelyendautomatically_isSet) {
        obj.insert(QString("bEzsignfoldertypePrematurelyendautomatically"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_prematurelyendautomatically));
    }
    if (m_i_ezsignfoldertype_prematurelyendautomaticallydays_isSet) {
        obj.insert(QString("iEzsignfoldertypePrematurelyendautomaticallydays"), ::Ezmaxapi::toJsonValue(m_i_ezsignfoldertype_prematurelyendautomaticallydays));
    }
    if (m_b_ezsignfoldertype_automaticsignature_isSet) {
        obj.insert(QString("bEzsignfoldertypeAutomaticsignature"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_automaticsignature));
    }
    if (m_b_ezsignfoldertype_delegate_isSet) {
        obj.insert(QString("bEzsignfoldertypeDelegate"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_delegate));
    }
    if (m_b_ezsignfoldertype_discussion_isSet) {
        obj.insert(QString("bEzsignfoldertypeDiscussion"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_discussion));
    }
    if (m_b_ezsignfoldertype_logrecipientinproof_isSet) {
        obj.insert(QString("bEzsignfoldertypeLogrecipientinproof"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_logrecipientinproof));
    }
    if (m_b_ezsignfoldertype_reassignezsignsigner_isSet) {
        obj.insert(QString("bEzsignfoldertypeReassignezsignsigner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_reassignezsignsigner));
    }
    if (m_b_ezsignfoldertype_reassignuser_isSet) {
        obj.insert(QString("bEzsignfoldertypeReassignuser"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_reassignuser));
    }
    if (m_b_ezsignfoldertype_reassigngroup_isSet) {
        obj.insert(QString("bEzsignfoldertypeReassigngroup"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_reassigngroup));
    }
    if (m_b_ezsignfoldertype_sendsignedtoezsignsigner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtoezsignsigner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtoezsignsigner));
    }
    if (m_b_ezsignfoldertype_sendsignedtouser_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtouser"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtouser));
    }
    if (m_b_ezsignfoldertype_sendattachmentezsignsigner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendattachmentezsignsigner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendattachmentezsignsigner));
    }
    if (m_b_ezsignfoldertype_sendproofezsignsigner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendproofezsignsigner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendproofezsignsigner));
    }
    if (m_b_ezsignfoldertype_sendattachmentuser_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendattachmentuser"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendattachmentuser));
    }
    if (m_b_ezsignfoldertype_sendproofuser_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendproofuser"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendproofuser));
    }
    if (m_b_ezsignfoldertype_sendproofemail_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendproofemail"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendproofemail));
    }
    if (m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isSet) {
        obj.insert(QString("bEzsignfoldertypeAllowdownloadattachmentezsignsigner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner));
    }
    if (m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isSet) {
        obj.insert(QString("bEzsignfoldertypeAllowdownloadproofezsignsigner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_allowdownloadproofezsignsigner));
    }
    if (m_b_ezsignfoldertype_sendproofreceivealldocument_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendproofreceivealldocument"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendproofreceivealldocument));
    }
    if (m_b_ezsignfoldertype_sendsignedtodocumentowner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtodocumentowner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtodocumentowner));
    }
    if (m_b_ezsignfoldertype_sendsignedtofolderowner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtofolderowner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtofolderowner));
    }
    if (m_b_ezsignfoldertype_sendsignedtofullgroup_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtofullgroup"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtofullgroup));
    }
    if (m_b_ezsignfoldertype_sendsignedtolimitedgroup_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtolimitedgroup"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtolimitedgroup));
    }
    if (m_b_ezsignfoldertype_sendsignedtocolleague_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsignedtocolleague"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsignedtocolleague));
    }
    if (m_b_ezsignfoldertype_sendsummarytodocumentowner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsummarytodocumentowner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsummarytodocumentowner));
    }
    if (m_b_ezsignfoldertype_sendsummarytofolderowner_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsummarytofolderowner"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsummarytofolderowner));
    }
    if (m_b_ezsignfoldertype_sendsummarytofullgroup_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsummarytofullgroup"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsummarytofullgroup));
    }
    if (m_b_ezsignfoldertype_sendsummarytolimitedgroup_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsummarytolimitedgroup"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsummarytolimitedgroup));
    }
    if (m_b_ezsignfoldertype_sendsummarytocolleague_isSet) {
        obj.insert(QString("bEzsignfoldertypeSendsummarytocolleague"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_sendsummarytocolleague));
    }
    if (m_e_ezsignfoldertype_signeraccess.isSet()) {
        obj.insert(QString("eEzsignfoldertypeSigneraccess"), ::Ezmaxapi::toJsonValue(m_e_ezsignfoldertype_signeraccess));
    }
    if (m_b_ezsignfoldertype_isactive_isSet) {
        obj.insert(QString("bEzsignfoldertypeIsactive"), ::Ezmaxapi::toJsonValue(m_b_ezsignfoldertype_isactive));
    }
    if (m_a_fki_pdfalevel_id.size() > 0) {
        obj.insert(QString("a_fkiPdfalevelID"), ::Ezmaxapi::toJsonValue(m_a_fki_pdfalevel_id));
    }
    if (m_a_obj_userlogintype.size() > 0) {
        obj.insert(QString("a_objUserlogintype"), ::Ezmaxapi::toJsonValue(m_a_obj_userlogintype));
    }
    if (m_a_obj_usergroup_all.size() > 0) {
        obj.insert(QString("a_objUsergroupAll"), ::Ezmaxapi::toJsonValue(m_a_obj_usergroup_all));
    }
    if (m_a_obj_usergroup_restricted.size() > 0) {
        obj.insert(QString("a_objUsergroupRestricted"), ::Ezmaxapi::toJsonValue(m_a_obj_usergroup_restricted));
    }
    if (m_a_obj_usergroup_template.size() > 0) {
        obj.insert(QString("a_objUsergroupTemplate"), ::Ezmaxapi::toJsonValue(m_a_obj_usergroup_template));
    }
    if (m_obj_audit.isSet()) {
        obj.insert(QString("objAudit"), ::Ezmaxapi::toJsonValue(m_obj_audit));
    }
    if (m_a_fki_user_id_signed.size() > 0) {
        obj.insert(QString("a_fkiUserIDSigned"), ::Ezmaxapi::toJsonValue(m_a_fki_user_id_signed));
    }
    if (m_a_fki_user_id_summary.size() > 0) {
        obj.insert(QString("a_fkiUserIDSummary"), ::Ezmaxapi::toJsonValue(m_a_fki_user_id_summary));
    }
    return obj;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getPkiEzsignfoldertypeId() const {
    return m_pki_ezsignfoldertype_id;
}
void Ezsignfoldertype_ResponseCompoundV4::setPkiEzsignfoldertypeId(const qint32 &pki_ezsignfoldertype_id) {
    m_pki_ezsignfoldertype_id = pki_ezsignfoldertype_id;
    m_pki_ezsignfoldertype_id_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_pki_ezsignfoldertype_id_Set() const{
    return m_pki_ezsignfoldertype_id_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_pki_ezsignfoldertype_id_Valid() const{
    return m_pki_ezsignfoldertype_id_isValid;
}

Multilingual_EzsignfoldertypeName Ezsignfoldertype_ResponseCompoundV4::getObjEzsignfoldertypeName() const {
    return m_obj_ezsignfoldertype_name;
}
void Ezsignfoldertype_ResponseCompoundV4::setObjEzsignfoldertypeName(const Multilingual_EzsignfoldertypeName &obj_ezsignfoldertype_name) {
    m_obj_ezsignfoldertype_name = obj_ezsignfoldertype_name;
    m_obj_ezsignfoldertype_name_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_obj_ezsignfoldertype_name_Set() const{
    return m_obj_ezsignfoldertype_name_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_obj_ezsignfoldertype_name_Valid() const{
    return m_obj_ezsignfoldertype_name_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiBrandingId() const {
    return m_fki_branding_id;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiBrandingId(const qint32 &fki_branding_id) {
    m_fki_branding_id = fki_branding_id;
    m_fki_branding_id_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_branding_id_Set() const{
    return m_fki_branding_id_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_branding_id_Valid() const{
    return m_fki_branding_id_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiBillingentityinternalId() const {
    return m_fki_billingentityinternal_id;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiBillingentityinternalId(const qint32 &fki_billingentityinternal_id) {
    m_fki_billingentityinternal_id = fki_billingentityinternal_id;
    m_fki_billingentityinternal_id_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_billingentityinternal_id_Set() const{
    return m_fki_billingentityinternal_id_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_billingentityinternal_id_Valid() const{
    return m_fki_billingentityinternal_id_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiEzsigntsarequirementId() const {
    return m_fki_ezsigntsarequirement_id;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiEzsigntsarequirementId(const qint32 &fki_ezsigntsarequirement_id) {
    m_fki_ezsigntsarequirement_id = fki_ezsigntsarequirement_id;
    m_fki_ezsigntsarequirement_id_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_ezsigntsarequirement_id_Set() const{
    return m_fki_ezsigntsarequirement_id_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_ezsigntsarequirement_id_Valid() const{
    return m_fki_ezsigntsarequirement_id_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiFontIdAnnotation() const {
    return m_fki_font_id_annotation;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiFontIdAnnotation(const qint32 &fki_font_id_annotation) {
    m_fki_font_id_annotation = fki_font_id_annotation;
    m_fki_font_id_annotation_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_font_id_annotation_Set() const{
    return m_fki_font_id_annotation_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_font_id_annotation_Valid() const{
    return m_fki_font_id_annotation_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiFontIdFormfield() const {
    return m_fki_font_id_formfield;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiFontIdFormfield(const qint32 &fki_font_id_formfield) {
    m_fki_font_id_formfield = fki_font_id_formfield;
    m_fki_font_id_formfield_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_font_id_formfield_Set() const{
    return m_fki_font_id_formfield_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_font_id_formfield_Valid() const{
    return m_fki_font_id_formfield_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiFontIdSignature() const {
    return m_fki_font_id_signature;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiFontIdSignature(const qint32 &fki_font_id_signature) {
    m_fki_font_id_signature = fki_font_id_signature;
    m_fki_font_id_signature_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_font_id_signature_Set() const{
    return m_fki_font_id_signature_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_font_id_signature_Valid() const{
    return m_fki_font_id_signature_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getFkiPdfalevelIdConvert() const {
    return m_fki_pdfalevel_id_convert;
}
void Ezsignfoldertype_ResponseCompoundV4::setFkiPdfalevelIdConvert(const qint32 &fki_pdfalevel_id_convert) {
    m_fki_pdfalevel_id_convert = fki_pdfalevel_id_convert;
    m_fki_pdfalevel_id_convert_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_pdfalevel_id_convert_Set() const{
    return m_fki_pdfalevel_id_convert_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_fki_pdfalevel_id_convert_Valid() const{
    return m_fki_pdfalevel_id_convert_isValid;
}

Field_eEzsignfoldertypeDocumentdependency Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypeDocumentdependency() const {
    return m_e_ezsignfoldertype_documentdependency;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypeDocumentdependency(const Field_eEzsignfoldertypeDocumentdependency &e_ezsignfoldertype_documentdependency) {
    m_e_ezsignfoldertype_documentdependency = e_ezsignfoldertype_documentdependency;
    m_e_ezsignfoldertype_documentdependency_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_documentdependency_Set() const{
    return m_e_ezsignfoldertype_documentdependency_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_documentdependency_Valid() const{
    return m_e_ezsignfoldertype_documentdependency_isValid;
}

QString Ezsignfoldertype_ResponseCompoundV4::getSBrandingDescriptionX() const {
    return m_s_branding_description_x;
}
void Ezsignfoldertype_ResponseCompoundV4::setSBrandingDescriptionX(const QString &s_branding_description_x) {
    m_s_branding_description_x = s_branding_description_x;
    m_s_branding_description_x_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_branding_description_x_Set() const{
    return m_s_branding_description_x_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_branding_description_x_Valid() const{
    return m_s_branding_description_x_isValid;
}

QString Ezsignfoldertype_ResponseCompoundV4::getSBillingentityinternalDescriptionX() const {
    return m_s_billingentityinternal_description_x;
}
void Ezsignfoldertype_ResponseCompoundV4::setSBillingentityinternalDescriptionX(const QString &s_billingentityinternal_description_x) {
    m_s_billingentityinternal_description_x = s_billingentityinternal_description_x;
    m_s_billingentityinternal_description_x_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_billingentityinternal_description_x_Set() const{
    return m_s_billingentityinternal_description_x_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_billingentityinternal_description_x_Valid() const{
    return m_s_billingentityinternal_description_x_isValid;
}

QString Ezsignfoldertype_ResponseCompoundV4::getSEzsigntsarequirementDescriptionX() const {
    return m_s_ezsigntsarequirement_description_x;
}
void Ezsignfoldertype_ResponseCompoundV4::setSEzsigntsarequirementDescriptionX(const QString &s_ezsigntsarequirement_description_x) {
    m_s_ezsigntsarequirement_description_x = s_ezsigntsarequirement_description_x;
    m_s_ezsigntsarequirement_description_x_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_ezsigntsarequirement_description_x_Set() const{
    return m_s_ezsigntsarequirement_description_x_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_ezsigntsarequirement_description_x_Valid() const{
    return m_s_ezsigntsarequirement_description_x_isValid;
}

QString Ezsignfoldertype_ResponseCompoundV4::getSEmailAddressSigned() const {
    return m_s_email_address_signed;
}
void Ezsignfoldertype_ResponseCompoundV4::setSEmailAddressSigned(const QString &s_email_address_signed) {
    m_s_email_address_signed = s_email_address_signed;
    m_s_email_address_signed_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_email_address_signed_Set() const{
    return m_s_email_address_signed_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_email_address_signed_Valid() const{
    return m_s_email_address_signed_isValid;
}

QString Ezsignfoldertype_ResponseCompoundV4::getSEmailAddressSummary() const {
    return m_s_email_address_summary;
}
void Ezsignfoldertype_ResponseCompoundV4::setSEmailAddressSummary(const QString &s_email_address_summary) {
    m_s_email_address_summary = s_email_address_summary;
    m_s_email_address_summary_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_email_address_summary_Set() const{
    return m_s_email_address_summary_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_s_email_address_summary_Valid() const{
    return m_s_email_address_summary_isValid;
}

Field_eEzsignfoldertypePdfarequirement Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypePdfarequirement() const {
    return m_e_ezsignfoldertype_pdfarequirement;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypePdfarequirement(const Field_eEzsignfoldertypePdfarequirement &e_ezsignfoldertype_pdfarequirement) {
    m_e_ezsignfoldertype_pdfarequirement = e_ezsignfoldertype_pdfarequirement;
    m_e_ezsignfoldertype_pdfarequirement_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_pdfarequirement_Set() const{
    return m_e_ezsignfoldertype_pdfarequirement_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_pdfarequirement_Valid() const{
    return m_e_ezsignfoldertype_pdfarequirement_isValid;
}

Field_eEzsignfoldertypePdfanoncompliantaction Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypePdfanoncompliantaction() const {
    return m_e_ezsignfoldertype_pdfanoncompliantaction;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypePdfanoncompliantaction(const Field_eEzsignfoldertypePdfanoncompliantaction &e_ezsignfoldertype_pdfanoncompliantaction) {
    m_e_ezsignfoldertype_pdfanoncompliantaction = e_ezsignfoldertype_pdfanoncompliantaction;
    m_e_ezsignfoldertype_pdfanoncompliantaction_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_pdfanoncompliantaction_Set() const{
    return m_e_ezsignfoldertype_pdfanoncompliantaction_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_pdfanoncompliantaction_Valid() const{
    return m_e_ezsignfoldertype_pdfanoncompliantaction_isValid;
}

Field_eEzsignfoldertypePrivacylevel Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypePrivacylevel() const {
    return m_e_ezsignfoldertype_privacylevel;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypePrivacylevel(const Field_eEzsignfoldertypePrivacylevel &e_ezsignfoldertype_privacylevel) {
    m_e_ezsignfoldertype_privacylevel = e_ezsignfoldertype_privacylevel;
    m_e_ezsignfoldertype_privacylevel_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_privacylevel_Set() const{
    return m_e_ezsignfoldertype_privacylevel_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_privacylevel_Valid() const{
    return m_e_ezsignfoldertype_privacylevel_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeFontsizeannotation() const {
    return m_i_ezsignfoldertype_fontsizeannotation;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeFontsizeannotation(const qint32 &i_ezsignfoldertype_fontsizeannotation) {
    m_i_ezsignfoldertype_fontsizeannotation = i_ezsignfoldertype_fontsizeannotation;
    m_i_ezsignfoldertype_fontsizeannotation_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_fontsizeannotation_Set() const{
    return m_i_ezsignfoldertype_fontsizeannotation_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_fontsizeannotation_Valid() const{
    return m_i_ezsignfoldertype_fontsizeannotation_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeFontsizeformfield() const {
    return m_i_ezsignfoldertype_fontsizeformfield;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeFontsizeformfield(const qint32 &i_ezsignfoldertype_fontsizeformfield) {
    m_i_ezsignfoldertype_fontsizeformfield = i_ezsignfoldertype_fontsizeformfield;
    m_i_ezsignfoldertype_fontsizeformfield_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_fontsizeformfield_Set() const{
    return m_i_ezsignfoldertype_fontsizeformfield_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_fontsizeformfield_Valid() const{
    return m_i_ezsignfoldertype_fontsizeformfield_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeSendreminderfirstdays() const {
    return m_i_ezsignfoldertype_sendreminderfirstdays;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeSendreminderfirstdays(const qint32 &i_ezsignfoldertype_sendreminderfirstdays) {
    m_i_ezsignfoldertype_sendreminderfirstdays = i_ezsignfoldertype_sendreminderfirstdays;
    m_i_ezsignfoldertype_sendreminderfirstdays_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_sendreminderfirstdays_Set() const{
    return m_i_ezsignfoldertype_sendreminderfirstdays_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_sendreminderfirstdays_Valid() const{
    return m_i_ezsignfoldertype_sendreminderfirstdays_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeSendreminderotherdays() const {
    return m_i_ezsignfoldertype_sendreminderotherdays;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeSendreminderotherdays(const qint32 &i_ezsignfoldertype_sendreminderotherdays) {
    m_i_ezsignfoldertype_sendreminderotherdays = i_ezsignfoldertype_sendreminderotherdays;
    m_i_ezsignfoldertype_sendreminderotherdays_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_sendreminderotherdays_Set() const{
    return m_i_ezsignfoldertype_sendreminderotherdays_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_sendreminderotherdays_Valid() const{
    return m_i_ezsignfoldertype_sendreminderotherdays_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeArchivaldays() const {
    return m_i_ezsignfoldertype_archivaldays;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeArchivaldays(const qint32 &i_ezsignfoldertype_archivaldays) {
    m_i_ezsignfoldertype_archivaldays = i_ezsignfoldertype_archivaldays;
    m_i_ezsignfoldertype_archivaldays_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_archivaldays_Set() const{
    return m_i_ezsignfoldertype_archivaldays_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_archivaldays_Valid() const{
    return m_i_ezsignfoldertype_archivaldays_isValid;
}

Field_eEzsignfoldertypeDisposal Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypeDisposal() const {
    return m_e_ezsignfoldertype_disposal;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypeDisposal(const Field_eEzsignfoldertypeDisposal &e_ezsignfoldertype_disposal) {
    m_e_ezsignfoldertype_disposal = e_ezsignfoldertype_disposal;
    m_e_ezsignfoldertype_disposal_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_disposal_Set() const{
    return m_e_ezsignfoldertype_disposal_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_disposal_Valid() const{
    return m_e_ezsignfoldertype_disposal_isValid;
}

Field_eEzsignfoldertypeCompletion Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypeCompletion() const {
    return m_e_ezsignfoldertype_completion;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypeCompletion(const Field_eEzsignfoldertypeCompletion &e_ezsignfoldertype_completion) {
    m_e_ezsignfoldertype_completion = e_ezsignfoldertype_completion;
    m_e_ezsignfoldertype_completion_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_completion_Set() const{
    return m_e_ezsignfoldertype_completion_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_completion_Valid() const{
    return m_e_ezsignfoldertype_completion_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeDisposaldays() const {
    return m_i_ezsignfoldertype_disposaldays;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeDisposaldays(const qint32 &i_ezsignfoldertype_disposaldays) {
    m_i_ezsignfoldertype_disposaldays = i_ezsignfoldertype_disposaldays;
    m_i_ezsignfoldertype_disposaldays_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_disposaldays_Set() const{
    return m_i_ezsignfoldertype_disposaldays_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_disposaldays_Valid() const{
    return m_i_ezsignfoldertype_disposaldays_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypeDeadlinedays() const {
    return m_i_ezsignfoldertype_deadlinedays;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypeDeadlinedays(const qint32 &i_ezsignfoldertype_deadlinedays) {
    m_i_ezsignfoldertype_deadlinedays = i_ezsignfoldertype_deadlinedays;
    m_i_ezsignfoldertype_deadlinedays_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_deadlinedays_Set() const{
    return m_i_ezsignfoldertype_deadlinedays_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_deadlinedays_Valid() const{
    return m_i_ezsignfoldertype_deadlinedays_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypePrematurelyendautomatically() const {
    return m_b_ezsignfoldertype_prematurelyendautomatically;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypePrematurelyendautomatically(const bool &b_ezsignfoldertype_prematurelyendautomatically) {
    m_b_ezsignfoldertype_prematurelyendautomatically = b_ezsignfoldertype_prematurelyendautomatically;
    m_b_ezsignfoldertype_prematurelyendautomatically_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_prematurelyendautomatically_Set() const{
    return m_b_ezsignfoldertype_prematurelyendautomatically_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_prematurelyendautomatically_Valid() const{
    return m_b_ezsignfoldertype_prematurelyendautomatically_isValid;
}

qint32 Ezsignfoldertype_ResponseCompoundV4::getIEzsignfoldertypePrematurelyendautomaticallydays() const {
    return m_i_ezsignfoldertype_prematurelyendautomaticallydays;
}
void Ezsignfoldertype_ResponseCompoundV4::setIEzsignfoldertypePrematurelyendautomaticallydays(const qint32 &i_ezsignfoldertype_prematurelyendautomaticallydays) {
    m_i_ezsignfoldertype_prematurelyendautomaticallydays = i_ezsignfoldertype_prematurelyendautomaticallydays;
    m_i_ezsignfoldertype_prematurelyendautomaticallydays_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_prematurelyendautomaticallydays_Set() const{
    return m_i_ezsignfoldertype_prematurelyendautomaticallydays_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_i_ezsignfoldertype_prematurelyendautomaticallydays_Valid() const{
    return m_i_ezsignfoldertype_prematurelyendautomaticallydays_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeAutomaticsignature() const {
    return m_b_ezsignfoldertype_automaticsignature;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeAutomaticsignature(const bool &b_ezsignfoldertype_automaticsignature) {
    m_b_ezsignfoldertype_automaticsignature = b_ezsignfoldertype_automaticsignature;
    m_b_ezsignfoldertype_automaticsignature_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_automaticsignature_Set() const{
    return m_b_ezsignfoldertype_automaticsignature_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_automaticsignature_Valid() const{
    return m_b_ezsignfoldertype_automaticsignature_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeDelegate() const {
    return m_b_ezsignfoldertype_delegate;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeDelegate(const bool &b_ezsignfoldertype_delegate) {
    m_b_ezsignfoldertype_delegate = b_ezsignfoldertype_delegate;
    m_b_ezsignfoldertype_delegate_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_delegate_Set() const{
    return m_b_ezsignfoldertype_delegate_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_delegate_Valid() const{
    return m_b_ezsignfoldertype_delegate_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeDiscussion() const {
    return m_b_ezsignfoldertype_discussion;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeDiscussion(const bool &b_ezsignfoldertype_discussion) {
    m_b_ezsignfoldertype_discussion = b_ezsignfoldertype_discussion;
    m_b_ezsignfoldertype_discussion_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_discussion_Set() const{
    return m_b_ezsignfoldertype_discussion_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_discussion_Valid() const{
    return m_b_ezsignfoldertype_discussion_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeLogrecipientinproof() const {
    return m_b_ezsignfoldertype_logrecipientinproof;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeLogrecipientinproof(const bool &b_ezsignfoldertype_logrecipientinproof) {
    m_b_ezsignfoldertype_logrecipientinproof = b_ezsignfoldertype_logrecipientinproof;
    m_b_ezsignfoldertype_logrecipientinproof_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_logrecipientinproof_Set() const{
    return m_b_ezsignfoldertype_logrecipientinproof_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_logrecipientinproof_Valid() const{
    return m_b_ezsignfoldertype_logrecipientinproof_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeReassignezsignsigner() const {
    return m_b_ezsignfoldertype_reassignezsignsigner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeReassignezsignsigner(const bool &b_ezsignfoldertype_reassignezsignsigner) {
    m_b_ezsignfoldertype_reassignezsignsigner = b_ezsignfoldertype_reassignezsignsigner;
    m_b_ezsignfoldertype_reassignezsignsigner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_reassignezsignsigner_Set() const{
    return m_b_ezsignfoldertype_reassignezsignsigner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_reassignezsignsigner_Valid() const{
    return m_b_ezsignfoldertype_reassignezsignsigner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeReassignuser() const {
    return m_b_ezsignfoldertype_reassignuser;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeReassignuser(const bool &b_ezsignfoldertype_reassignuser) {
    m_b_ezsignfoldertype_reassignuser = b_ezsignfoldertype_reassignuser;
    m_b_ezsignfoldertype_reassignuser_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_reassignuser_Set() const{
    return m_b_ezsignfoldertype_reassignuser_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_reassignuser_Valid() const{
    return m_b_ezsignfoldertype_reassignuser_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeReassigngroup() const {
    return m_b_ezsignfoldertype_reassigngroup;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeReassigngroup(const bool &b_ezsignfoldertype_reassigngroup) {
    m_b_ezsignfoldertype_reassigngroup = b_ezsignfoldertype_reassigngroup;
    m_b_ezsignfoldertype_reassigngroup_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_reassigngroup_Set() const{
    return m_b_ezsignfoldertype_reassigngroup_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_reassigngroup_Valid() const{
    return m_b_ezsignfoldertype_reassigngroup_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtoezsignsigner() const {
    return m_b_ezsignfoldertype_sendsignedtoezsignsigner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtoezsignsigner(const bool &b_ezsignfoldertype_sendsignedtoezsignsigner) {
    m_b_ezsignfoldertype_sendsignedtoezsignsigner = b_ezsignfoldertype_sendsignedtoezsignsigner;
    m_b_ezsignfoldertype_sendsignedtoezsignsigner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtoezsignsigner_Set() const{
    return m_b_ezsignfoldertype_sendsignedtoezsignsigner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtoezsignsigner_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtoezsignsigner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtouser() const {
    return m_b_ezsignfoldertype_sendsignedtouser;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtouser(const bool &b_ezsignfoldertype_sendsignedtouser) {
    m_b_ezsignfoldertype_sendsignedtouser = b_ezsignfoldertype_sendsignedtouser;
    m_b_ezsignfoldertype_sendsignedtouser_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtouser_Set() const{
    return m_b_ezsignfoldertype_sendsignedtouser_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtouser_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtouser_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendattachmentezsignsigner() const {
    return m_b_ezsignfoldertype_sendattachmentezsignsigner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendattachmentezsignsigner(const bool &b_ezsignfoldertype_sendattachmentezsignsigner) {
    m_b_ezsignfoldertype_sendattachmentezsignsigner = b_ezsignfoldertype_sendattachmentezsignsigner;
    m_b_ezsignfoldertype_sendattachmentezsignsigner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendattachmentezsignsigner_Set() const{
    return m_b_ezsignfoldertype_sendattachmentezsignsigner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendattachmentezsignsigner_Valid() const{
    return m_b_ezsignfoldertype_sendattachmentezsignsigner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendproofezsignsigner() const {
    return m_b_ezsignfoldertype_sendproofezsignsigner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendproofezsignsigner(const bool &b_ezsignfoldertype_sendproofezsignsigner) {
    m_b_ezsignfoldertype_sendproofezsignsigner = b_ezsignfoldertype_sendproofezsignsigner;
    m_b_ezsignfoldertype_sendproofezsignsigner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofezsignsigner_Set() const{
    return m_b_ezsignfoldertype_sendproofezsignsigner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofezsignsigner_Valid() const{
    return m_b_ezsignfoldertype_sendproofezsignsigner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendattachmentuser() const {
    return m_b_ezsignfoldertype_sendattachmentuser;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendattachmentuser(const bool &b_ezsignfoldertype_sendattachmentuser) {
    m_b_ezsignfoldertype_sendattachmentuser = b_ezsignfoldertype_sendattachmentuser;
    m_b_ezsignfoldertype_sendattachmentuser_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendattachmentuser_Set() const{
    return m_b_ezsignfoldertype_sendattachmentuser_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendattachmentuser_Valid() const{
    return m_b_ezsignfoldertype_sendattachmentuser_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendproofuser() const {
    return m_b_ezsignfoldertype_sendproofuser;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendproofuser(const bool &b_ezsignfoldertype_sendproofuser) {
    m_b_ezsignfoldertype_sendproofuser = b_ezsignfoldertype_sendproofuser;
    m_b_ezsignfoldertype_sendproofuser_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofuser_Set() const{
    return m_b_ezsignfoldertype_sendproofuser_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofuser_Valid() const{
    return m_b_ezsignfoldertype_sendproofuser_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendproofemail() const {
    return m_b_ezsignfoldertype_sendproofemail;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendproofemail(const bool &b_ezsignfoldertype_sendproofemail) {
    m_b_ezsignfoldertype_sendproofemail = b_ezsignfoldertype_sendproofemail;
    m_b_ezsignfoldertype_sendproofemail_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofemail_Set() const{
    return m_b_ezsignfoldertype_sendproofemail_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofemail_Valid() const{
    return m_b_ezsignfoldertype_sendproofemail_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeAllowdownloadattachmentezsignsigner() const {
    return m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeAllowdownloadattachmentezsignsigner(const bool &b_ezsignfoldertype_allowdownloadattachmentezsignsigner) {
    m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner = b_ezsignfoldertype_allowdownloadattachmentezsignsigner;
    m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_Set() const{
    return m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_Valid() const{
    return m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeAllowdownloadproofezsignsigner() const {
    return m_b_ezsignfoldertype_allowdownloadproofezsignsigner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeAllowdownloadproofezsignsigner(const bool &b_ezsignfoldertype_allowdownloadproofezsignsigner) {
    m_b_ezsignfoldertype_allowdownloadproofezsignsigner = b_ezsignfoldertype_allowdownloadproofezsignsigner;
    m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_allowdownloadproofezsignsigner_Set() const{
    return m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_allowdownloadproofezsignsigner_Valid() const{
    return m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendproofreceivealldocument() const {
    return m_b_ezsignfoldertype_sendproofreceivealldocument;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendproofreceivealldocument(const bool &b_ezsignfoldertype_sendproofreceivealldocument) {
    m_b_ezsignfoldertype_sendproofreceivealldocument = b_ezsignfoldertype_sendproofreceivealldocument;
    m_b_ezsignfoldertype_sendproofreceivealldocument_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofreceivealldocument_Set() const{
    return m_b_ezsignfoldertype_sendproofreceivealldocument_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendproofreceivealldocument_Valid() const{
    return m_b_ezsignfoldertype_sendproofreceivealldocument_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtodocumentowner() const {
    return m_b_ezsignfoldertype_sendsignedtodocumentowner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtodocumentowner(const bool &b_ezsignfoldertype_sendsignedtodocumentowner) {
    m_b_ezsignfoldertype_sendsignedtodocumentowner = b_ezsignfoldertype_sendsignedtodocumentowner;
    m_b_ezsignfoldertype_sendsignedtodocumentowner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtodocumentowner_Set() const{
    return m_b_ezsignfoldertype_sendsignedtodocumentowner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtodocumentowner_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtodocumentowner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtofolderowner() const {
    return m_b_ezsignfoldertype_sendsignedtofolderowner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtofolderowner(const bool &b_ezsignfoldertype_sendsignedtofolderowner) {
    m_b_ezsignfoldertype_sendsignedtofolderowner = b_ezsignfoldertype_sendsignedtofolderowner;
    m_b_ezsignfoldertype_sendsignedtofolderowner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtofolderowner_Set() const{
    return m_b_ezsignfoldertype_sendsignedtofolderowner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtofolderowner_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtofolderowner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtofullgroup() const {
    return m_b_ezsignfoldertype_sendsignedtofullgroup;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtofullgroup(const bool &b_ezsignfoldertype_sendsignedtofullgroup) {
    m_b_ezsignfoldertype_sendsignedtofullgroup = b_ezsignfoldertype_sendsignedtofullgroup;
    m_b_ezsignfoldertype_sendsignedtofullgroup_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtofullgroup_Set() const{
    return m_b_ezsignfoldertype_sendsignedtofullgroup_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtofullgroup_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtofullgroup_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtolimitedgroup() const {
    return m_b_ezsignfoldertype_sendsignedtolimitedgroup;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtolimitedgroup(const bool &b_ezsignfoldertype_sendsignedtolimitedgroup) {
    m_b_ezsignfoldertype_sendsignedtolimitedgroup = b_ezsignfoldertype_sendsignedtolimitedgroup;
    m_b_ezsignfoldertype_sendsignedtolimitedgroup_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtolimitedgroup_Set() const{
    return m_b_ezsignfoldertype_sendsignedtolimitedgroup_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtolimitedgroup_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtolimitedgroup_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsignedtocolleague() const {
    return m_b_ezsignfoldertype_sendsignedtocolleague;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsignedtocolleague(const bool &b_ezsignfoldertype_sendsignedtocolleague) {
    m_b_ezsignfoldertype_sendsignedtocolleague = b_ezsignfoldertype_sendsignedtocolleague;
    m_b_ezsignfoldertype_sendsignedtocolleague_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtocolleague_Set() const{
    return m_b_ezsignfoldertype_sendsignedtocolleague_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsignedtocolleague_Valid() const{
    return m_b_ezsignfoldertype_sendsignedtocolleague_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsummarytodocumentowner() const {
    return m_b_ezsignfoldertype_sendsummarytodocumentowner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsummarytodocumentowner(const bool &b_ezsignfoldertype_sendsummarytodocumentowner) {
    m_b_ezsignfoldertype_sendsummarytodocumentowner = b_ezsignfoldertype_sendsummarytodocumentowner;
    m_b_ezsignfoldertype_sendsummarytodocumentowner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytodocumentowner_Set() const{
    return m_b_ezsignfoldertype_sendsummarytodocumentowner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytodocumentowner_Valid() const{
    return m_b_ezsignfoldertype_sendsummarytodocumentowner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsummarytofolderowner() const {
    return m_b_ezsignfoldertype_sendsummarytofolderowner;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsummarytofolderowner(const bool &b_ezsignfoldertype_sendsummarytofolderowner) {
    m_b_ezsignfoldertype_sendsummarytofolderowner = b_ezsignfoldertype_sendsummarytofolderowner;
    m_b_ezsignfoldertype_sendsummarytofolderowner_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytofolderowner_Set() const{
    return m_b_ezsignfoldertype_sendsummarytofolderowner_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytofolderowner_Valid() const{
    return m_b_ezsignfoldertype_sendsummarytofolderowner_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsummarytofullgroup() const {
    return m_b_ezsignfoldertype_sendsummarytofullgroup;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsummarytofullgroup(const bool &b_ezsignfoldertype_sendsummarytofullgroup) {
    m_b_ezsignfoldertype_sendsummarytofullgroup = b_ezsignfoldertype_sendsummarytofullgroup;
    m_b_ezsignfoldertype_sendsummarytofullgroup_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytofullgroup_Set() const{
    return m_b_ezsignfoldertype_sendsummarytofullgroup_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytofullgroup_Valid() const{
    return m_b_ezsignfoldertype_sendsummarytofullgroup_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsummarytolimitedgroup() const {
    return m_b_ezsignfoldertype_sendsummarytolimitedgroup;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsummarytolimitedgroup(const bool &b_ezsignfoldertype_sendsummarytolimitedgroup) {
    m_b_ezsignfoldertype_sendsummarytolimitedgroup = b_ezsignfoldertype_sendsummarytolimitedgroup;
    m_b_ezsignfoldertype_sendsummarytolimitedgroup_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytolimitedgroup_Set() const{
    return m_b_ezsignfoldertype_sendsummarytolimitedgroup_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytolimitedgroup_Valid() const{
    return m_b_ezsignfoldertype_sendsummarytolimitedgroup_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeSendsummarytocolleague() const {
    return m_b_ezsignfoldertype_sendsummarytocolleague;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeSendsummarytocolleague(const bool &b_ezsignfoldertype_sendsummarytocolleague) {
    m_b_ezsignfoldertype_sendsummarytocolleague = b_ezsignfoldertype_sendsummarytocolleague;
    m_b_ezsignfoldertype_sendsummarytocolleague_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytocolleague_Set() const{
    return m_b_ezsignfoldertype_sendsummarytocolleague_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_sendsummarytocolleague_Valid() const{
    return m_b_ezsignfoldertype_sendsummarytocolleague_isValid;
}

Field_eEzsignfoldertypeSigneraccess Ezsignfoldertype_ResponseCompoundV4::getEEzsignfoldertypeSigneraccess() const {
    return m_e_ezsignfoldertype_signeraccess;
}
void Ezsignfoldertype_ResponseCompoundV4::setEEzsignfoldertypeSigneraccess(const Field_eEzsignfoldertypeSigneraccess &e_ezsignfoldertype_signeraccess) {
    m_e_ezsignfoldertype_signeraccess = e_ezsignfoldertype_signeraccess;
    m_e_ezsignfoldertype_signeraccess_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_signeraccess_Set() const{
    return m_e_ezsignfoldertype_signeraccess_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_e_ezsignfoldertype_signeraccess_Valid() const{
    return m_e_ezsignfoldertype_signeraccess_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isBEzsignfoldertypeIsactive() const {
    return m_b_ezsignfoldertype_isactive;
}
void Ezsignfoldertype_ResponseCompoundV4::setBEzsignfoldertypeIsactive(const bool &b_ezsignfoldertype_isactive) {
    m_b_ezsignfoldertype_isactive = b_ezsignfoldertype_isactive;
    m_b_ezsignfoldertype_isactive_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_isactive_Set() const{
    return m_b_ezsignfoldertype_isactive_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_b_ezsignfoldertype_isactive_Valid() const{
    return m_b_ezsignfoldertype_isactive_isValid;
}

QList<qint32> Ezsignfoldertype_ResponseCompoundV4::getAFkiPdfalevelId() const {
    return m_a_fki_pdfalevel_id;
}
void Ezsignfoldertype_ResponseCompoundV4::setAFkiPdfalevelId(const QList<qint32> &a_fki_pdfalevel_id) {
    m_a_fki_pdfalevel_id = a_fki_pdfalevel_id;
    m_a_fki_pdfalevel_id_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_fki_pdfalevel_id_Set() const{
    return m_a_fki_pdfalevel_id_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_fki_pdfalevel_id_Valid() const{
    return m_a_fki_pdfalevel_id_isValid;
}

QList<Userlogintype_Response> Ezsignfoldertype_ResponseCompoundV4::getAObjUserlogintype() const {
    return m_a_obj_userlogintype;
}
void Ezsignfoldertype_ResponseCompoundV4::setAObjUserlogintype(const QList<Userlogintype_Response> &a_obj_userlogintype) {
    m_a_obj_userlogintype = a_obj_userlogintype;
    m_a_obj_userlogintype_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_userlogintype_Set() const{
    return m_a_obj_userlogintype_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_userlogintype_Valid() const{
    return m_a_obj_userlogintype_isValid;
}

QList<Usergroup_Response> Ezsignfoldertype_ResponseCompoundV4::getAObjUsergroupAll() const {
    return m_a_obj_usergroup_all;
}
void Ezsignfoldertype_ResponseCompoundV4::setAObjUsergroupAll(const QList<Usergroup_Response> &a_obj_usergroup_all) {
    m_a_obj_usergroup_all = a_obj_usergroup_all;
    m_a_obj_usergroup_all_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_usergroup_all_Set() const{
    return m_a_obj_usergroup_all_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_usergroup_all_Valid() const{
    return m_a_obj_usergroup_all_isValid;
}

QList<Usergroup_Response> Ezsignfoldertype_ResponseCompoundV4::getAObjUsergroupRestricted() const {
    return m_a_obj_usergroup_restricted;
}
void Ezsignfoldertype_ResponseCompoundV4::setAObjUsergroupRestricted(const QList<Usergroup_Response> &a_obj_usergroup_restricted) {
    m_a_obj_usergroup_restricted = a_obj_usergroup_restricted;
    m_a_obj_usergroup_restricted_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_usergroup_restricted_Set() const{
    return m_a_obj_usergroup_restricted_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_usergroup_restricted_Valid() const{
    return m_a_obj_usergroup_restricted_isValid;
}

QList<Usergroup_Response> Ezsignfoldertype_ResponseCompoundV4::getAObjUsergroupTemplate() const {
    return m_a_obj_usergroup_template;
}
void Ezsignfoldertype_ResponseCompoundV4::setAObjUsergroupTemplate(const QList<Usergroup_Response> &a_obj_usergroup_template) {
    m_a_obj_usergroup_template = a_obj_usergroup_template;
    m_a_obj_usergroup_template_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_usergroup_template_Set() const{
    return m_a_obj_usergroup_template_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_obj_usergroup_template_Valid() const{
    return m_a_obj_usergroup_template_isValid;
}

Common_Audit Ezsignfoldertype_ResponseCompoundV4::getObjAudit() const {
    return m_obj_audit;
}
void Ezsignfoldertype_ResponseCompoundV4::setObjAudit(const Common_Audit &obj_audit) {
    m_obj_audit = obj_audit;
    m_obj_audit_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_obj_audit_Set() const{
    return m_obj_audit_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_obj_audit_Valid() const{
    return m_obj_audit_isValid;
}

QList<qint32> Ezsignfoldertype_ResponseCompoundV4::getAFkiUserIdSigned() const {
    return m_a_fki_user_id_signed;
}
void Ezsignfoldertype_ResponseCompoundV4::setAFkiUserIdSigned(const QList<qint32> &a_fki_user_id_signed) {
    m_a_fki_user_id_signed = a_fki_user_id_signed;
    m_a_fki_user_id_signed_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_fki_user_id_signed_Set() const{
    return m_a_fki_user_id_signed_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_fki_user_id_signed_Valid() const{
    return m_a_fki_user_id_signed_isValid;
}

QList<qint32> Ezsignfoldertype_ResponseCompoundV4::getAFkiUserIdSummary() const {
    return m_a_fki_user_id_summary;
}
void Ezsignfoldertype_ResponseCompoundV4::setAFkiUserIdSummary(const QList<qint32> &a_fki_user_id_summary) {
    m_a_fki_user_id_summary = a_fki_user_id_summary;
    m_a_fki_user_id_summary_isSet = true;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_fki_user_id_summary_Set() const{
    return m_a_fki_user_id_summary_isSet;
}

bool Ezsignfoldertype_ResponseCompoundV4::is_a_fki_user_id_summary_Valid() const{
    return m_a_fki_user_id_summary_isValid;
}

bool Ezsignfoldertype_ResponseCompoundV4::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsignfoldertype_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_ezsignfoldertype_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_branding_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_billingentityinternal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsigntsarequirement_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_font_id_annotation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_font_id_formfield_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_font_id_signature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_pdfalevel_id_convert_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_documentdependency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_branding_description_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_billingentityinternal_description_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigntsarequirement_description_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_email_address_signed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_email_address_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_pdfarequirement.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_pdfanoncompliantaction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_privacylevel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_fontsizeannotation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_fontsizeformfield_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_sendreminderfirstdays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_sendreminderotherdays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_archivaldays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_disposal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_completion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_disposaldays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_deadlinedays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_prematurelyendautomatically_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsignfoldertype_prematurelyendautomaticallydays_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_automaticsignature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_delegate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_discussion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_logrecipientinproof_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_reassignezsignsigner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_reassignuser_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_reassigngroup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtoezsignsigner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtouser_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendattachmentezsignsigner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendproofezsignsigner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendattachmentuser_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendproofuser_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendproofemail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_allowdownloadattachmentezsignsigner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_allowdownloadproofezsignsigner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendproofreceivealldocument_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtodocumentowner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtofolderowner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtofullgroup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtolimitedgroup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsignedtocolleague_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsummarytodocumentowner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsummarytofolderowner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsummarytofullgroup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsummarytolimitedgroup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_sendsummarytocolleague_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsignfoldertype_signeraccess.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsignfoldertype_isactive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_fki_pdfalevel_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_userlogintype.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_usergroup_all.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_usergroup_restricted.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_usergroup_template.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_audit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_fki_user_id_signed.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_fki_user_id_summary.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsignfoldertype_ResponseCompoundV4::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezsignfoldertype_id_isValid && m_obj_ezsignfoldertype_name_isValid && m_fki_branding_id_isValid && m_s_branding_description_x_isValid && m_e_ezsignfoldertype_privacylevel_isValid && m_i_ezsignfoldertype_archivaldays_isValid && m_e_ezsignfoldertype_disposal_isValid && m_e_ezsignfoldertype_completion_isValid && m_i_ezsignfoldertype_deadlinedays_isValid && m_b_ezsignfoldertype_sendsignedtodocumentowner_isValid && m_b_ezsignfoldertype_sendsignedtofolderowner_isValid && m_b_ezsignfoldertype_sendsignedtocolleague_isValid && m_b_ezsignfoldertype_sendsummarytodocumentowner_isValid && m_b_ezsignfoldertype_sendsummarytofolderowner_isValid && m_b_ezsignfoldertype_sendsummarytocolleague_isValid && m_b_ezsignfoldertype_isactive_isValid && m_a_obj_userlogintype_isValid && m_obj_audit_isValid && true;
}

} // namespace Ezmaxapi
