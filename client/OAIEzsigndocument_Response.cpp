/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEzsigndocument_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace Ezmaxapi {

OAIEzsigndocument_Response::OAIEzsigndocument_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEzsigndocument_Response::OAIEzsigndocument_Response() {
    this->initializeModel();
}

OAIEzsigndocument_Response::~OAIEzsigndocument_Response() {}

void OAIEzsigndocument_Response::initializeModel() {

    m_pki_ezsigndocument_id_isSet = false;
    m_pki_ezsigndocument_id_isValid = false;

    m_fki_ezsignfolder_id_isSet = false;
    m_fki_ezsignfolder_id_isValid = false;

    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet = false;
    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid = false;

    m_dt_ezsigndocument_duedate_isSet = false;
    m_dt_ezsigndocument_duedate_isValid = false;

    m_dt_ezsignform_completed_isSet = false;
    m_dt_ezsignform_completed_isValid = false;

    m_fki_language_id_isSet = false;
    m_fki_language_id_isValid = false;

    m_s_ezsigndocument_name_isSet = false;
    m_s_ezsigndocument_name_isValid = false;

    m_e_ezsigndocument_step_isSet = false;
    m_e_ezsigndocument_step_isValid = false;

    m_dt_ezsigndocument_firstsend_isSet = false;
    m_dt_ezsigndocument_firstsend_isValid = false;

    m_dt_ezsigndocument_lastsend_isSet = false;
    m_dt_ezsigndocument_lastsend_isValid = false;

    m_i_ezsigndocument_order_isSet = false;
    m_i_ezsigndocument_order_isValid = false;

    m_i_ezsigndocument_pagetotal_isSet = false;
    m_i_ezsigndocument_pagetotal_isValid = false;

    m_i_ezsigndocument_signaturesigned_isSet = false;
    m_i_ezsigndocument_signaturesigned_isValid = false;

    m_i_ezsigndocument_signaturetotal_isSet = false;
    m_i_ezsigndocument_signaturetotal_isValid = false;

    m_s_ezsigndocument_md5initial_isSet = false;
    m_s_ezsigndocument_md5initial_isValid = false;

    m_t_ezsigndocument_declinedtosignreason_isSet = false;
    m_t_ezsigndocument_declinedtosignreason_isValid = false;

    m_s_ezsigndocument_md5signed_isSet = false;
    m_s_ezsigndocument_md5signed_isValid = false;

    m_b_ezsigndocument_ezsignform_isSet = false;
    m_b_ezsigndocument_ezsignform_isValid = false;

    m_b_ezsigndocument_hassignedsignatures_isSet = false;
    m_b_ezsigndocument_hassignedsignatures_isValid = false;

    m_obj_audit_isSet = false;
    m_obj_audit_isValid = false;

    m_s_ezsigndocument_externalid_isSet = false;
    m_s_ezsigndocument_externalid_isValid = false;
}

void OAIEzsigndocument_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEzsigndocument_Response::fromJsonObject(QJsonObject json) {

    m_pki_ezsigndocument_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsigndocument_id, json[QString("pkiEzsigndocumentID")]);
    m_pki_ezsigndocument_id_isSet = !json[QString("pkiEzsigndocumentID")].isNull() && m_pki_ezsigndocument_id_isValid;

    m_fki_ezsignfolder_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsignfolder_id, json[QString("fkiEzsignfolderID")]);
    m_fki_ezsignfolder_id_isSet = !json[QString("fkiEzsignfolderID")].isNull() && m_fki_ezsignfolder_id_isValid;

    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsignfoldersignerassociation_id_declinedtosign, json[QString("fkiEzsignfoldersignerassociationIDDeclinedtosign")]);
    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet = !json[QString("fkiEzsignfoldersignerassociationIDDeclinedtosign")].isNull() && m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid;

    m_dt_ezsigndocument_duedate_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsigndocument_duedate, json[QString("dtEzsigndocumentDuedate")]);
    m_dt_ezsigndocument_duedate_isSet = !json[QString("dtEzsigndocumentDuedate")].isNull() && m_dt_ezsigndocument_duedate_isValid;

    m_dt_ezsignform_completed_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsignform_completed, json[QString("dtEzsignformCompleted")]);
    m_dt_ezsignform_completed_isSet = !json[QString("dtEzsignformCompleted")].isNull() && m_dt_ezsignform_completed_isValid;

    m_fki_language_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_language_id, json[QString("fkiLanguageID")]);
    m_fki_language_id_isSet = !json[QString("fkiLanguageID")].isNull() && m_fki_language_id_isValid;

    m_s_ezsigndocument_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_name, json[QString("sEzsigndocumentName")]);
    m_s_ezsigndocument_name_isSet = !json[QString("sEzsigndocumentName")].isNull() && m_s_ezsigndocument_name_isValid;

    m_e_ezsigndocument_step_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsigndocument_step, json[QString("eEzsigndocumentStep")]);
    m_e_ezsigndocument_step_isSet = !json[QString("eEzsigndocumentStep")].isNull() && m_e_ezsigndocument_step_isValid;

    m_dt_ezsigndocument_firstsend_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsigndocument_firstsend, json[QString("dtEzsigndocumentFirstsend")]);
    m_dt_ezsigndocument_firstsend_isSet = !json[QString("dtEzsigndocumentFirstsend")].isNull() && m_dt_ezsigndocument_firstsend_isValid;

    m_dt_ezsigndocument_lastsend_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsigndocument_lastsend, json[QString("dtEzsigndocumentLastsend")]);
    m_dt_ezsigndocument_lastsend_isSet = !json[QString("dtEzsigndocumentLastsend")].isNull() && m_dt_ezsigndocument_lastsend_isValid;

    m_i_ezsigndocument_order_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_order, json[QString("iEzsigndocumentOrder")]);
    m_i_ezsigndocument_order_isSet = !json[QString("iEzsigndocumentOrder")].isNull() && m_i_ezsigndocument_order_isValid;

    m_i_ezsigndocument_pagetotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_pagetotal, json[QString("iEzsigndocumentPagetotal")]);
    m_i_ezsigndocument_pagetotal_isSet = !json[QString("iEzsigndocumentPagetotal")].isNull() && m_i_ezsigndocument_pagetotal_isValid;

    m_i_ezsigndocument_signaturesigned_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_signaturesigned, json[QString("iEzsigndocumentSignaturesigned")]);
    m_i_ezsigndocument_signaturesigned_isSet = !json[QString("iEzsigndocumentSignaturesigned")].isNull() && m_i_ezsigndocument_signaturesigned_isValid;

    m_i_ezsigndocument_signaturetotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_signaturetotal, json[QString("iEzsigndocumentSignaturetotal")]);
    m_i_ezsigndocument_signaturetotal_isSet = !json[QString("iEzsigndocumentSignaturetotal")].isNull() && m_i_ezsigndocument_signaturetotal_isValid;

    m_s_ezsigndocument_md5initial_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_md5initial, json[QString("sEzsigndocumentMD5initial")]);
    m_s_ezsigndocument_md5initial_isSet = !json[QString("sEzsigndocumentMD5initial")].isNull() && m_s_ezsigndocument_md5initial_isValid;

    m_t_ezsigndocument_declinedtosignreason_isValid = ::Ezmaxapi::fromJsonValue(m_t_ezsigndocument_declinedtosignreason, json[QString("tEzsigndocumentDeclinedtosignreason")]);
    m_t_ezsigndocument_declinedtosignreason_isSet = !json[QString("tEzsigndocumentDeclinedtosignreason")].isNull() && m_t_ezsigndocument_declinedtosignreason_isValid;

    m_s_ezsigndocument_md5signed_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_md5signed, json[QString("sEzsigndocumentMD5signed")]);
    m_s_ezsigndocument_md5signed_isSet = !json[QString("sEzsigndocumentMD5signed")].isNull() && m_s_ezsigndocument_md5signed_isValid;

    m_b_ezsigndocument_ezsignform_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsigndocument_ezsignform, json[QString("bEzsigndocumentEzsignform")]);
    m_b_ezsigndocument_ezsignform_isSet = !json[QString("bEzsigndocumentEzsignform")].isNull() && m_b_ezsigndocument_ezsignform_isValid;

    m_b_ezsigndocument_hassignedsignatures_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsigndocument_hassignedsignatures, json[QString("bEzsigndocumentHassignedsignatures")]);
    m_b_ezsigndocument_hassignedsignatures_isSet = !json[QString("bEzsigndocumentHassignedsignatures")].isNull() && m_b_ezsigndocument_hassignedsignatures_isValid;

    m_obj_audit_isValid = ::Ezmaxapi::fromJsonValue(m_obj_audit, json[QString("objAudit")]);
    m_obj_audit_isSet = !json[QString("objAudit")].isNull() && m_obj_audit_isValid;

    m_s_ezsigndocument_externalid_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_externalid, json[QString("sEzsigndocumentExternalid")]);
    m_s_ezsigndocument_externalid_isSet = !json[QString("sEzsigndocumentExternalid")].isNull() && m_s_ezsigndocument_externalid_isValid;
}

QString OAIEzsigndocument_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEzsigndocument_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsigndocument_id_isSet) {
        obj.insert(QString("pkiEzsigndocumentID"), ::Ezmaxapi::toJsonValue(m_pki_ezsigndocument_id));
    }
    if (m_fki_ezsignfolder_id_isSet) {
        obj.insert(QString("fkiEzsignfolderID"), ::Ezmaxapi::toJsonValue(m_fki_ezsignfolder_id));
    }
    if (m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet) {
        obj.insert(QString("fkiEzsignfoldersignerassociationIDDeclinedtosign"), ::Ezmaxapi::toJsonValue(m_fki_ezsignfoldersignerassociation_id_declinedtosign));
    }
    if (m_dt_ezsigndocument_duedate_isSet) {
        obj.insert(QString("dtEzsigndocumentDuedate"), ::Ezmaxapi::toJsonValue(m_dt_ezsigndocument_duedate));
    }
    if (m_dt_ezsignform_completed_isSet) {
        obj.insert(QString("dtEzsignformCompleted"), ::Ezmaxapi::toJsonValue(m_dt_ezsignform_completed));
    }
    if (m_fki_language_id_isSet) {
        obj.insert(QString("fkiLanguageID"), ::Ezmaxapi::toJsonValue(m_fki_language_id));
    }
    if (m_s_ezsigndocument_name_isSet) {
        obj.insert(QString("sEzsigndocumentName"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_name));
    }
    if (m_e_ezsigndocument_step.isSet()) {
        obj.insert(QString("eEzsigndocumentStep"), ::Ezmaxapi::toJsonValue(m_e_ezsigndocument_step));
    }
    if (m_dt_ezsigndocument_firstsend_isSet) {
        obj.insert(QString("dtEzsigndocumentFirstsend"), ::Ezmaxapi::toJsonValue(m_dt_ezsigndocument_firstsend));
    }
    if (m_dt_ezsigndocument_lastsend_isSet) {
        obj.insert(QString("dtEzsigndocumentLastsend"), ::Ezmaxapi::toJsonValue(m_dt_ezsigndocument_lastsend));
    }
    if (m_i_ezsigndocument_order_isSet) {
        obj.insert(QString("iEzsigndocumentOrder"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_order));
    }
    if (m_i_ezsigndocument_pagetotal_isSet) {
        obj.insert(QString("iEzsigndocumentPagetotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_pagetotal));
    }
    if (m_i_ezsigndocument_signaturesigned_isSet) {
        obj.insert(QString("iEzsigndocumentSignaturesigned"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_signaturesigned));
    }
    if (m_i_ezsigndocument_signaturetotal_isSet) {
        obj.insert(QString("iEzsigndocumentSignaturetotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_signaturetotal));
    }
    if (m_s_ezsigndocument_md5initial_isSet) {
        obj.insert(QString("sEzsigndocumentMD5initial"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_md5initial));
    }
    if (m_t_ezsigndocument_declinedtosignreason_isSet) {
        obj.insert(QString("tEzsigndocumentDeclinedtosignreason"), ::Ezmaxapi::toJsonValue(m_t_ezsigndocument_declinedtosignreason));
    }
    if (m_s_ezsigndocument_md5signed_isSet) {
        obj.insert(QString("sEzsigndocumentMD5signed"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_md5signed));
    }
    if (m_b_ezsigndocument_ezsignform_isSet) {
        obj.insert(QString("bEzsigndocumentEzsignform"), ::Ezmaxapi::toJsonValue(m_b_ezsigndocument_ezsignform));
    }
    if (m_b_ezsigndocument_hassignedsignatures_isSet) {
        obj.insert(QString("bEzsigndocumentHassignedsignatures"), ::Ezmaxapi::toJsonValue(m_b_ezsigndocument_hassignedsignatures));
    }
    if (m_obj_audit.isSet()) {
        obj.insert(QString("objAudit"), ::Ezmaxapi::toJsonValue(m_obj_audit));
    }
    if (m_s_ezsigndocument_externalid_isSet) {
        obj.insert(QString("sEzsigndocumentExternalid"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_externalid));
    }
    return obj;
}

qint32 OAIEzsigndocument_Response::getPkiEzsigndocumentId() const {
    return m_pki_ezsigndocument_id;
}
void OAIEzsigndocument_Response::setPkiEzsigndocumentId(const qint32 &pki_ezsigndocument_id) {
    m_pki_ezsigndocument_id = pki_ezsigndocument_id;
    m_pki_ezsigndocument_id_isSet = true;
}

bool OAIEzsigndocument_Response::is_pki_ezsigndocument_id_Set() const{
    return m_pki_ezsigndocument_id_isSet;
}

bool OAIEzsigndocument_Response::is_pki_ezsigndocument_id_Valid() const{
    return m_pki_ezsigndocument_id_isValid;
}

qint32 OAIEzsigndocument_Response::getFkiEzsignfolderId() const {
    return m_fki_ezsignfolder_id;
}
void OAIEzsigndocument_Response::setFkiEzsignfolderId(const qint32 &fki_ezsignfolder_id) {
    m_fki_ezsignfolder_id = fki_ezsignfolder_id;
    m_fki_ezsignfolder_id_isSet = true;
}

bool OAIEzsigndocument_Response::is_fki_ezsignfolder_id_Set() const{
    return m_fki_ezsignfolder_id_isSet;
}

bool OAIEzsigndocument_Response::is_fki_ezsignfolder_id_Valid() const{
    return m_fki_ezsignfolder_id_isValid;
}

qint32 OAIEzsigndocument_Response::getFkiEzsignfoldersignerassociationIdDeclinedtosign() const {
    return m_fki_ezsignfoldersignerassociation_id_declinedtosign;
}
void OAIEzsigndocument_Response::setFkiEzsignfoldersignerassociationIdDeclinedtosign(const qint32 &fki_ezsignfoldersignerassociation_id_declinedtosign) {
    m_fki_ezsignfoldersignerassociation_id_declinedtosign = fki_ezsignfoldersignerassociation_id_declinedtosign;
    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet = true;
}

bool OAIEzsigndocument_Response::is_fki_ezsignfoldersignerassociation_id_declinedtosign_Set() const{
    return m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet;
}

bool OAIEzsigndocument_Response::is_fki_ezsignfoldersignerassociation_id_declinedtosign_Valid() const{
    return m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid;
}

QString OAIEzsigndocument_Response::getDtEzsigndocumentDuedate() const {
    return m_dt_ezsigndocument_duedate;
}
void OAIEzsigndocument_Response::setDtEzsigndocumentDuedate(const QString &dt_ezsigndocument_duedate) {
    m_dt_ezsigndocument_duedate = dt_ezsigndocument_duedate;
    m_dt_ezsigndocument_duedate_isSet = true;
}

bool OAIEzsigndocument_Response::is_dt_ezsigndocument_duedate_Set() const{
    return m_dt_ezsigndocument_duedate_isSet;
}

bool OAIEzsigndocument_Response::is_dt_ezsigndocument_duedate_Valid() const{
    return m_dt_ezsigndocument_duedate_isValid;
}

QString OAIEzsigndocument_Response::getDtEzsignformCompleted() const {
    return m_dt_ezsignform_completed;
}
void OAIEzsigndocument_Response::setDtEzsignformCompleted(const QString &dt_ezsignform_completed) {
    m_dt_ezsignform_completed = dt_ezsignform_completed;
    m_dt_ezsignform_completed_isSet = true;
}

bool OAIEzsigndocument_Response::is_dt_ezsignform_completed_Set() const{
    return m_dt_ezsignform_completed_isSet;
}

bool OAIEzsigndocument_Response::is_dt_ezsignform_completed_Valid() const{
    return m_dt_ezsignform_completed_isValid;
}

qint32 OAIEzsigndocument_Response::getFkiLanguageId() const {
    return m_fki_language_id;
}
void OAIEzsigndocument_Response::setFkiLanguageId(const qint32 &fki_language_id) {
    m_fki_language_id = fki_language_id;
    m_fki_language_id_isSet = true;
}

bool OAIEzsigndocument_Response::is_fki_language_id_Set() const{
    return m_fki_language_id_isSet;
}

bool OAIEzsigndocument_Response::is_fki_language_id_Valid() const{
    return m_fki_language_id_isValid;
}

QString OAIEzsigndocument_Response::getSEzsigndocumentName() const {
    return m_s_ezsigndocument_name;
}
void OAIEzsigndocument_Response::setSEzsigndocumentName(const QString &s_ezsigndocument_name) {
    m_s_ezsigndocument_name = s_ezsigndocument_name;
    m_s_ezsigndocument_name_isSet = true;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_name_Set() const{
    return m_s_ezsigndocument_name_isSet;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_name_Valid() const{
    return m_s_ezsigndocument_name_isValid;
}

OAIField_eEzsigndocumentStep OAIEzsigndocument_Response::getEEzsigndocumentStep() const {
    return m_e_ezsigndocument_step;
}
void OAIEzsigndocument_Response::setEEzsigndocumentStep(const OAIField_eEzsigndocumentStep &e_ezsigndocument_step) {
    m_e_ezsigndocument_step = e_ezsigndocument_step;
    m_e_ezsigndocument_step_isSet = true;
}

bool OAIEzsigndocument_Response::is_e_ezsigndocument_step_Set() const{
    return m_e_ezsigndocument_step_isSet;
}

bool OAIEzsigndocument_Response::is_e_ezsigndocument_step_Valid() const{
    return m_e_ezsigndocument_step_isValid;
}

QString OAIEzsigndocument_Response::getDtEzsigndocumentFirstsend() const {
    return m_dt_ezsigndocument_firstsend;
}
void OAIEzsigndocument_Response::setDtEzsigndocumentFirstsend(const QString &dt_ezsigndocument_firstsend) {
    m_dt_ezsigndocument_firstsend = dt_ezsigndocument_firstsend;
    m_dt_ezsigndocument_firstsend_isSet = true;
}

bool OAIEzsigndocument_Response::is_dt_ezsigndocument_firstsend_Set() const{
    return m_dt_ezsigndocument_firstsend_isSet;
}

bool OAIEzsigndocument_Response::is_dt_ezsigndocument_firstsend_Valid() const{
    return m_dt_ezsigndocument_firstsend_isValid;
}

QString OAIEzsigndocument_Response::getDtEzsigndocumentLastsend() const {
    return m_dt_ezsigndocument_lastsend;
}
void OAIEzsigndocument_Response::setDtEzsigndocumentLastsend(const QString &dt_ezsigndocument_lastsend) {
    m_dt_ezsigndocument_lastsend = dt_ezsigndocument_lastsend;
    m_dt_ezsigndocument_lastsend_isSet = true;
}

bool OAIEzsigndocument_Response::is_dt_ezsigndocument_lastsend_Set() const{
    return m_dt_ezsigndocument_lastsend_isSet;
}

bool OAIEzsigndocument_Response::is_dt_ezsigndocument_lastsend_Valid() const{
    return m_dt_ezsigndocument_lastsend_isValid;
}

qint32 OAIEzsigndocument_Response::getIEzsigndocumentOrder() const {
    return m_i_ezsigndocument_order;
}
void OAIEzsigndocument_Response::setIEzsigndocumentOrder(const qint32 &i_ezsigndocument_order) {
    m_i_ezsigndocument_order = i_ezsigndocument_order;
    m_i_ezsigndocument_order_isSet = true;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_order_Set() const{
    return m_i_ezsigndocument_order_isSet;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_order_Valid() const{
    return m_i_ezsigndocument_order_isValid;
}

qint32 OAIEzsigndocument_Response::getIEzsigndocumentPagetotal() const {
    return m_i_ezsigndocument_pagetotal;
}
void OAIEzsigndocument_Response::setIEzsigndocumentPagetotal(const qint32 &i_ezsigndocument_pagetotal) {
    m_i_ezsigndocument_pagetotal = i_ezsigndocument_pagetotal;
    m_i_ezsigndocument_pagetotal_isSet = true;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_pagetotal_Set() const{
    return m_i_ezsigndocument_pagetotal_isSet;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_pagetotal_Valid() const{
    return m_i_ezsigndocument_pagetotal_isValid;
}

qint32 OAIEzsigndocument_Response::getIEzsigndocumentSignaturesigned() const {
    return m_i_ezsigndocument_signaturesigned;
}
void OAIEzsigndocument_Response::setIEzsigndocumentSignaturesigned(const qint32 &i_ezsigndocument_signaturesigned) {
    m_i_ezsigndocument_signaturesigned = i_ezsigndocument_signaturesigned;
    m_i_ezsigndocument_signaturesigned_isSet = true;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_signaturesigned_Set() const{
    return m_i_ezsigndocument_signaturesigned_isSet;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_signaturesigned_Valid() const{
    return m_i_ezsigndocument_signaturesigned_isValid;
}

qint32 OAIEzsigndocument_Response::getIEzsigndocumentSignaturetotal() const {
    return m_i_ezsigndocument_signaturetotal;
}
void OAIEzsigndocument_Response::setIEzsigndocumentSignaturetotal(const qint32 &i_ezsigndocument_signaturetotal) {
    m_i_ezsigndocument_signaturetotal = i_ezsigndocument_signaturetotal;
    m_i_ezsigndocument_signaturetotal_isSet = true;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_signaturetotal_Set() const{
    return m_i_ezsigndocument_signaturetotal_isSet;
}

bool OAIEzsigndocument_Response::is_i_ezsigndocument_signaturetotal_Valid() const{
    return m_i_ezsigndocument_signaturetotal_isValid;
}

QString OAIEzsigndocument_Response::getSEzsigndocumentMd5initial() const {
    return m_s_ezsigndocument_md5initial;
}
void OAIEzsigndocument_Response::setSEzsigndocumentMd5initial(const QString &s_ezsigndocument_md5initial) {
    m_s_ezsigndocument_md5initial = s_ezsigndocument_md5initial;
    m_s_ezsigndocument_md5initial_isSet = true;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_md5initial_Set() const{
    return m_s_ezsigndocument_md5initial_isSet;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_md5initial_Valid() const{
    return m_s_ezsigndocument_md5initial_isValid;
}

QString OAIEzsigndocument_Response::getTEzsigndocumentDeclinedtosignreason() const {
    return m_t_ezsigndocument_declinedtosignreason;
}
void OAIEzsigndocument_Response::setTEzsigndocumentDeclinedtosignreason(const QString &t_ezsigndocument_declinedtosignreason) {
    m_t_ezsigndocument_declinedtosignreason = t_ezsigndocument_declinedtosignreason;
    m_t_ezsigndocument_declinedtosignreason_isSet = true;
}

bool OAIEzsigndocument_Response::is_t_ezsigndocument_declinedtosignreason_Set() const{
    return m_t_ezsigndocument_declinedtosignreason_isSet;
}

bool OAIEzsigndocument_Response::is_t_ezsigndocument_declinedtosignreason_Valid() const{
    return m_t_ezsigndocument_declinedtosignreason_isValid;
}

QString OAIEzsigndocument_Response::getSEzsigndocumentMd5signed() const {
    return m_s_ezsigndocument_md5signed;
}
void OAIEzsigndocument_Response::setSEzsigndocumentMd5signed(const QString &s_ezsigndocument_md5signed) {
    m_s_ezsigndocument_md5signed = s_ezsigndocument_md5signed;
    m_s_ezsigndocument_md5signed_isSet = true;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_md5signed_Set() const{
    return m_s_ezsigndocument_md5signed_isSet;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_md5signed_Valid() const{
    return m_s_ezsigndocument_md5signed_isValid;
}

bool OAIEzsigndocument_Response::isBEzsigndocumentEzsignform() const {
    return m_b_ezsigndocument_ezsignform;
}
void OAIEzsigndocument_Response::setBEzsigndocumentEzsignform(const bool &b_ezsigndocument_ezsignform) {
    m_b_ezsigndocument_ezsignform = b_ezsigndocument_ezsignform;
    m_b_ezsigndocument_ezsignform_isSet = true;
}

bool OAIEzsigndocument_Response::is_b_ezsigndocument_ezsignform_Set() const{
    return m_b_ezsigndocument_ezsignform_isSet;
}

bool OAIEzsigndocument_Response::is_b_ezsigndocument_ezsignform_Valid() const{
    return m_b_ezsigndocument_ezsignform_isValid;
}

bool OAIEzsigndocument_Response::isBEzsigndocumentHassignedsignatures() const {
    return m_b_ezsigndocument_hassignedsignatures;
}
void OAIEzsigndocument_Response::setBEzsigndocumentHassignedsignatures(const bool &b_ezsigndocument_hassignedsignatures) {
    m_b_ezsigndocument_hassignedsignatures = b_ezsigndocument_hassignedsignatures;
    m_b_ezsigndocument_hassignedsignatures_isSet = true;
}

bool OAIEzsigndocument_Response::is_b_ezsigndocument_hassignedsignatures_Set() const{
    return m_b_ezsigndocument_hassignedsignatures_isSet;
}

bool OAIEzsigndocument_Response::is_b_ezsigndocument_hassignedsignatures_Valid() const{
    return m_b_ezsigndocument_hassignedsignatures_isValid;
}

OAICommon_Audit OAIEzsigndocument_Response::getObjAudit() const {
    return m_obj_audit;
}
void OAIEzsigndocument_Response::setObjAudit(const OAICommon_Audit &obj_audit) {
    m_obj_audit = obj_audit;
    m_obj_audit_isSet = true;
}

bool OAIEzsigndocument_Response::is_obj_audit_Set() const{
    return m_obj_audit_isSet;
}

bool OAIEzsigndocument_Response::is_obj_audit_Valid() const{
    return m_obj_audit_isValid;
}

QString OAIEzsigndocument_Response::getSEzsigndocumentExternalid() const {
    return m_s_ezsigndocument_externalid;
}
void OAIEzsigndocument_Response::setSEzsigndocumentExternalid(const QString &s_ezsigndocument_externalid) {
    m_s_ezsigndocument_externalid = s_ezsigndocument_externalid;
    m_s_ezsigndocument_externalid_isSet = true;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_externalid_Set() const{
    return m_s_ezsigndocument_externalid_isSet;
}

bool OAIEzsigndocument_Response::is_s_ezsigndocument_externalid_Valid() const{
    return m_s_ezsigndocument_externalid_isValid;
}

bool OAIEzsigndocument_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsigndocument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsignfolder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsigndocument_duedate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsignform_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_language_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsigndocument_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsigndocument_firstsend_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsigndocument_lastsend_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_pagetotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_signaturesigned_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_signaturetotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_md5initial_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_t_ezsigndocument_declinedtosignreason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_md5signed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsigndocument_ezsignform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsigndocument_hassignedsignatures_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_audit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_externalid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEzsigndocument_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezsigndocument_id_isValid && m_fki_ezsignfolder_id_isValid && m_dt_ezsigndocument_duedate_isValid && m_s_ezsigndocument_name_isValid && m_e_ezsigndocument_step_isValid && m_i_ezsigndocument_order_isValid && m_i_ezsigndocument_pagetotal_isValid && m_i_ezsigndocument_signaturesigned_isValid && m_i_ezsigndocument_signaturetotal_isValid && true;
}

} // namespace Ezmaxapi
