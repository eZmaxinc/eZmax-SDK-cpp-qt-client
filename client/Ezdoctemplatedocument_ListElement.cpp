/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezdoctemplatedocument_ListElement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezdoctemplatedocument_ListElement::Ezdoctemplatedocument_ListElement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezdoctemplatedocument_ListElement::Ezdoctemplatedocument_ListElement() {
    this->initializeModel();
}

Ezdoctemplatedocument_ListElement::~Ezdoctemplatedocument_ListElement() {}

void Ezdoctemplatedocument_ListElement::initializeModel() {

    m_pki_ezdoctemplatedocument_id_isSet = false;
    m_pki_ezdoctemplatedocument_id_isValid = false;

    m_fki_language_id_isSet = false;
    m_fki_language_id_isValid = false;

    m_fki_ezsignfoldertype_id_isSet = false;
    m_fki_ezsignfoldertype_id_isValid = false;

    m_fki_ezdoctemplatetype_id_isSet = false;
    m_fki_ezdoctemplatetype_id_isValid = false;

    m_fki_ezdoctemplatefieldtypecategory_id_isSet = false;
    m_fki_ezdoctemplatefieldtypecategory_id_isValid = false;

    m_s_ezsignfoldertype_name_x_isSet = false;
    m_s_ezsignfoldertype_name_x_isValid = false;

    m_s_ezdoctemplatetype_description_x_isSet = false;
    m_s_ezdoctemplatetype_description_x_isValid = false;

    m_s_ezdoctemplatefieldtypecategory_description_x_isSet = false;
    m_s_ezdoctemplatefieldtypecategory_description_x_isValid = false;

    m_e_ezdoctemplatedocument_privacylevel_isSet = false;
    m_e_ezdoctemplatedocument_privacylevel_isValid = false;

    m_b_ezdoctemplatedocument_isactive_isSet = false;
    m_b_ezdoctemplatedocument_isactive_isValid = false;

    m_s_ezdoctemplatedocument_name_x_isSet = false;
    m_s_ezdoctemplatedocument_name_x_isValid = false;
}

void Ezdoctemplatedocument_ListElement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezdoctemplatedocument_ListElement::fromJsonObject(QJsonObject json) {

    m_pki_ezdoctemplatedocument_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezdoctemplatedocument_id, json[QString("pkiEzdoctemplatedocumentID")]);
    m_pki_ezdoctemplatedocument_id_isSet = !json[QString("pkiEzdoctemplatedocumentID")].isNull() && m_pki_ezdoctemplatedocument_id_isValid;

    m_fki_language_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_language_id, json[QString("fkiLanguageID")]);
    m_fki_language_id_isSet = !json[QString("fkiLanguageID")].isNull() && m_fki_language_id_isValid;

    m_fki_ezsignfoldertype_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsignfoldertype_id, json[QString("fkiEzsignfoldertypeID")]);
    m_fki_ezsignfoldertype_id_isSet = !json[QString("fkiEzsignfoldertypeID")].isNull() && m_fki_ezsignfoldertype_id_isValid;

    m_fki_ezdoctemplatetype_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezdoctemplatetype_id, json[QString("fkiEzdoctemplatetypeID")]);
    m_fki_ezdoctemplatetype_id_isSet = !json[QString("fkiEzdoctemplatetypeID")].isNull() && m_fki_ezdoctemplatetype_id_isValid;

    m_fki_ezdoctemplatefieldtypecategory_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezdoctemplatefieldtypecategory_id, json[QString("fkiEzdoctemplatefieldtypecategoryID")]);
    m_fki_ezdoctemplatefieldtypecategory_id_isSet = !json[QString("fkiEzdoctemplatefieldtypecategoryID")].isNull() && m_fki_ezdoctemplatefieldtypecategory_id_isValid;

    m_s_ezsignfoldertype_name_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsignfoldertype_name_x, json[QString("sEzsignfoldertypeNameX")]);
    m_s_ezsignfoldertype_name_x_isSet = !json[QString("sEzsignfoldertypeNameX")].isNull() && m_s_ezsignfoldertype_name_x_isValid;

    m_s_ezdoctemplatetype_description_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezdoctemplatetype_description_x, json[QString("sEzdoctemplatetypeDescriptionX")]);
    m_s_ezdoctemplatetype_description_x_isSet = !json[QString("sEzdoctemplatetypeDescriptionX")].isNull() && m_s_ezdoctemplatetype_description_x_isValid;

    m_s_ezdoctemplatefieldtypecategory_description_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezdoctemplatefieldtypecategory_description_x, json[QString("sEzdoctemplatefieldtypecategoryDescriptionX")]);
    m_s_ezdoctemplatefieldtypecategory_description_x_isSet = !json[QString("sEzdoctemplatefieldtypecategoryDescriptionX")].isNull() && m_s_ezdoctemplatefieldtypecategory_description_x_isValid;

    m_e_ezdoctemplatedocument_privacylevel_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezdoctemplatedocument_privacylevel, json[QString("eEzdoctemplatedocumentPrivacylevel")]);
    m_e_ezdoctemplatedocument_privacylevel_isSet = !json[QString("eEzdoctemplatedocumentPrivacylevel")].isNull() && m_e_ezdoctemplatedocument_privacylevel_isValid;

    m_b_ezdoctemplatedocument_isactive_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezdoctemplatedocument_isactive, json[QString("bEzdoctemplatedocumentIsactive")]);
    m_b_ezdoctemplatedocument_isactive_isSet = !json[QString("bEzdoctemplatedocumentIsactive")].isNull() && m_b_ezdoctemplatedocument_isactive_isValid;

    m_s_ezdoctemplatedocument_name_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezdoctemplatedocument_name_x, json[QString("sEzdoctemplatedocumentNameX")]);
    m_s_ezdoctemplatedocument_name_x_isSet = !json[QString("sEzdoctemplatedocumentNameX")].isNull() && m_s_ezdoctemplatedocument_name_x_isValid;
}

QString Ezdoctemplatedocument_ListElement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezdoctemplatedocument_ListElement::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezdoctemplatedocument_id_isSet) {
        obj.insert(QString("pkiEzdoctemplatedocumentID"), ::Ezmaxapi::toJsonValue(m_pki_ezdoctemplatedocument_id));
    }
    if (m_fki_language_id_isSet) {
        obj.insert(QString("fkiLanguageID"), ::Ezmaxapi::toJsonValue(m_fki_language_id));
    }
    if (m_fki_ezsignfoldertype_id_isSet) {
        obj.insert(QString("fkiEzsignfoldertypeID"), ::Ezmaxapi::toJsonValue(m_fki_ezsignfoldertype_id));
    }
    if (m_fki_ezdoctemplatetype_id_isSet) {
        obj.insert(QString("fkiEzdoctemplatetypeID"), ::Ezmaxapi::toJsonValue(m_fki_ezdoctemplatetype_id));
    }
    if (m_fki_ezdoctemplatefieldtypecategory_id_isSet) {
        obj.insert(QString("fkiEzdoctemplatefieldtypecategoryID"), ::Ezmaxapi::toJsonValue(m_fki_ezdoctemplatefieldtypecategory_id));
    }
    if (m_s_ezsignfoldertype_name_x_isSet) {
        obj.insert(QString("sEzsignfoldertypeNameX"), ::Ezmaxapi::toJsonValue(m_s_ezsignfoldertype_name_x));
    }
    if (m_s_ezdoctemplatetype_description_x_isSet) {
        obj.insert(QString("sEzdoctemplatetypeDescriptionX"), ::Ezmaxapi::toJsonValue(m_s_ezdoctemplatetype_description_x));
    }
    if (m_s_ezdoctemplatefieldtypecategory_description_x_isSet) {
        obj.insert(QString("sEzdoctemplatefieldtypecategoryDescriptionX"), ::Ezmaxapi::toJsonValue(m_s_ezdoctemplatefieldtypecategory_description_x));
    }
    if (m_e_ezdoctemplatedocument_privacylevel.isSet()) {
        obj.insert(QString("eEzdoctemplatedocumentPrivacylevel"), ::Ezmaxapi::toJsonValue(m_e_ezdoctemplatedocument_privacylevel));
    }
    if (m_b_ezdoctemplatedocument_isactive_isSet) {
        obj.insert(QString("bEzdoctemplatedocumentIsactive"), ::Ezmaxapi::toJsonValue(m_b_ezdoctemplatedocument_isactive));
    }
    if (m_s_ezdoctemplatedocument_name_x_isSet) {
        obj.insert(QString("sEzdoctemplatedocumentNameX"), ::Ezmaxapi::toJsonValue(m_s_ezdoctemplatedocument_name_x));
    }
    return obj;
}

qint32 Ezdoctemplatedocument_ListElement::getPkiEzdoctemplatedocumentId() const {
    return m_pki_ezdoctemplatedocument_id;
}
void Ezdoctemplatedocument_ListElement::setPkiEzdoctemplatedocumentId(const qint32 &pki_ezdoctemplatedocument_id) {
    m_pki_ezdoctemplatedocument_id = pki_ezdoctemplatedocument_id;
    m_pki_ezdoctemplatedocument_id_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_pki_ezdoctemplatedocument_id_Set() const{
    return m_pki_ezdoctemplatedocument_id_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_pki_ezdoctemplatedocument_id_Valid() const{
    return m_pki_ezdoctemplatedocument_id_isValid;
}

qint32 Ezdoctemplatedocument_ListElement::getFkiLanguageId() const {
    return m_fki_language_id;
}
void Ezdoctemplatedocument_ListElement::setFkiLanguageId(const qint32 &fki_language_id) {
    m_fki_language_id = fki_language_id;
    m_fki_language_id_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_fki_language_id_Set() const{
    return m_fki_language_id_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_fki_language_id_Valid() const{
    return m_fki_language_id_isValid;
}

qint32 Ezdoctemplatedocument_ListElement::getFkiEzsignfoldertypeId() const {
    return m_fki_ezsignfoldertype_id;
}
void Ezdoctemplatedocument_ListElement::setFkiEzsignfoldertypeId(const qint32 &fki_ezsignfoldertype_id) {
    m_fki_ezsignfoldertype_id = fki_ezsignfoldertype_id;
    m_fki_ezsignfoldertype_id_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_fki_ezsignfoldertype_id_Set() const{
    return m_fki_ezsignfoldertype_id_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_fki_ezsignfoldertype_id_Valid() const{
    return m_fki_ezsignfoldertype_id_isValid;
}

qint32 Ezdoctemplatedocument_ListElement::getFkiEzdoctemplatetypeId() const {
    return m_fki_ezdoctemplatetype_id;
}
void Ezdoctemplatedocument_ListElement::setFkiEzdoctemplatetypeId(const qint32 &fki_ezdoctemplatetype_id) {
    m_fki_ezdoctemplatetype_id = fki_ezdoctemplatetype_id;
    m_fki_ezdoctemplatetype_id_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_fki_ezdoctemplatetype_id_Set() const{
    return m_fki_ezdoctemplatetype_id_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_fki_ezdoctemplatetype_id_Valid() const{
    return m_fki_ezdoctemplatetype_id_isValid;
}

qint32 Ezdoctemplatedocument_ListElement::getFkiEzdoctemplatefieldtypecategoryId() const {
    return m_fki_ezdoctemplatefieldtypecategory_id;
}
void Ezdoctemplatedocument_ListElement::setFkiEzdoctemplatefieldtypecategoryId(const qint32 &fki_ezdoctemplatefieldtypecategory_id) {
    m_fki_ezdoctemplatefieldtypecategory_id = fki_ezdoctemplatefieldtypecategory_id;
    m_fki_ezdoctemplatefieldtypecategory_id_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_fki_ezdoctemplatefieldtypecategory_id_Set() const{
    return m_fki_ezdoctemplatefieldtypecategory_id_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_fki_ezdoctemplatefieldtypecategory_id_Valid() const{
    return m_fki_ezdoctemplatefieldtypecategory_id_isValid;
}

QString Ezdoctemplatedocument_ListElement::getSEzsignfoldertypeNameX() const {
    return m_s_ezsignfoldertype_name_x;
}
void Ezdoctemplatedocument_ListElement::setSEzsignfoldertypeNameX(const QString &s_ezsignfoldertype_name_x) {
    m_s_ezsignfoldertype_name_x = s_ezsignfoldertype_name_x;
    m_s_ezsignfoldertype_name_x_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezsignfoldertype_name_x_Set() const{
    return m_s_ezsignfoldertype_name_x_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezsignfoldertype_name_x_Valid() const{
    return m_s_ezsignfoldertype_name_x_isValid;
}

QString Ezdoctemplatedocument_ListElement::getSEzdoctemplatetypeDescriptionX() const {
    return m_s_ezdoctemplatetype_description_x;
}
void Ezdoctemplatedocument_ListElement::setSEzdoctemplatetypeDescriptionX(const QString &s_ezdoctemplatetype_description_x) {
    m_s_ezdoctemplatetype_description_x = s_ezdoctemplatetype_description_x;
    m_s_ezdoctemplatetype_description_x_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezdoctemplatetype_description_x_Set() const{
    return m_s_ezdoctemplatetype_description_x_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezdoctemplatetype_description_x_Valid() const{
    return m_s_ezdoctemplatetype_description_x_isValid;
}

QString Ezdoctemplatedocument_ListElement::getSEzdoctemplatefieldtypecategoryDescriptionX() const {
    return m_s_ezdoctemplatefieldtypecategory_description_x;
}
void Ezdoctemplatedocument_ListElement::setSEzdoctemplatefieldtypecategoryDescriptionX(const QString &s_ezdoctemplatefieldtypecategory_description_x) {
    m_s_ezdoctemplatefieldtypecategory_description_x = s_ezdoctemplatefieldtypecategory_description_x;
    m_s_ezdoctemplatefieldtypecategory_description_x_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezdoctemplatefieldtypecategory_description_x_Set() const{
    return m_s_ezdoctemplatefieldtypecategory_description_x_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezdoctemplatefieldtypecategory_description_x_Valid() const{
    return m_s_ezdoctemplatefieldtypecategory_description_x_isValid;
}

Field_eEzdoctemplatedocumentPrivacylevel Ezdoctemplatedocument_ListElement::getEEzdoctemplatedocumentPrivacylevel() const {
    return m_e_ezdoctemplatedocument_privacylevel;
}
void Ezdoctemplatedocument_ListElement::setEEzdoctemplatedocumentPrivacylevel(const Field_eEzdoctemplatedocumentPrivacylevel &e_ezdoctemplatedocument_privacylevel) {
    m_e_ezdoctemplatedocument_privacylevel = e_ezdoctemplatedocument_privacylevel;
    m_e_ezdoctemplatedocument_privacylevel_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_e_ezdoctemplatedocument_privacylevel_Set() const{
    return m_e_ezdoctemplatedocument_privacylevel_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_e_ezdoctemplatedocument_privacylevel_Valid() const{
    return m_e_ezdoctemplatedocument_privacylevel_isValid;
}

bool Ezdoctemplatedocument_ListElement::isBEzdoctemplatedocumentIsactive() const {
    return m_b_ezdoctemplatedocument_isactive;
}
void Ezdoctemplatedocument_ListElement::setBEzdoctemplatedocumentIsactive(const bool &b_ezdoctemplatedocument_isactive) {
    m_b_ezdoctemplatedocument_isactive = b_ezdoctemplatedocument_isactive;
    m_b_ezdoctemplatedocument_isactive_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_b_ezdoctemplatedocument_isactive_Set() const{
    return m_b_ezdoctemplatedocument_isactive_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_b_ezdoctemplatedocument_isactive_Valid() const{
    return m_b_ezdoctemplatedocument_isactive_isValid;
}

QString Ezdoctemplatedocument_ListElement::getSEzdoctemplatedocumentNameX() const {
    return m_s_ezdoctemplatedocument_name_x;
}
void Ezdoctemplatedocument_ListElement::setSEzdoctemplatedocumentNameX(const QString &s_ezdoctemplatedocument_name_x) {
    m_s_ezdoctemplatedocument_name_x = s_ezdoctemplatedocument_name_x;
    m_s_ezdoctemplatedocument_name_x_isSet = true;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezdoctemplatedocument_name_x_Set() const{
    return m_s_ezdoctemplatedocument_name_x_isSet;
}

bool Ezdoctemplatedocument_ListElement::is_s_ezdoctemplatedocument_name_x_Valid() const{
    return m_s_ezdoctemplatedocument_name_x_isValid;
}

bool Ezdoctemplatedocument_ListElement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezdoctemplatedocument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_language_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsignfoldertype_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezdoctemplatetype_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezdoctemplatefieldtypecategory_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsignfoldertype_name_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezdoctemplatetype_description_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezdoctemplatefieldtypecategory_description_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezdoctemplatedocument_privacylevel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezdoctemplatedocument_isactive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezdoctemplatedocument_name_x_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezdoctemplatedocument_ListElement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezdoctemplatedocument_id_isValid && m_fki_language_id_isValid && m_fki_ezdoctemplatetype_id_isValid && m_fki_ezdoctemplatefieldtypecategory_id_isValid && m_b_ezdoctemplatedocument_isactive_isValid && m_s_ezdoctemplatedocument_name_x_isValid && true;
}

} // namespace Ezmaxapi
