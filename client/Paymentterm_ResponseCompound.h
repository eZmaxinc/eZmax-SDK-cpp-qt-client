/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Paymentterm_ResponseCompound.h
 *
 * A Paymentterm Object
 */

#ifndef Paymentterm_ResponseCompound_H
#define Paymentterm_ResponseCompound_H

#include <QJsonObject>

#include "Common_Audit.h"
#include "Field_ePaymenttermType.h"
#include "Multilingual_PaymenttermDescription.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Multilingual_PaymenttermDescription;
class Common_Audit;

class Paymentterm_ResponseCompound : public Object {
public:
    Paymentterm_ResponseCompound();
    Paymentterm_ResponseCompound(QString json);
    ~Paymentterm_ResponseCompound() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiPaymenttermId() const;
    void setPkiPaymenttermId(const qint32 &pki_paymentterm_id);
    bool is_pki_paymentterm_id_Set() const;
    bool is_pki_paymentterm_id_Valid() const;

    QString getSPaymenttermCode() const;
    void setSPaymenttermCode(const QString &s_paymentterm_code);
    bool is_s_paymentterm_code_Set() const;
    bool is_s_paymentterm_code_Valid() const;

    Field_ePaymenttermType getEPaymenttermType() const;
    void setEPaymenttermType(const Field_ePaymenttermType &e_paymentterm_type);
    bool is_e_paymentterm_type_Set() const;
    bool is_e_paymentterm_type_Valid() const;

    qint32 getIPaymenttermDay() const;
    void setIPaymenttermDay(const qint32 &i_paymentterm_day);
    bool is_i_paymentterm_day_Set() const;
    bool is_i_paymentterm_day_Valid() const;

    Multilingual_PaymenttermDescription getObjPaymenttermDescription() const;
    void setObjPaymenttermDescription(const Multilingual_PaymenttermDescription &obj_paymentterm_description);
    bool is_obj_paymentterm_description_Set() const;
    bool is_obj_paymentterm_description_Valid() const;

    bool isBPaymenttermIsactive() const;
    void setBPaymenttermIsactive(const bool &b_paymentterm_isactive);
    bool is_b_paymentterm_isactive_Set() const;
    bool is_b_paymentterm_isactive_Valid() const;

    Common_Audit getObjAudit() const;
    void setObjAudit(const Common_Audit &obj_audit);
    bool is_obj_audit_Set() const;
    bool is_obj_audit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_paymentterm_id;
    bool m_pki_paymentterm_id_isSet;
    bool m_pki_paymentterm_id_isValid;

    QString m_s_paymentterm_code;
    bool m_s_paymentterm_code_isSet;
    bool m_s_paymentterm_code_isValid;

    Field_ePaymenttermType m_e_paymentterm_type;
    bool m_e_paymentterm_type_isSet;
    bool m_e_paymentterm_type_isValid;

    qint32 m_i_paymentterm_day;
    bool m_i_paymentterm_day_isSet;
    bool m_i_paymentterm_day_isValid;

    Multilingual_PaymenttermDescription m_obj_paymentterm_description;
    bool m_obj_paymentterm_description_isSet;
    bool m_obj_paymentterm_description_isValid;

    bool m_b_paymentterm_isactive;
    bool m_b_paymentterm_isactive_isSet;
    bool m_b_paymentterm_isactive_isValid;

    Common_Audit m_obj_audit;
    bool m_obj_audit_isSet;
    bool m_obj_audit_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Paymentterm_ResponseCompound)

#endif // Paymentterm_ResponseCompound_H
