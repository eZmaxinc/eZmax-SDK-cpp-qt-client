/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEzsigntemplatepackage_ListElement.h
 *
 * An Ezsigntemplatepackage List Element
 */

#ifndef OAIEzsigntemplatepackage_ListElement_H
#define OAIEzsigntemplatepackage_ListElement_H

#include <QJsonObject>

#include "OAIField_eEzsigntemplatepackageType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEzsigntemplatepackage_ListElement : public OAIObject {
public:
    OAIEzsigntemplatepackage_ListElement();
    OAIEzsigntemplatepackage_ListElement(QString json);
    ~OAIEzsigntemplatepackage_ListElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiEzsigntemplatepackageId() const;
    void setPkiEzsigntemplatepackageId(const qint32 &pki_ezsigntemplatepackage_id);
    bool is_pki_ezsigntemplatepackage_id_Set() const;
    bool is_pki_ezsigntemplatepackage_id_Valid() const;

    qint32 getFkiDepartmentId() const;
    void setFkiDepartmentId(const qint32 &fki_department_id);
    bool is_fki_department_id_Set() const;
    bool is_fki_department_id_Valid() const;

    qint32 getFkiTeamId() const;
    void setFkiTeamId(const qint32 &fki_team_id);
    bool is_fki_team_id_Set() const;
    bool is_fki_team_id_Valid() const;

    qint32 getFkiEzsignfoldertypeId() const;
    void setFkiEzsignfoldertypeId(const qint32 &fki_ezsignfoldertype_id);
    bool is_fki_ezsignfoldertype_id_Set() const;
    bool is_fki_ezsignfoldertype_id_Valid() const;

    qint32 getFkiLanguageId() const;
    void setFkiLanguageId(const qint32 &fki_language_id);
    bool is_fki_language_id_Set() const;
    bool is_fki_language_id_Valid() const;

    OAIField_eEzsigntemplatepackageType getEEzsigntemplatepackageType() const;
    void setEEzsigntemplatepackageType(const OAIField_eEzsigntemplatepackageType &e_ezsigntemplatepackage_type);
    bool is_e_ezsigntemplatepackage_type_Set() const;
    bool is_e_ezsigntemplatepackage_type_Valid() const;

    QString getSEzsigntemplatepackageDescription() const;
    void setSEzsigntemplatepackageDescription(const QString &s_ezsigntemplatepackage_description);
    bool is_s_ezsigntemplatepackage_description_Set() const;
    bool is_s_ezsigntemplatepackage_description_Valid() const;

    bool isBEzsigntemplatepackageIsactive() const;
    void setBEzsigntemplatepackageIsactive(const bool &b_ezsigntemplatepackage_isactive);
    bool is_b_ezsigntemplatepackage_isactive_Set() const;
    bool is_b_ezsigntemplatepackage_isactive_Valid() const;

    qint32 getIEzsigntemplatepackagemembership() const;
    void setIEzsigntemplatepackagemembership(const qint32 &i_ezsigntemplatepackagemembership);
    bool is_i_ezsigntemplatepackagemembership_Set() const;
    bool is_i_ezsigntemplatepackagemembership_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 pki_ezsigntemplatepackage_id;
    bool m_pki_ezsigntemplatepackage_id_isSet;
    bool m_pki_ezsigntemplatepackage_id_isValid;

    qint32 fki_department_id;
    bool m_fki_department_id_isSet;
    bool m_fki_department_id_isValid;

    qint32 fki_team_id;
    bool m_fki_team_id_isSet;
    bool m_fki_team_id_isValid;

    qint32 fki_ezsignfoldertype_id;
    bool m_fki_ezsignfoldertype_id_isSet;
    bool m_fki_ezsignfoldertype_id_isValid;

    qint32 fki_language_id;
    bool m_fki_language_id_isSet;
    bool m_fki_language_id_isValid;

    OAIField_eEzsigntemplatepackageType e_ezsigntemplatepackage_type;
    bool m_e_ezsigntemplatepackage_type_isSet;
    bool m_e_ezsigntemplatepackage_type_isValid;

    QString s_ezsigntemplatepackage_description;
    bool m_s_ezsigntemplatepackage_description_isSet;
    bool m_s_ezsigntemplatepackage_description_isValid;

    bool b_ezsigntemplatepackage_isactive;
    bool m_b_ezsigntemplatepackage_isactive_isSet;
    bool m_b_ezsigntemplatepackage_isactive_isValid;

    qint32 i_ezsigntemplatepackagemembership;
    bool m_i_ezsigntemplatepackagemembership_isSet;
    bool m_i_ezsigntemplatepackagemembership_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEzsigntemplatepackage_ListElement)

#endif // OAIEzsigntemplatepackage_ListElement_H
