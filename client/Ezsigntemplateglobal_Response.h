/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Ezsigntemplateglobal_Response.h
 *
 * A Ezsigntemplateglobal Object
 */

#ifndef Ezsigntemplateglobal_Response_H
#define Ezsigntemplateglobal_Response_H

#include <QJsonObject>

#include "Field_eEzsigntemplateglobalModule.h"
#include "Field_eEzsigntemplateglobalSupplier.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Ezsigntemplateglobal_Response : public Object {
public:
    Ezsigntemplateglobal_Response();
    Ezsigntemplateglobal_Response(QString json);
    ~Ezsigntemplateglobal_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiEzsigntemplateglobalId() const;
    void setPkiEzsigntemplateglobalId(const qint32 &pki_ezsigntemplateglobal_id);
    bool is_pki_ezsigntemplateglobal_id_Set() const;
    bool is_pki_ezsigntemplateglobal_id_Valid() const;

    qint32 getFkiEzsigntemplateglobaldocumentId() const;
    void setFkiEzsigntemplateglobaldocumentId(const qint32 &fki_ezsigntemplateglobaldocument_id);
    bool is_fki_ezsigntemplateglobaldocument_id_Set() const;
    bool is_fki_ezsigntemplateglobaldocument_id_Valid() const;

    qint32 getFkiModuleId() const;
    void setFkiModuleId(const qint32 &fki_module_id);
    bool is_fki_module_id_Set() const;
    bool is_fki_module_id_Valid() const;

    QString getSModuleNameX() const;
    void setSModuleNameX(const QString &s_module_name_x);
    bool is_s_module_name_x_Set() const;
    bool is_s_module_name_x_Valid() const;

    qint32 getFkiLanguageId() const;
    void setFkiLanguageId(const qint32 &fki_language_id);
    bool is_fki_language_id_Set() const;
    bool is_fki_language_id_Valid() const;

    QString getSLanguageNameX() const;
    void setSLanguageNameX(const QString &s_language_name_x);
    bool is_s_language_name_x_Set() const;
    bool is_s_language_name_x_Valid() const;

    Field_eEzsigntemplateglobalModule getEEzsigntemplateglobalModule() const;
    void setEEzsigntemplateglobalModule(const Field_eEzsigntemplateglobalModule &e_ezsigntemplateglobal_module);
    bool is_e_ezsigntemplateglobal_module_Set() const;
    bool is_e_ezsigntemplateglobal_module_Valid() const;

    Field_eEzsigntemplateglobalSupplier getEEzsigntemplateglobalSupplier() const;
    void setEEzsigntemplateglobalSupplier(const Field_eEzsigntemplateglobalSupplier &e_ezsigntemplateglobal_supplier);
    bool is_e_ezsigntemplateglobal_supplier_Set() const;
    bool is_e_ezsigntemplateglobal_supplier_Valid() const;

    QString getSEzsigntemplateglobalCode() const;
    void setSEzsigntemplateglobalCode(const QString &s_ezsigntemplateglobal_code);
    bool is_s_ezsigntemplateglobal_code_Set() const;
    bool is_s_ezsigntemplateglobal_code_Valid() const;

    QString getSEzsigntemplateglobalDescription() const;
    void setSEzsigntemplateglobalDescription(const QString &s_ezsigntemplateglobal_description);
    bool is_s_ezsigntemplateglobal_description_Set() const;
    bool is_s_ezsigntemplateglobal_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_ezsigntemplateglobal_id;
    bool m_pki_ezsigntemplateglobal_id_isSet;
    bool m_pki_ezsigntemplateglobal_id_isValid;

    qint32 m_fki_ezsigntemplateglobaldocument_id;
    bool m_fki_ezsigntemplateglobaldocument_id_isSet;
    bool m_fki_ezsigntemplateglobaldocument_id_isValid;

    qint32 m_fki_module_id;
    bool m_fki_module_id_isSet;
    bool m_fki_module_id_isValid;

    QString m_s_module_name_x;
    bool m_s_module_name_x_isSet;
    bool m_s_module_name_x_isValid;

    qint32 m_fki_language_id;
    bool m_fki_language_id_isSet;
    bool m_fki_language_id_isValid;

    QString m_s_language_name_x;
    bool m_s_language_name_x_isSet;
    bool m_s_language_name_x_isValid;

    Field_eEzsigntemplateglobalModule m_e_ezsigntemplateglobal_module;
    bool m_e_ezsigntemplateglobal_module_isSet;
    bool m_e_ezsigntemplateglobal_module_isValid;

    Field_eEzsigntemplateglobalSupplier m_e_ezsigntemplateglobal_supplier;
    bool m_e_ezsigntemplateglobal_supplier_isSet;
    bool m_e_ezsigntemplateglobal_supplier_isValid;

    QString m_s_ezsigntemplateglobal_code;
    bool m_s_ezsigntemplateglobal_code_isSet;
    bool m_s_ezsigntemplateglobal_code_isValid;

    QString m_s_ezsigntemplateglobal_description;
    bool m_s_ezsigntemplateglobal_description_isSet;
    bool m_s_ezsigntemplateglobal_description_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Ezsigntemplateglobal_Response)

#endif // Ezsigntemplateglobal_Response_H
