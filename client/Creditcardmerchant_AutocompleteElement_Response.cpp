/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Creditcardmerchant_AutocompleteElement_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Creditcardmerchant_AutocompleteElement_Response::Creditcardmerchant_AutocompleteElement_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Creditcardmerchant_AutocompleteElement_Response::Creditcardmerchant_AutocompleteElement_Response() {
    this->initializeModel();
}

Creditcardmerchant_AutocompleteElement_Response::~Creditcardmerchant_AutocompleteElement_Response() {}

void Creditcardmerchant_AutocompleteElement_Response::initializeModel() {

    m_pki_creditcardmerchant_id_isSet = false;
    m_pki_creditcardmerchant_id_isValid = false;

    m_s_creditcardmerchant_description_isSet = false;
    m_s_creditcardmerchant_description_isValid = false;

    m_b_creditcardmerchant_isactive_isSet = false;
    m_b_creditcardmerchant_isactive_isValid = false;
}

void Creditcardmerchant_AutocompleteElement_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Creditcardmerchant_AutocompleteElement_Response::fromJsonObject(QJsonObject json) {

    m_pki_creditcardmerchant_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_creditcardmerchant_id, json[QString("pkiCreditcardmerchantID")]);
    m_pki_creditcardmerchant_id_isSet = !json[QString("pkiCreditcardmerchantID")].isNull() && m_pki_creditcardmerchant_id_isValid;

    m_s_creditcardmerchant_description_isValid = ::Ezmaxapi::fromJsonValue(m_s_creditcardmerchant_description, json[QString("sCreditcardmerchantDescription")]);
    m_s_creditcardmerchant_description_isSet = !json[QString("sCreditcardmerchantDescription")].isNull() && m_s_creditcardmerchant_description_isValid;

    m_b_creditcardmerchant_isactive_isValid = ::Ezmaxapi::fromJsonValue(m_b_creditcardmerchant_isactive, json[QString("bCreditcardmerchantIsactive")]);
    m_b_creditcardmerchant_isactive_isSet = !json[QString("bCreditcardmerchantIsactive")].isNull() && m_b_creditcardmerchant_isactive_isValid;
}

QString Creditcardmerchant_AutocompleteElement_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Creditcardmerchant_AutocompleteElement_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_creditcardmerchant_id_isSet) {
        obj.insert(QString("pkiCreditcardmerchantID"), ::Ezmaxapi::toJsonValue(m_pki_creditcardmerchant_id));
    }
    if (m_s_creditcardmerchant_description_isSet) {
        obj.insert(QString("sCreditcardmerchantDescription"), ::Ezmaxapi::toJsonValue(m_s_creditcardmerchant_description));
    }
    if (m_b_creditcardmerchant_isactive_isSet) {
        obj.insert(QString("bCreditcardmerchantIsactive"), ::Ezmaxapi::toJsonValue(m_b_creditcardmerchant_isactive));
    }
    return obj;
}

qint32 Creditcardmerchant_AutocompleteElement_Response::getPkiCreditcardmerchantId() const {
    return m_pki_creditcardmerchant_id;
}
void Creditcardmerchant_AutocompleteElement_Response::setPkiCreditcardmerchantId(const qint32 &pki_creditcardmerchant_id) {
    m_pki_creditcardmerchant_id = pki_creditcardmerchant_id;
    m_pki_creditcardmerchant_id_isSet = true;
}

bool Creditcardmerchant_AutocompleteElement_Response::is_pki_creditcardmerchant_id_Set() const{
    return m_pki_creditcardmerchant_id_isSet;
}

bool Creditcardmerchant_AutocompleteElement_Response::is_pki_creditcardmerchant_id_Valid() const{
    return m_pki_creditcardmerchant_id_isValid;
}

QString Creditcardmerchant_AutocompleteElement_Response::getSCreditcardmerchantDescription() const {
    return m_s_creditcardmerchant_description;
}
void Creditcardmerchant_AutocompleteElement_Response::setSCreditcardmerchantDescription(const QString &s_creditcardmerchant_description) {
    m_s_creditcardmerchant_description = s_creditcardmerchant_description;
    m_s_creditcardmerchant_description_isSet = true;
}

bool Creditcardmerchant_AutocompleteElement_Response::is_s_creditcardmerchant_description_Set() const{
    return m_s_creditcardmerchant_description_isSet;
}

bool Creditcardmerchant_AutocompleteElement_Response::is_s_creditcardmerchant_description_Valid() const{
    return m_s_creditcardmerchant_description_isValid;
}

bool Creditcardmerchant_AutocompleteElement_Response::isBCreditcardmerchantIsactive() const {
    return m_b_creditcardmerchant_isactive;
}
void Creditcardmerchant_AutocompleteElement_Response::setBCreditcardmerchantIsactive(const bool &b_creditcardmerchant_isactive) {
    m_b_creditcardmerchant_isactive = b_creditcardmerchant_isactive;
    m_b_creditcardmerchant_isactive_isSet = true;
}

bool Creditcardmerchant_AutocompleteElement_Response::is_b_creditcardmerchant_isactive_Set() const{
    return m_b_creditcardmerchant_isactive_isSet;
}

bool Creditcardmerchant_AutocompleteElement_Response::is_b_creditcardmerchant_isactive_Valid() const{
    return m_b_creditcardmerchant_isactive_isValid;
}

bool Creditcardmerchant_AutocompleteElement_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_creditcardmerchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_creditcardmerchant_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_creditcardmerchant_isactive_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Creditcardmerchant_AutocompleteElement_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_creditcardmerchant_id_isValid && m_s_creditcardmerchant_description_isValid && m_b_creditcardmerchant_isactive_isValid && true;
}

} // namespace Ezmaxapi
