/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsignimportfolder_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsignimportfolder_Response::Ezsignimportfolder_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsignimportfolder_Response::Ezsignimportfolder_Response() {
    this->initializeModel();
}

Ezsignimportfolder_Response::~Ezsignimportfolder_Response() {}

void Ezsignimportfolder_Response::initializeModel() {

    m_pki_ezsignimportfolder_id_isSet = false;
    m_pki_ezsignimportfolder_id_isValid = false;

    m_s_ezsignimportfolder_name_isSet = false;
    m_s_ezsignimportfolder_name_isValid = false;
}

void Ezsignimportfolder_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsignimportfolder_Response::fromJsonObject(QJsonObject json) {

    m_pki_ezsignimportfolder_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsignimportfolder_id, json[QString("pkiEzsignimportfolderID")]);
    m_pki_ezsignimportfolder_id_isSet = !json[QString("pkiEzsignimportfolderID")].isNull() && m_pki_ezsignimportfolder_id_isValid;

    m_s_ezsignimportfolder_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsignimportfolder_name, json[QString("sEzsignimportfolderName")]);
    m_s_ezsignimportfolder_name_isSet = !json[QString("sEzsignimportfolderName")].isNull() && m_s_ezsignimportfolder_name_isValid;
}

QString Ezsignimportfolder_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsignimportfolder_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsignimportfolder_id_isSet) {
        obj.insert(QString("pkiEzsignimportfolderID"), ::Ezmaxapi::toJsonValue(m_pki_ezsignimportfolder_id));
    }
    if (m_s_ezsignimportfolder_name_isSet) {
        obj.insert(QString("sEzsignimportfolderName"), ::Ezmaxapi::toJsonValue(m_s_ezsignimportfolder_name));
    }
    return obj;
}

qint32 Ezsignimportfolder_Response::getPkiEzsignimportfolderId() const {
    return m_pki_ezsignimportfolder_id;
}
void Ezsignimportfolder_Response::setPkiEzsignimportfolderId(const qint32 &pki_ezsignimportfolder_id) {
    m_pki_ezsignimportfolder_id = pki_ezsignimportfolder_id;
    m_pki_ezsignimportfolder_id_isSet = true;
}

bool Ezsignimportfolder_Response::is_pki_ezsignimportfolder_id_Set() const{
    return m_pki_ezsignimportfolder_id_isSet;
}

bool Ezsignimportfolder_Response::is_pki_ezsignimportfolder_id_Valid() const{
    return m_pki_ezsignimportfolder_id_isValid;
}

QString Ezsignimportfolder_Response::getSEzsignimportfolderName() const {
    return m_s_ezsignimportfolder_name;
}
void Ezsignimportfolder_Response::setSEzsignimportfolderName(const QString &s_ezsignimportfolder_name) {
    m_s_ezsignimportfolder_name = s_ezsignimportfolder_name;
    m_s_ezsignimportfolder_name_isSet = true;
}

bool Ezsignimportfolder_Response::is_s_ezsignimportfolder_name_Set() const{
    return m_s_ezsignimportfolder_name_isSet;
}

bool Ezsignimportfolder_Response::is_s_ezsignimportfolder_name_Valid() const{
    return m_s_ezsignimportfolder_name_isValid;
}

bool Ezsignimportfolder_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsignimportfolder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsignimportfolder_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsignimportfolder_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezsignimportfolder_id_isValid && m_s_ezsignimportfolder_name_isValid && true;
}

} // namespace Ezmaxapi
