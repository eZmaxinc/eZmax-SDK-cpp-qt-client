/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Field_eVersionhistoryType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Field_eVersionhistoryType::Field_eVersionhistoryType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Field_eVersionhistoryType::Field_eVersionhistoryType() {
    this->initializeModel();
}

Field_eVersionhistoryType::~Field_eVersionhistoryType() {}

void Field_eVersionhistoryType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eField_eVersionhistoryType::INVALID_VALUE_OPENAPI_GENERATED;
}

void Field_eVersionhistoryType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AgentBroker", Qt::CaseInsensitive) == 0) {
        m_value = eField_eVersionhistoryType::AGENTBROKER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NewFeature", Qt::CaseInsensitive) == 0) {
        m_value = eField_eVersionhistoryType::NEWFEATURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Correction", Qt::CaseInsensitive) == 0) {
        m_value = eField_eVersionhistoryType::CORRECTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Modification", Qt::CaseInsensitive) == 0) {
        m_value = eField_eVersionhistoryType::MODIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ImportantMessage", Qt::CaseInsensitive) == 0) {
        m_value = eField_eVersionhistoryType::IMPORTANTMESSAGE;
        m_value_isSet = m_value_isValid = true;
    }
}

void Field_eVersionhistoryType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString Field_eVersionhistoryType::asJson() const {
    
    QString val;
    switch (m_value){
        case eField_eVersionhistoryType::AGENTBROKER:
            val = "AgentBroker";
            break;
        case eField_eVersionhistoryType::NEWFEATURE:
            val = "NewFeature";
            break;
        case eField_eVersionhistoryType::CORRECTION:
            val = "Correction";
            break;
        case eField_eVersionhistoryType::MODIFICATION:
            val = "Modification";
            break;
        case eField_eVersionhistoryType::IMPORTANTMESSAGE:
            val = "ImportantMessage";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue Field_eVersionhistoryType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


Field_eVersionhistoryType::eField_eVersionhistoryType Field_eVersionhistoryType::getValue() const {
    return m_value;
}

void Field_eVersionhistoryType::setValue(const Field_eVersionhistoryType::eField_eVersionhistoryType& value){
    m_value = value;
    m_value_isSet = true;
}
bool Field_eVersionhistoryType::isSet() const {
    
    return m_value_isSet;
}

bool Field_eVersionhistoryType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace Ezmaxapi
