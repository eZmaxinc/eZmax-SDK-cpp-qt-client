/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommunicationexternalrecipient_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommunicationexternalrecipient_Response::OAICommunicationexternalrecipient_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommunicationexternalrecipient_Response::OAICommunicationexternalrecipient_Response() {
    this->initializeModel();
}

OAICommunicationexternalrecipient_Response::~OAICommunicationexternalrecipient_Response() {}

void OAICommunicationexternalrecipient_Response::initializeModel() {

    m_pki_communicationexternalrecipient_id_isSet = false;
    m_pki_communicationexternalrecipient_id_isValid = false;

    m_s_email_address_isSet = false;
    m_s_email_address_isValid = false;

    m_obj_phone_sms_isSet = false;
    m_obj_phone_sms_isValid = false;

    m_e_communicationexternalrecipient_type_isSet = false;
    m_e_communicationexternalrecipient_type_isValid = false;

    m_s_communicationexternalrecipient_name_isSet = false;
    m_s_communicationexternalrecipient_name_isValid = false;
}

void OAICommunicationexternalrecipient_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommunicationexternalrecipient_Response::fromJsonObject(QJsonObject json) {

    m_pki_communicationexternalrecipient_id_isValid = ::OpenAPI::fromJsonValue(pki_communicationexternalrecipient_id, json[QString("pkiCommunicationexternalrecipientID")]);
    m_pki_communicationexternalrecipient_id_isSet = !json[QString("pkiCommunicationexternalrecipientID")].isNull() && m_pki_communicationexternalrecipient_id_isValid;

    m_s_email_address_isValid = ::OpenAPI::fromJsonValue(s_email_address, json[QString("sEmailAddress")]);
    m_s_email_address_isSet = !json[QString("sEmailAddress")].isNull() && m_s_email_address_isValid;

    m_obj_phone_sms_isValid = ::OpenAPI::fromJsonValue(obj_phone_sms, json[QString("objPhoneSms")]);
    m_obj_phone_sms_isSet = !json[QString("objPhoneSms")].isNull() && m_obj_phone_sms_isValid;

    m_e_communicationexternalrecipient_type_isValid = ::OpenAPI::fromJsonValue(e_communicationexternalrecipient_type, json[QString("eCommunicationexternalrecipientType")]);
    m_e_communicationexternalrecipient_type_isSet = !json[QString("eCommunicationexternalrecipientType")].isNull() && m_e_communicationexternalrecipient_type_isValid;

    m_s_communicationexternalrecipient_name_isValid = ::OpenAPI::fromJsonValue(s_communicationexternalrecipient_name, json[QString("sCommunicationexternalrecipientName")]);
    m_s_communicationexternalrecipient_name_isSet = !json[QString("sCommunicationexternalrecipientName")].isNull() && m_s_communicationexternalrecipient_name_isValid;
}

QString OAICommunicationexternalrecipient_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommunicationexternalrecipient_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_communicationexternalrecipient_id_isSet) {
        obj.insert(QString("pkiCommunicationexternalrecipientID"), ::OpenAPI::toJsonValue(pki_communicationexternalrecipient_id));
    }
    if (m_s_email_address_isSet) {
        obj.insert(QString("sEmailAddress"), ::OpenAPI::toJsonValue(s_email_address));
    }
    if (obj_phone_sms.isSet()) {
        obj.insert(QString("objPhoneSms"), ::OpenAPI::toJsonValue(obj_phone_sms));
    }
    if (e_communicationexternalrecipient_type.isSet()) {
        obj.insert(QString("eCommunicationexternalrecipientType"), ::OpenAPI::toJsonValue(e_communicationexternalrecipient_type));
    }
    if (m_s_communicationexternalrecipient_name_isSet) {
        obj.insert(QString("sCommunicationexternalrecipientName"), ::OpenAPI::toJsonValue(s_communicationexternalrecipient_name));
    }
    return obj;
}

qint32 OAICommunicationexternalrecipient_Response::getPkiCommunicationexternalrecipientId() const {
    return pki_communicationexternalrecipient_id;
}
void OAICommunicationexternalrecipient_Response::setPkiCommunicationexternalrecipientId(const qint32 &pki_communicationexternalrecipient_id) {
    this->pki_communicationexternalrecipient_id = pki_communicationexternalrecipient_id;
    this->m_pki_communicationexternalrecipient_id_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_pki_communicationexternalrecipient_id_Set() const{
    return m_pki_communicationexternalrecipient_id_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_pki_communicationexternalrecipient_id_Valid() const{
    return m_pki_communicationexternalrecipient_id_isValid;
}

QString OAICommunicationexternalrecipient_Response::getSEmailAddress() const {
    return s_email_address;
}
void OAICommunicationexternalrecipient_Response::setSEmailAddress(const QString &s_email_address) {
    this->s_email_address = s_email_address;
    this->m_s_email_address_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_s_email_address_Set() const{
    return m_s_email_address_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_s_email_address_Valid() const{
    return m_s_email_address_isValid;
}

OAIPhone_ResponseCompound OAICommunicationexternalrecipient_Response::getObjPhoneSms() const {
    return obj_phone_sms;
}
void OAICommunicationexternalrecipient_Response::setObjPhoneSms(const OAIPhone_ResponseCompound &obj_phone_sms) {
    this->obj_phone_sms = obj_phone_sms;
    this->m_obj_phone_sms_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_obj_phone_sms_Set() const{
    return m_obj_phone_sms_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_obj_phone_sms_Valid() const{
    return m_obj_phone_sms_isValid;
}

OAIField_eCommunicationexternalrecipientType OAICommunicationexternalrecipient_Response::getECommunicationexternalrecipientType() const {
    return e_communicationexternalrecipient_type;
}
void OAICommunicationexternalrecipient_Response::setECommunicationexternalrecipientType(const OAIField_eCommunicationexternalrecipientType &e_communicationexternalrecipient_type) {
    this->e_communicationexternalrecipient_type = e_communicationexternalrecipient_type;
    this->m_e_communicationexternalrecipient_type_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_e_communicationexternalrecipient_type_Set() const{
    return m_e_communicationexternalrecipient_type_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_e_communicationexternalrecipient_type_Valid() const{
    return m_e_communicationexternalrecipient_type_isValid;
}

QString OAICommunicationexternalrecipient_Response::getSCommunicationexternalrecipientName() const {
    return s_communicationexternalrecipient_name;
}
void OAICommunicationexternalrecipient_Response::setSCommunicationexternalrecipientName(const QString &s_communicationexternalrecipient_name) {
    this->s_communicationexternalrecipient_name = s_communicationexternalrecipient_name;
    this->m_s_communicationexternalrecipient_name_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_s_communicationexternalrecipient_name_Set() const{
    return m_s_communicationexternalrecipient_name_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_s_communicationexternalrecipient_name_Valid() const{
    return m_s_communicationexternalrecipient_name_isValid;
}

bool OAICommunicationexternalrecipient_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_communicationexternalrecipient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (obj_phone_sms.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (e_communicationexternalrecipient_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_communicationexternalrecipient_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommunicationexternalrecipient_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_communicationexternalrecipient_id_isValid && m_e_communicationexternalrecipient_type_isValid && m_s_communicationexternalrecipient_name_isValid && true;
}

} // namespace OpenAPI
