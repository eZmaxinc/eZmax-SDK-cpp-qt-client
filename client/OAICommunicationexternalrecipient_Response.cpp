/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommunicationexternalrecipient_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommunicationexternalrecipient_Response::OAICommunicationexternalrecipient_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommunicationexternalrecipient_Response::OAICommunicationexternalrecipient_Response() {
    this->initializeModel();
}

OAICommunicationexternalrecipient_Response::~OAICommunicationexternalrecipient_Response() {}

void OAICommunicationexternalrecipient_Response::initializeModel() {

    m_pki_communicationexternalrecipient_id_isSet = false;
    m_pki_communicationexternalrecipient_id_isValid = false;

    m_e_communicationexternalrecipient_type_isSet = false;
    m_e_communicationexternalrecipient_type_isValid = false;

    m_obj_descriptionstatic_isSet = false;
    m_obj_descriptionstatic_isValid = false;

    m_obj_emailstatic_isSet = false;
    m_obj_emailstatic_isValid = false;

    m_obj_phonestatic_isSet = false;
    m_obj_phonestatic_isValid = false;
}

void OAICommunicationexternalrecipient_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommunicationexternalrecipient_Response::fromJsonObject(QJsonObject json) {

    m_pki_communicationexternalrecipient_id_isValid = ::OpenAPI::fromJsonValue(pki_communicationexternalrecipient_id, json[QString("pkiCommunicationexternalrecipientID")]);
    m_pki_communicationexternalrecipient_id_isSet = !json[QString("pkiCommunicationexternalrecipientID")].isNull() && m_pki_communicationexternalrecipient_id_isValid;

    m_e_communicationexternalrecipient_type_isValid = ::OpenAPI::fromJsonValue(e_communicationexternalrecipient_type, json[QString("eCommunicationexternalrecipientType")]);
    m_e_communicationexternalrecipient_type_isSet = !json[QString("eCommunicationexternalrecipientType")].isNull() && m_e_communicationexternalrecipient_type_isValid;

    m_obj_descriptionstatic_isValid = ::OpenAPI::fromJsonValue(obj_descriptionstatic, json[QString("objDescriptionstatic")]);
    m_obj_descriptionstatic_isSet = !json[QString("objDescriptionstatic")].isNull() && m_obj_descriptionstatic_isValid;

    m_obj_emailstatic_isValid = ::OpenAPI::fromJsonValue(obj_emailstatic, json[QString("objEmailstatic")]);
    m_obj_emailstatic_isSet = !json[QString("objEmailstatic")].isNull() && m_obj_emailstatic_isValid;

    m_obj_phonestatic_isValid = ::OpenAPI::fromJsonValue(obj_phonestatic, json[QString("objPhonestatic")]);
    m_obj_phonestatic_isSet = !json[QString("objPhonestatic")].isNull() && m_obj_phonestatic_isValid;
}

QString OAICommunicationexternalrecipient_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommunicationexternalrecipient_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_communicationexternalrecipient_id_isSet) {
        obj.insert(QString("pkiCommunicationexternalrecipientID"), ::OpenAPI::toJsonValue(pki_communicationexternalrecipient_id));
    }
    if (e_communicationexternalrecipient_type.isSet()) {
        obj.insert(QString("eCommunicationexternalrecipientType"), ::OpenAPI::toJsonValue(e_communicationexternalrecipient_type));
    }
    if (obj_descriptionstatic.isSet()) {
        obj.insert(QString("objDescriptionstatic"), ::OpenAPI::toJsonValue(obj_descriptionstatic));
    }
    if (obj_emailstatic.isSet()) {
        obj.insert(QString("objEmailstatic"), ::OpenAPI::toJsonValue(obj_emailstatic));
    }
    if (obj_phonestatic.isSet()) {
        obj.insert(QString("objPhonestatic"), ::OpenAPI::toJsonValue(obj_phonestatic));
    }
    return obj;
}

qint32 OAICommunicationexternalrecipient_Response::getPkiCommunicationexternalrecipientId() const {
    return pki_communicationexternalrecipient_id;
}
void OAICommunicationexternalrecipient_Response::setPkiCommunicationexternalrecipientId(const qint32 &pki_communicationexternalrecipient_id) {
    this->pki_communicationexternalrecipient_id = pki_communicationexternalrecipient_id;
    this->m_pki_communicationexternalrecipient_id_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_pki_communicationexternalrecipient_id_Set() const{
    return m_pki_communicationexternalrecipient_id_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_pki_communicationexternalrecipient_id_Valid() const{
    return m_pki_communicationexternalrecipient_id_isValid;
}

OAIField_eCommunicationexternalrecipientType OAICommunicationexternalrecipient_Response::getECommunicationexternalrecipientType() const {
    return e_communicationexternalrecipient_type;
}
void OAICommunicationexternalrecipient_Response::setECommunicationexternalrecipientType(const OAIField_eCommunicationexternalrecipientType &e_communicationexternalrecipient_type) {
    this->e_communicationexternalrecipient_type = e_communicationexternalrecipient_type;
    this->m_e_communicationexternalrecipient_type_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_e_communicationexternalrecipient_type_Set() const{
    return m_e_communicationexternalrecipient_type_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_e_communicationexternalrecipient_type_Valid() const{
    return m_e_communicationexternalrecipient_type_isValid;
}

OAIDescriptionstatic_ResponseCompound OAICommunicationexternalrecipient_Response::getObjDescriptionstatic() const {
    return obj_descriptionstatic;
}
void OAICommunicationexternalrecipient_Response::setObjDescriptionstatic(const OAIDescriptionstatic_ResponseCompound &obj_descriptionstatic) {
    this->obj_descriptionstatic = obj_descriptionstatic;
    this->m_obj_descriptionstatic_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_obj_descriptionstatic_Set() const{
    return m_obj_descriptionstatic_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_obj_descriptionstatic_Valid() const{
    return m_obj_descriptionstatic_isValid;
}

OAIEmailstatic_ResponseCompound OAICommunicationexternalrecipient_Response::getObjEmailstatic() const {
    return obj_emailstatic;
}
void OAICommunicationexternalrecipient_Response::setObjEmailstatic(const OAIEmailstatic_ResponseCompound &obj_emailstatic) {
    this->obj_emailstatic = obj_emailstatic;
    this->m_obj_emailstatic_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_obj_emailstatic_Set() const{
    return m_obj_emailstatic_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_obj_emailstatic_Valid() const{
    return m_obj_emailstatic_isValid;
}

OAIPhonestatic_ResponseCompound OAICommunicationexternalrecipient_Response::getObjPhonestatic() const {
    return obj_phonestatic;
}
void OAICommunicationexternalrecipient_Response::setObjPhonestatic(const OAIPhonestatic_ResponseCompound &obj_phonestatic) {
    this->obj_phonestatic = obj_phonestatic;
    this->m_obj_phonestatic_isSet = true;
}

bool OAICommunicationexternalrecipient_Response::is_obj_phonestatic_Set() const{
    return m_obj_phonestatic_isSet;
}

bool OAICommunicationexternalrecipient_Response::is_obj_phonestatic_Valid() const{
    return m_obj_phonestatic_isValid;
}

bool OAICommunicationexternalrecipient_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_communicationexternalrecipient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (e_communicationexternalrecipient_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (obj_descriptionstatic.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (obj_emailstatic.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (obj_phonestatic.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommunicationexternalrecipient_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_communicationexternalrecipient_id_isValid && m_e_communicationexternalrecipient_type_isValid && m_obj_descriptionstatic_isValid && true;
}

} // namespace OpenAPI
