/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsigntemplatepackagesigner_RequestCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsigntemplatepackagesigner_RequestCompound::Ezsigntemplatepackagesigner_RequestCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsigntemplatepackagesigner_RequestCompound::Ezsigntemplatepackagesigner_RequestCompound() {
    this->initializeModel();
}

Ezsigntemplatepackagesigner_RequestCompound::~Ezsigntemplatepackagesigner_RequestCompound() {}

void Ezsigntemplatepackagesigner_RequestCompound::initializeModel() {

    m_pki_ezsigntemplatepackagesigner_id_isSet = false;
    m_pki_ezsigntemplatepackagesigner_id_isValid = false;

    m_fki_ezsigntemplatepackage_id_isSet = false;
    m_fki_ezsigntemplatepackage_id_isValid = false;

    m_fki_ezdoctemplatedocument_id_isSet = false;
    m_fki_ezdoctemplatedocument_id_isValid = false;

    m_fki_user_id_isSet = false;
    m_fki_user_id_isValid = false;

    m_fki_usergroup_id_isSet = false;
    m_fki_usergroup_id_isValid = false;

    m_b_ezsigntemplatepackagesigner_receivecopy_isSet = false;
    m_b_ezsigntemplatepackagesigner_receivecopy_isValid = false;

    m_e_ezsigntemplatepackagesigner_mapping_isSet = false;
    m_e_ezsigntemplatepackagesigner_mapping_isValid = false;

    m_s_ezsigntemplatepackagesigner_description_isSet = false;
    m_s_ezsigntemplatepackagesigner_description_isValid = false;
}

void Ezsigntemplatepackagesigner_RequestCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsigntemplatepackagesigner_RequestCompound::fromJsonObject(QJsonObject json) {

    m_pki_ezsigntemplatepackagesigner_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsigntemplatepackagesigner_id, json[QString("pkiEzsigntemplatepackagesignerID")]);
    m_pki_ezsigntemplatepackagesigner_id_isSet = !json[QString("pkiEzsigntemplatepackagesignerID")].isNull() && m_pki_ezsigntemplatepackagesigner_id_isValid;

    m_fki_ezsigntemplatepackage_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsigntemplatepackage_id, json[QString("fkiEzsigntemplatepackageID")]);
    m_fki_ezsigntemplatepackage_id_isSet = !json[QString("fkiEzsigntemplatepackageID")].isNull() && m_fki_ezsigntemplatepackage_id_isValid;

    m_fki_ezdoctemplatedocument_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezdoctemplatedocument_id, json[QString("fkiEzdoctemplatedocumentID")]);
    m_fki_ezdoctemplatedocument_id_isSet = !json[QString("fkiEzdoctemplatedocumentID")].isNull() && m_fki_ezdoctemplatedocument_id_isValid;

    m_fki_user_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_user_id, json[QString("fkiUserID")]);
    m_fki_user_id_isSet = !json[QString("fkiUserID")].isNull() && m_fki_user_id_isValid;

    m_fki_usergroup_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_usergroup_id, json[QString("fkiUsergroupID")]);
    m_fki_usergroup_id_isSet = !json[QString("fkiUsergroupID")].isNull() && m_fki_usergroup_id_isValid;

    m_b_ezsigntemplatepackagesigner_receivecopy_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsigntemplatepackagesigner_receivecopy, json[QString("bEzsigntemplatepackagesignerReceivecopy")]);
    m_b_ezsigntemplatepackagesigner_receivecopy_isSet = !json[QString("bEzsigntemplatepackagesignerReceivecopy")].isNull() && m_b_ezsigntemplatepackagesigner_receivecopy_isValid;

    m_e_ezsigntemplatepackagesigner_mapping_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsigntemplatepackagesigner_mapping, json[QString("eEzsigntemplatepackagesignerMapping")]);
    m_e_ezsigntemplatepackagesigner_mapping_isSet = !json[QString("eEzsigntemplatepackagesignerMapping")].isNull() && m_e_ezsigntemplatepackagesigner_mapping_isValid;

    m_s_ezsigntemplatepackagesigner_description_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigntemplatepackagesigner_description, json[QString("sEzsigntemplatepackagesignerDescription")]);
    m_s_ezsigntemplatepackagesigner_description_isSet = !json[QString("sEzsigntemplatepackagesignerDescription")].isNull() && m_s_ezsigntemplatepackagesigner_description_isValid;
}

QString Ezsigntemplatepackagesigner_RequestCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsigntemplatepackagesigner_RequestCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsigntemplatepackagesigner_id_isSet) {
        obj.insert(QString("pkiEzsigntemplatepackagesignerID"), ::Ezmaxapi::toJsonValue(m_pki_ezsigntemplatepackagesigner_id));
    }
    if (m_fki_ezsigntemplatepackage_id_isSet) {
        obj.insert(QString("fkiEzsigntemplatepackageID"), ::Ezmaxapi::toJsonValue(m_fki_ezsigntemplatepackage_id));
    }
    if (m_fki_ezdoctemplatedocument_id_isSet) {
        obj.insert(QString("fkiEzdoctemplatedocumentID"), ::Ezmaxapi::toJsonValue(m_fki_ezdoctemplatedocument_id));
    }
    if (m_fki_user_id_isSet) {
        obj.insert(QString("fkiUserID"), ::Ezmaxapi::toJsonValue(m_fki_user_id));
    }
    if (m_fki_usergroup_id_isSet) {
        obj.insert(QString("fkiUsergroupID"), ::Ezmaxapi::toJsonValue(m_fki_usergroup_id));
    }
    if (m_b_ezsigntemplatepackagesigner_receivecopy_isSet) {
        obj.insert(QString("bEzsigntemplatepackagesignerReceivecopy"), ::Ezmaxapi::toJsonValue(m_b_ezsigntemplatepackagesigner_receivecopy));
    }
    if (m_e_ezsigntemplatepackagesigner_mapping.isSet()) {
        obj.insert(QString("eEzsigntemplatepackagesignerMapping"), ::Ezmaxapi::toJsonValue(m_e_ezsigntemplatepackagesigner_mapping));
    }
    if (m_s_ezsigntemplatepackagesigner_description_isSet) {
        obj.insert(QString("sEzsigntemplatepackagesignerDescription"), ::Ezmaxapi::toJsonValue(m_s_ezsigntemplatepackagesigner_description));
    }
    return obj;
}

qint32 Ezsigntemplatepackagesigner_RequestCompound::getPkiEzsigntemplatepackagesignerId() const {
    return m_pki_ezsigntemplatepackagesigner_id;
}
void Ezsigntemplatepackagesigner_RequestCompound::setPkiEzsigntemplatepackagesignerId(const qint32 &pki_ezsigntemplatepackagesigner_id) {
    m_pki_ezsigntemplatepackagesigner_id = pki_ezsigntemplatepackagesigner_id;
    m_pki_ezsigntemplatepackagesigner_id_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_pki_ezsigntemplatepackagesigner_id_Set() const{
    return m_pki_ezsigntemplatepackagesigner_id_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_pki_ezsigntemplatepackagesigner_id_Valid() const{
    return m_pki_ezsigntemplatepackagesigner_id_isValid;
}

qint32 Ezsigntemplatepackagesigner_RequestCompound::getFkiEzsigntemplatepackageId() const {
    return m_fki_ezsigntemplatepackage_id;
}
void Ezsigntemplatepackagesigner_RequestCompound::setFkiEzsigntemplatepackageId(const qint32 &fki_ezsigntemplatepackage_id) {
    m_fki_ezsigntemplatepackage_id = fki_ezsigntemplatepackage_id;
    m_fki_ezsigntemplatepackage_id_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_ezsigntemplatepackage_id_Set() const{
    return m_fki_ezsigntemplatepackage_id_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_ezsigntemplatepackage_id_Valid() const{
    return m_fki_ezsigntemplatepackage_id_isValid;
}

qint32 Ezsigntemplatepackagesigner_RequestCompound::getFkiEzdoctemplatedocumentId() const {
    return m_fki_ezdoctemplatedocument_id;
}
void Ezsigntemplatepackagesigner_RequestCompound::setFkiEzdoctemplatedocumentId(const qint32 &fki_ezdoctemplatedocument_id) {
    m_fki_ezdoctemplatedocument_id = fki_ezdoctemplatedocument_id;
    m_fki_ezdoctemplatedocument_id_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_ezdoctemplatedocument_id_Set() const{
    return m_fki_ezdoctemplatedocument_id_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_ezdoctemplatedocument_id_Valid() const{
    return m_fki_ezdoctemplatedocument_id_isValid;
}

qint32 Ezsigntemplatepackagesigner_RequestCompound::getFkiUserId() const {
    return m_fki_user_id;
}
void Ezsigntemplatepackagesigner_RequestCompound::setFkiUserId(const qint32 &fki_user_id) {
    m_fki_user_id = fki_user_id;
    m_fki_user_id_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_user_id_Set() const{
    return m_fki_user_id_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_user_id_Valid() const{
    return m_fki_user_id_isValid;
}

qint32 Ezsigntemplatepackagesigner_RequestCompound::getFkiUsergroupId() const {
    return m_fki_usergroup_id;
}
void Ezsigntemplatepackagesigner_RequestCompound::setFkiUsergroupId(const qint32 &fki_usergroup_id) {
    m_fki_usergroup_id = fki_usergroup_id;
    m_fki_usergroup_id_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_usergroup_id_Set() const{
    return m_fki_usergroup_id_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_fki_usergroup_id_Valid() const{
    return m_fki_usergroup_id_isValid;
}

bool Ezsigntemplatepackagesigner_RequestCompound::isBEzsigntemplatepackagesignerReceivecopy() const {
    return m_b_ezsigntemplatepackagesigner_receivecopy;
}
void Ezsigntemplatepackagesigner_RequestCompound::setBEzsigntemplatepackagesignerReceivecopy(const bool &b_ezsigntemplatepackagesigner_receivecopy) {
    m_b_ezsigntemplatepackagesigner_receivecopy = b_ezsigntemplatepackagesigner_receivecopy;
    m_b_ezsigntemplatepackagesigner_receivecopy_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_b_ezsigntemplatepackagesigner_receivecopy_Set() const{
    return m_b_ezsigntemplatepackagesigner_receivecopy_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_b_ezsigntemplatepackagesigner_receivecopy_Valid() const{
    return m_b_ezsigntemplatepackagesigner_receivecopy_isValid;
}

Field_eEzsigntemplatepackagesignerMapping Ezsigntemplatepackagesigner_RequestCompound::getEEzsigntemplatepackagesignerMapping() const {
    return m_e_ezsigntemplatepackagesigner_mapping;
}
void Ezsigntemplatepackagesigner_RequestCompound::setEEzsigntemplatepackagesignerMapping(const Field_eEzsigntemplatepackagesignerMapping &e_ezsigntemplatepackagesigner_mapping) {
    m_e_ezsigntemplatepackagesigner_mapping = e_ezsigntemplatepackagesigner_mapping;
    m_e_ezsigntemplatepackagesigner_mapping_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_e_ezsigntemplatepackagesigner_mapping_Set() const{
    return m_e_ezsigntemplatepackagesigner_mapping_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_e_ezsigntemplatepackagesigner_mapping_Valid() const{
    return m_e_ezsigntemplatepackagesigner_mapping_isValid;
}

QString Ezsigntemplatepackagesigner_RequestCompound::getSEzsigntemplatepackagesignerDescription() const {
    return m_s_ezsigntemplatepackagesigner_description;
}
void Ezsigntemplatepackagesigner_RequestCompound::setSEzsigntemplatepackagesignerDescription(const QString &s_ezsigntemplatepackagesigner_description) {
    m_s_ezsigntemplatepackagesigner_description = s_ezsigntemplatepackagesigner_description;
    m_s_ezsigntemplatepackagesigner_description_isSet = true;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_s_ezsigntemplatepackagesigner_description_Set() const{
    return m_s_ezsigntemplatepackagesigner_description_isSet;
}

bool Ezsigntemplatepackagesigner_RequestCompound::is_s_ezsigntemplatepackagesigner_description_Valid() const{
    return m_s_ezsigntemplatepackagesigner_description_isValid;
}

bool Ezsigntemplatepackagesigner_RequestCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsigntemplatepackagesigner_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsigntemplatepackage_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezdoctemplatedocument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_usergroup_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsigntemplatepackagesigner_receivecopy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsigntemplatepackagesigner_mapping.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigntemplatepackagesigner_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsigntemplatepackagesigner_RequestCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fki_ezsigntemplatepackage_id_isValid && m_s_ezsigntemplatepackagesigner_description_isValid && true;
}

} // namespace Ezmaxapi
