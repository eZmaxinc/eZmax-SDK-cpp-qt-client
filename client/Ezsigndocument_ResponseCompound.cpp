/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsigndocument_ResponseCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsigndocument_ResponseCompound::Ezsigndocument_ResponseCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsigndocument_ResponseCompound::Ezsigndocument_ResponseCompound() {
    this->initializeModel();
}

Ezsigndocument_ResponseCompound::~Ezsigndocument_ResponseCompound() {}

void Ezsigndocument_ResponseCompound::initializeModel() {

    m_pki_ezsigndocument_id_isSet = false;
    m_pki_ezsigndocument_id_isValid = false;

    m_fki_ezsignfolder_id_isSet = false;
    m_fki_ezsignfolder_id_isValid = false;

    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet = false;
    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid = false;

    m_dt_ezsigndocument_duedate_isSet = false;
    m_dt_ezsigndocument_duedate_isValid = false;

    m_dt_ezsignform_completed_isSet = false;
    m_dt_ezsignform_completed_isValid = false;

    m_fki_language_id_isSet = false;
    m_fki_language_id_isValid = false;

    m_s_ezsigndocument_name_isSet = false;
    m_s_ezsigndocument_name_isValid = false;

    m_e_ezsigndocument_step_isSet = false;
    m_e_ezsigndocument_step_isValid = false;

    m_dt_ezsigndocument_firstsend_isSet = false;
    m_dt_ezsigndocument_firstsend_isValid = false;

    m_dt_ezsigndocument_lastsend_isSet = false;
    m_dt_ezsigndocument_lastsend_isValid = false;

    m_i_ezsigndocument_order_isSet = false;
    m_i_ezsigndocument_order_isValid = false;

    m_i_ezsigndocument_pagetotal_isSet = false;
    m_i_ezsigndocument_pagetotal_isValid = false;

    m_i_ezsigndocument_signaturesigned_isSet = false;
    m_i_ezsigndocument_signaturesigned_isValid = false;

    m_i_ezsigndocument_signaturetotal_isSet = false;
    m_i_ezsigndocument_signaturetotal_isValid = false;

    m_i_ezsigndocument_formfieldtotal_isSet = false;
    m_i_ezsigndocument_formfieldtotal_isValid = false;

    m_s_ezsigndocument_md5initial_isSet = false;
    m_s_ezsigndocument_md5initial_isValid = false;

    m_t_ezsigndocument_declinedtosignreason_isSet = false;
    m_t_ezsigndocument_declinedtosignreason_isValid = false;

    m_s_ezsigndocument_md5signed_isSet = false;
    m_s_ezsigndocument_md5signed_isValid = false;

    m_b_ezsigndocument_ezsignform_isSet = false;
    m_b_ezsigndocument_ezsignform_isValid = false;

    m_b_ezsigndocument_hassignedsignatures_isSet = false;
    m_b_ezsigndocument_hassignedsignatures_isValid = false;

    m_obj_audit_isSet = false;
    m_obj_audit_isValid = false;

    m_s_ezsigndocument_externalid_isSet = false;
    m_s_ezsigndocument_externalid_isValid = false;

    m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet = false;
    m_i_ezsigndocument_ezsignsignatureattachmenttotal_isValid = false;

    m_i_ezsigndocument_ezsigndiscussiontotal_isSet = false;
    m_i_ezsigndocument_ezsigndiscussiontotal_isValid = false;

    m_e_ezsigndocument_steptype_isSet = false;
    m_e_ezsigndocument_steptype_isValid = false;

    m_i_ezsigndocument_stepformtotal_isSet = false;
    m_i_ezsigndocument_stepformtotal_isValid = false;

    m_i_ezsigndocument_stepformcurrent_isSet = false;
    m_i_ezsigndocument_stepformcurrent_isValid = false;

    m_i_ezsigndocument_stepsignaturetotal_isSet = false;
    m_i_ezsigndocument_stepsignaturetotal_isValid = false;

    m_i_ezsigndocument_stepsignature_current_isSet = false;
    m_i_ezsigndocument_stepsignature_current_isValid = false;

    m_a_obj_ezsignfoldersignerassociationstatus_isSet = false;
    m_a_obj_ezsignfoldersignerassociationstatus_isValid = false;

    m_a_obj_ezsigndocumentdependency_isSet = false;
    m_a_obj_ezsigndocumentdependency_isValid = false;
}

void Ezsigndocument_ResponseCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsigndocument_ResponseCompound::fromJsonObject(QJsonObject json) {

    m_pki_ezsigndocument_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsigndocument_id, json[QString("pkiEzsigndocumentID")]);
    m_pki_ezsigndocument_id_isSet = !json[QString("pkiEzsigndocumentID")].isNull() && m_pki_ezsigndocument_id_isValid;

    m_fki_ezsignfolder_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsignfolder_id, json[QString("fkiEzsignfolderID")]);
    m_fki_ezsignfolder_id_isSet = !json[QString("fkiEzsignfolderID")].isNull() && m_fki_ezsignfolder_id_isValid;

    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsignfoldersignerassociation_id_declinedtosign, json[QString("fkiEzsignfoldersignerassociationIDDeclinedtosign")]);
    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet = !json[QString("fkiEzsignfoldersignerassociationIDDeclinedtosign")].isNull() && m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid;

    m_dt_ezsigndocument_duedate_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsigndocument_duedate, json[QString("dtEzsigndocumentDuedate")]);
    m_dt_ezsigndocument_duedate_isSet = !json[QString("dtEzsigndocumentDuedate")].isNull() && m_dt_ezsigndocument_duedate_isValid;

    m_dt_ezsignform_completed_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsignform_completed, json[QString("dtEzsignformCompleted")]);
    m_dt_ezsignform_completed_isSet = !json[QString("dtEzsignformCompleted")].isNull() && m_dt_ezsignform_completed_isValid;

    m_fki_language_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_language_id, json[QString("fkiLanguageID")]);
    m_fki_language_id_isSet = !json[QString("fkiLanguageID")].isNull() && m_fki_language_id_isValid;

    m_s_ezsigndocument_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_name, json[QString("sEzsigndocumentName")]);
    m_s_ezsigndocument_name_isSet = !json[QString("sEzsigndocumentName")].isNull() && m_s_ezsigndocument_name_isValid;

    m_e_ezsigndocument_step_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsigndocument_step, json[QString("eEzsigndocumentStep")]);
    m_e_ezsigndocument_step_isSet = !json[QString("eEzsigndocumentStep")].isNull() && m_e_ezsigndocument_step_isValid;

    m_dt_ezsigndocument_firstsend_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsigndocument_firstsend, json[QString("dtEzsigndocumentFirstsend")]);
    m_dt_ezsigndocument_firstsend_isSet = !json[QString("dtEzsigndocumentFirstsend")].isNull() && m_dt_ezsigndocument_firstsend_isValid;

    m_dt_ezsigndocument_lastsend_isValid = ::Ezmaxapi::fromJsonValue(m_dt_ezsigndocument_lastsend, json[QString("dtEzsigndocumentLastsend")]);
    m_dt_ezsigndocument_lastsend_isSet = !json[QString("dtEzsigndocumentLastsend")].isNull() && m_dt_ezsigndocument_lastsend_isValid;

    m_i_ezsigndocument_order_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_order, json[QString("iEzsigndocumentOrder")]);
    m_i_ezsigndocument_order_isSet = !json[QString("iEzsigndocumentOrder")].isNull() && m_i_ezsigndocument_order_isValid;

    m_i_ezsigndocument_pagetotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_pagetotal, json[QString("iEzsigndocumentPagetotal")]);
    m_i_ezsigndocument_pagetotal_isSet = !json[QString("iEzsigndocumentPagetotal")].isNull() && m_i_ezsigndocument_pagetotal_isValid;

    m_i_ezsigndocument_signaturesigned_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_signaturesigned, json[QString("iEzsigndocumentSignaturesigned")]);
    m_i_ezsigndocument_signaturesigned_isSet = !json[QString("iEzsigndocumentSignaturesigned")].isNull() && m_i_ezsigndocument_signaturesigned_isValid;

    m_i_ezsigndocument_signaturetotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_signaturetotal, json[QString("iEzsigndocumentSignaturetotal")]);
    m_i_ezsigndocument_signaturetotal_isSet = !json[QString("iEzsigndocumentSignaturetotal")].isNull() && m_i_ezsigndocument_signaturetotal_isValid;

    m_i_ezsigndocument_formfieldtotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_formfieldtotal, json[QString("iEzsigndocumentFormfieldtotal")]);
    m_i_ezsigndocument_formfieldtotal_isSet = !json[QString("iEzsigndocumentFormfieldtotal")].isNull() && m_i_ezsigndocument_formfieldtotal_isValid;

    m_s_ezsigndocument_md5initial_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_md5initial, json[QString("sEzsigndocumentMD5initial")]);
    m_s_ezsigndocument_md5initial_isSet = !json[QString("sEzsigndocumentMD5initial")].isNull() && m_s_ezsigndocument_md5initial_isValid;

    m_t_ezsigndocument_declinedtosignreason_isValid = ::Ezmaxapi::fromJsonValue(m_t_ezsigndocument_declinedtosignreason, json[QString("tEzsigndocumentDeclinedtosignreason")]);
    m_t_ezsigndocument_declinedtosignreason_isSet = !json[QString("tEzsigndocumentDeclinedtosignreason")].isNull() && m_t_ezsigndocument_declinedtosignreason_isValid;

    m_s_ezsigndocument_md5signed_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_md5signed, json[QString("sEzsigndocumentMD5signed")]);
    m_s_ezsigndocument_md5signed_isSet = !json[QString("sEzsigndocumentMD5signed")].isNull() && m_s_ezsigndocument_md5signed_isValid;

    m_b_ezsigndocument_ezsignform_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsigndocument_ezsignform, json[QString("bEzsigndocumentEzsignform")]);
    m_b_ezsigndocument_ezsignform_isSet = !json[QString("bEzsigndocumentEzsignform")].isNull() && m_b_ezsigndocument_ezsignform_isValid;

    m_b_ezsigndocument_hassignedsignatures_isValid = ::Ezmaxapi::fromJsonValue(m_b_ezsigndocument_hassignedsignatures, json[QString("bEzsigndocumentHassignedsignatures")]);
    m_b_ezsigndocument_hassignedsignatures_isSet = !json[QString("bEzsigndocumentHassignedsignatures")].isNull() && m_b_ezsigndocument_hassignedsignatures_isValid;

    m_obj_audit_isValid = ::Ezmaxapi::fromJsonValue(m_obj_audit, json[QString("objAudit")]);
    m_obj_audit_isSet = !json[QString("objAudit")].isNull() && m_obj_audit_isValid;

    m_s_ezsigndocument_externalid_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_externalid, json[QString("sEzsigndocumentExternalid")]);
    m_s_ezsigndocument_externalid_isSet = !json[QString("sEzsigndocumentExternalid")].isNull() && m_s_ezsigndocument_externalid_isValid;

    m_i_ezsigndocument_ezsignsignatureattachmenttotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_ezsignsignatureattachmenttotal, json[QString("iEzsigndocumentEzsignsignatureattachmenttotal")]);
    m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet = !json[QString("iEzsigndocumentEzsignsignatureattachmenttotal")].isNull() && m_i_ezsigndocument_ezsignsignatureattachmenttotal_isValid;

    m_i_ezsigndocument_ezsigndiscussiontotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_ezsigndiscussiontotal, json[QString("iEzsigndocumentEzsigndiscussiontotal")]);
    m_i_ezsigndocument_ezsigndiscussiontotal_isSet = !json[QString("iEzsigndocumentEzsigndiscussiontotal")].isNull() && m_i_ezsigndocument_ezsigndiscussiontotal_isValid;

    m_e_ezsigndocument_steptype_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezsigndocument_steptype, json[QString("eEzsigndocumentSteptype")]);
    m_e_ezsigndocument_steptype_isSet = !json[QString("eEzsigndocumentSteptype")].isNull() && m_e_ezsigndocument_steptype_isValid;

    m_i_ezsigndocument_stepformtotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_stepformtotal, json[QString("iEzsigndocumentStepformtotal")]);
    m_i_ezsigndocument_stepformtotal_isSet = !json[QString("iEzsigndocumentStepformtotal")].isNull() && m_i_ezsigndocument_stepformtotal_isValid;

    m_i_ezsigndocument_stepformcurrent_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_stepformcurrent, json[QString("iEzsigndocumentStepformcurrent")]);
    m_i_ezsigndocument_stepformcurrent_isSet = !json[QString("iEzsigndocumentStepformcurrent")].isNull() && m_i_ezsigndocument_stepformcurrent_isValid;

    m_i_ezsigndocument_stepsignaturetotal_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_stepsignaturetotal, json[QString("iEzsigndocumentStepsignaturetotal")]);
    m_i_ezsigndocument_stepsignaturetotal_isSet = !json[QString("iEzsigndocumentStepsignaturetotal")].isNull() && m_i_ezsigndocument_stepsignaturetotal_isValid;

    m_i_ezsigndocument_stepsignature_current_isValid = ::Ezmaxapi::fromJsonValue(m_i_ezsigndocument_stepsignature_current, json[QString("iEzsigndocumentStepsignatureCurrent")]);
    m_i_ezsigndocument_stepsignature_current_isSet = !json[QString("iEzsigndocumentStepsignatureCurrent")].isNull() && m_i_ezsigndocument_stepsignature_current_isValid;

    m_a_obj_ezsignfoldersignerassociationstatus_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_ezsignfoldersignerassociationstatus, json[QString("a_objEzsignfoldersignerassociationstatus")]);
    m_a_obj_ezsignfoldersignerassociationstatus_isSet = !json[QString("a_objEzsignfoldersignerassociationstatus")].isNull() && m_a_obj_ezsignfoldersignerassociationstatus_isValid;

    m_a_obj_ezsigndocumentdependency_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_ezsigndocumentdependency, json[QString("a_objEzsigndocumentdependency")]);
    m_a_obj_ezsigndocumentdependency_isSet = !json[QString("a_objEzsigndocumentdependency")].isNull() && m_a_obj_ezsigndocumentdependency_isValid;
}

QString Ezsigndocument_ResponseCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsigndocument_ResponseCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsigndocument_id_isSet) {
        obj.insert(QString("pkiEzsigndocumentID"), ::Ezmaxapi::toJsonValue(m_pki_ezsigndocument_id));
    }
    if (m_fki_ezsignfolder_id_isSet) {
        obj.insert(QString("fkiEzsignfolderID"), ::Ezmaxapi::toJsonValue(m_fki_ezsignfolder_id));
    }
    if (m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet) {
        obj.insert(QString("fkiEzsignfoldersignerassociationIDDeclinedtosign"), ::Ezmaxapi::toJsonValue(m_fki_ezsignfoldersignerassociation_id_declinedtosign));
    }
    if (m_dt_ezsigndocument_duedate_isSet) {
        obj.insert(QString("dtEzsigndocumentDuedate"), ::Ezmaxapi::toJsonValue(m_dt_ezsigndocument_duedate));
    }
    if (m_dt_ezsignform_completed_isSet) {
        obj.insert(QString("dtEzsignformCompleted"), ::Ezmaxapi::toJsonValue(m_dt_ezsignform_completed));
    }
    if (m_fki_language_id_isSet) {
        obj.insert(QString("fkiLanguageID"), ::Ezmaxapi::toJsonValue(m_fki_language_id));
    }
    if (m_s_ezsigndocument_name_isSet) {
        obj.insert(QString("sEzsigndocumentName"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_name));
    }
    if (m_e_ezsigndocument_step.isSet()) {
        obj.insert(QString("eEzsigndocumentStep"), ::Ezmaxapi::toJsonValue(m_e_ezsigndocument_step));
    }
    if (m_dt_ezsigndocument_firstsend_isSet) {
        obj.insert(QString("dtEzsigndocumentFirstsend"), ::Ezmaxapi::toJsonValue(m_dt_ezsigndocument_firstsend));
    }
    if (m_dt_ezsigndocument_lastsend_isSet) {
        obj.insert(QString("dtEzsigndocumentLastsend"), ::Ezmaxapi::toJsonValue(m_dt_ezsigndocument_lastsend));
    }
    if (m_i_ezsigndocument_order_isSet) {
        obj.insert(QString("iEzsigndocumentOrder"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_order));
    }
    if (m_i_ezsigndocument_pagetotal_isSet) {
        obj.insert(QString("iEzsigndocumentPagetotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_pagetotal));
    }
    if (m_i_ezsigndocument_signaturesigned_isSet) {
        obj.insert(QString("iEzsigndocumentSignaturesigned"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_signaturesigned));
    }
    if (m_i_ezsigndocument_signaturetotal_isSet) {
        obj.insert(QString("iEzsigndocumentSignaturetotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_signaturetotal));
    }
    if (m_i_ezsigndocument_formfieldtotal_isSet) {
        obj.insert(QString("iEzsigndocumentFormfieldtotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_formfieldtotal));
    }
    if (m_s_ezsigndocument_md5initial_isSet) {
        obj.insert(QString("sEzsigndocumentMD5initial"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_md5initial));
    }
    if (m_t_ezsigndocument_declinedtosignreason_isSet) {
        obj.insert(QString("tEzsigndocumentDeclinedtosignreason"), ::Ezmaxapi::toJsonValue(m_t_ezsigndocument_declinedtosignreason));
    }
    if (m_s_ezsigndocument_md5signed_isSet) {
        obj.insert(QString("sEzsigndocumentMD5signed"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_md5signed));
    }
    if (m_b_ezsigndocument_ezsignform_isSet) {
        obj.insert(QString("bEzsigndocumentEzsignform"), ::Ezmaxapi::toJsonValue(m_b_ezsigndocument_ezsignform));
    }
    if (m_b_ezsigndocument_hassignedsignatures_isSet) {
        obj.insert(QString("bEzsigndocumentHassignedsignatures"), ::Ezmaxapi::toJsonValue(m_b_ezsigndocument_hassignedsignatures));
    }
    if (m_obj_audit.isSet()) {
        obj.insert(QString("objAudit"), ::Ezmaxapi::toJsonValue(m_obj_audit));
    }
    if (m_s_ezsigndocument_externalid_isSet) {
        obj.insert(QString("sEzsigndocumentExternalid"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_externalid));
    }
    if (m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet) {
        obj.insert(QString("iEzsigndocumentEzsignsignatureattachmenttotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_ezsignsignatureattachmenttotal));
    }
    if (m_i_ezsigndocument_ezsigndiscussiontotal_isSet) {
        obj.insert(QString("iEzsigndocumentEzsigndiscussiontotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_ezsigndiscussiontotal));
    }
    if (m_e_ezsigndocument_steptype.isSet()) {
        obj.insert(QString("eEzsigndocumentSteptype"), ::Ezmaxapi::toJsonValue(m_e_ezsigndocument_steptype));
    }
    if (m_i_ezsigndocument_stepformtotal_isSet) {
        obj.insert(QString("iEzsigndocumentStepformtotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_stepformtotal));
    }
    if (m_i_ezsigndocument_stepformcurrent_isSet) {
        obj.insert(QString("iEzsigndocumentStepformcurrent"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_stepformcurrent));
    }
    if (m_i_ezsigndocument_stepsignaturetotal_isSet) {
        obj.insert(QString("iEzsigndocumentStepsignaturetotal"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_stepsignaturetotal));
    }
    if (m_i_ezsigndocument_stepsignature_current_isSet) {
        obj.insert(QString("iEzsigndocumentStepsignatureCurrent"), ::Ezmaxapi::toJsonValue(m_i_ezsigndocument_stepsignature_current));
    }
    if (m_a_obj_ezsignfoldersignerassociationstatus.size() > 0) {
        obj.insert(QString("a_objEzsignfoldersignerassociationstatus"), ::Ezmaxapi::toJsonValue(m_a_obj_ezsignfoldersignerassociationstatus));
    }
    if (m_a_obj_ezsigndocumentdependency.size() > 0) {
        obj.insert(QString("a_objEzsigndocumentdependency"), ::Ezmaxapi::toJsonValue(m_a_obj_ezsigndocumentdependency));
    }
    return obj;
}

qint32 Ezsigndocument_ResponseCompound::getPkiEzsigndocumentId() const {
    return m_pki_ezsigndocument_id;
}
void Ezsigndocument_ResponseCompound::setPkiEzsigndocumentId(const qint32 &pki_ezsigndocument_id) {
    m_pki_ezsigndocument_id = pki_ezsigndocument_id;
    m_pki_ezsigndocument_id_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_pki_ezsigndocument_id_Set() const{
    return m_pki_ezsigndocument_id_isSet;
}

bool Ezsigndocument_ResponseCompound::is_pki_ezsigndocument_id_Valid() const{
    return m_pki_ezsigndocument_id_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getFkiEzsignfolderId() const {
    return m_fki_ezsignfolder_id;
}
void Ezsigndocument_ResponseCompound::setFkiEzsignfolderId(const qint32 &fki_ezsignfolder_id) {
    m_fki_ezsignfolder_id = fki_ezsignfolder_id;
    m_fki_ezsignfolder_id_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_fki_ezsignfolder_id_Set() const{
    return m_fki_ezsignfolder_id_isSet;
}

bool Ezsigndocument_ResponseCompound::is_fki_ezsignfolder_id_Valid() const{
    return m_fki_ezsignfolder_id_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getFkiEzsignfoldersignerassociationIdDeclinedtosign() const {
    return m_fki_ezsignfoldersignerassociation_id_declinedtosign;
}
void Ezsigndocument_ResponseCompound::setFkiEzsignfoldersignerassociationIdDeclinedtosign(const qint32 &fki_ezsignfoldersignerassociation_id_declinedtosign) {
    m_fki_ezsignfoldersignerassociation_id_declinedtosign = fki_ezsignfoldersignerassociation_id_declinedtosign;
    m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_fki_ezsignfoldersignerassociation_id_declinedtosign_Set() const{
    return m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet;
}

bool Ezsigndocument_ResponseCompound::is_fki_ezsignfoldersignerassociation_id_declinedtosign_Valid() const{
    return m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid;
}

QString Ezsigndocument_ResponseCompound::getDtEzsigndocumentDuedate() const {
    return m_dt_ezsigndocument_duedate;
}
void Ezsigndocument_ResponseCompound::setDtEzsigndocumentDuedate(const QString &dt_ezsigndocument_duedate) {
    m_dt_ezsigndocument_duedate = dt_ezsigndocument_duedate;
    m_dt_ezsigndocument_duedate_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsigndocument_duedate_Set() const{
    return m_dt_ezsigndocument_duedate_isSet;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsigndocument_duedate_Valid() const{
    return m_dt_ezsigndocument_duedate_isValid;
}

QString Ezsigndocument_ResponseCompound::getDtEzsignformCompleted() const {
    return m_dt_ezsignform_completed;
}
void Ezsigndocument_ResponseCompound::setDtEzsignformCompleted(const QString &dt_ezsignform_completed) {
    m_dt_ezsignform_completed = dt_ezsignform_completed;
    m_dt_ezsignform_completed_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsignform_completed_Set() const{
    return m_dt_ezsignform_completed_isSet;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsignform_completed_Valid() const{
    return m_dt_ezsignform_completed_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getFkiLanguageId() const {
    return m_fki_language_id;
}
void Ezsigndocument_ResponseCompound::setFkiLanguageId(const qint32 &fki_language_id) {
    m_fki_language_id = fki_language_id;
    m_fki_language_id_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_fki_language_id_Set() const{
    return m_fki_language_id_isSet;
}

bool Ezsigndocument_ResponseCompound::is_fki_language_id_Valid() const{
    return m_fki_language_id_isValid;
}

QString Ezsigndocument_ResponseCompound::getSEzsigndocumentName() const {
    return m_s_ezsigndocument_name;
}
void Ezsigndocument_ResponseCompound::setSEzsigndocumentName(const QString &s_ezsigndocument_name) {
    m_s_ezsigndocument_name = s_ezsigndocument_name;
    m_s_ezsigndocument_name_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_name_Set() const{
    return m_s_ezsigndocument_name_isSet;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_name_Valid() const{
    return m_s_ezsigndocument_name_isValid;
}

Field_eEzsigndocumentStep Ezsigndocument_ResponseCompound::getEEzsigndocumentStep() const {
    return m_e_ezsigndocument_step;
}
void Ezsigndocument_ResponseCompound::setEEzsigndocumentStep(const Field_eEzsigndocumentStep &e_ezsigndocument_step) {
    m_e_ezsigndocument_step = e_ezsigndocument_step;
    m_e_ezsigndocument_step_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_e_ezsigndocument_step_Set() const{
    return m_e_ezsigndocument_step_isSet;
}

bool Ezsigndocument_ResponseCompound::is_e_ezsigndocument_step_Valid() const{
    return m_e_ezsigndocument_step_isValid;
}

QString Ezsigndocument_ResponseCompound::getDtEzsigndocumentFirstsend() const {
    return m_dt_ezsigndocument_firstsend;
}
void Ezsigndocument_ResponseCompound::setDtEzsigndocumentFirstsend(const QString &dt_ezsigndocument_firstsend) {
    m_dt_ezsigndocument_firstsend = dt_ezsigndocument_firstsend;
    m_dt_ezsigndocument_firstsend_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsigndocument_firstsend_Set() const{
    return m_dt_ezsigndocument_firstsend_isSet;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsigndocument_firstsend_Valid() const{
    return m_dt_ezsigndocument_firstsend_isValid;
}

QString Ezsigndocument_ResponseCompound::getDtEzsigndocumentLastsend() const {
    return m_dt_ezsigndocument_lastsend;
}
void Ezsigndocument_ResponseCompound::setDtEzsigndocumentLastsend(const QString &dt_ezsigndocument_lastsend) {
    m_dt_ezsigndocument_lastsend = dt_ezsigndocument_lastsend;
    m_dt_ezsigndocument_lastsend_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsigndocument_lastsend_Set() const{
    return m_dt_ezsigndocument_lastsend_isSet;
}

bool Ezsigndocument_ResponseCompound::is_dt_ezsigndocument_lastsend_Valid() const{
    return m_dt_ezsigndocument_lastsend_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentOrder() const {
    return m_i_ezsigndocument_order;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentOrder(const qint32 &i_ezsigndocument_order) {
    m_i_ezsigndocument_order = i_ezsigndocument_order;
    m_i_ezsigndocument_order_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_order_Set() const{
    return m_i_ezsigndocument_order_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_order_Valid() const{
    return m_i_ezsigndocument_order_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentPagetotal() const {
    return m_i_ezsigndocument_pagetotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentPagetotal(const qint32 &i_ezsigndocument_pagetotal) {
    m_i_ezsigndocument_pagetotal = i_ezsigndocument_pagetotal;
    m_i_ezsigndocument_pagetotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_pagetotal_Set() const{
    return m_i_ezsigndocument_pagetotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_pagetotal_Valid() const{
    return m_i_ezsigndocument_pagetotal_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentSignaturesigned() const {
    return m_i_ezsigndocument_signaturesigned;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentSignaturesigned(const qint32 &i_ezsigndocument_signaturesigned) {
    m_i_ezsigndocument_signaturesigned = i_ezsigndocument_signaturesigned;
    m_i_ezsigndocument_signaturesigned_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_signaturesigned_Set() const{
    return m_i_ezsigndocument_signaturesigned_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_signaturesigned_Valid() const{
    return m_i_ezsigndocument_signaturesigned_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentSignaturetotal() const {
    return m_i_ezsigndocument_signaturetotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentSignaturetotal(const qint32 &i_ezsigndocument_signaturetotal) {
    m_i_ezsigndocument_signaturetotal = i_ezsigndocument_signaturetotal;
    m_i_ezsigndocument_signaturetotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_signaturetotal_Set() const{
    return m_i_ezsigndocument_signaturetotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_signaturetotal_Valid() const{
    return m_i_ezsigndocument_signaturetotal_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentFormfieldtotal() const {
    return m_i_ezsigndocument_formfieldtotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentFormfieldtotal(const qint32 &i_ezsigndocument_formfieldtotal) {
    m_i_ezsigndocument_formfieldtotal = i_ezsigndocument_formfieldtotal;
    m_i_ezsigndocument_formfieldtotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_formfieldtotal_Set() const{
    return m_i_ezsigndocument_formfieldtotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_formfieldtotal_Valid() const{
    return m_i_ezsigndocument_formfieldtotal_isValid;
}

QString Ezsigndocument_ResponseCompound::getSEzsigndocumentMd5initial() const {
    return m_s_ezsigndocument_md5initial;
}
void Ezsigndocument_ResponseCompound::setSEzsigndocumentMd5initial(const QString &s_ezsigndocument_md5initial) {
    m_s_ezsigndocument_md5initial = s_ezsigndocument_md5initial;
    m_s_ezsigndocument_md5initial_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_md5initial_Set() const{
    return m_s_ezsigndocument_md5initial_isSet;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_md5initial_Valid() const{
    return m_s_ezsigndocument_md5initial_isValid;
}

QString Ezsigndocument_ResponseCompound::getTEzsigndocumentDeclinedtosignreason() const {
    return m_t_ezsigndocument_declinedtosignreason;
}
void Ezsigndocument_ResponseCompound::setTEzsigndocumentDeclinedtosignreason(const QString &t_ezsigndocument_declinedtosignreason) {
    m_t_ezsigndocument_declinedtosignreason = t_ezsigndocument_declinedtosignreason;
    m_t_ezsigndocument_declinedtosignreason_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_t_ezsigndocument_declinedtosignreason_Set() const{
    return m_t_ezsigndocument_declinedtosignreason_isSet;
}

bool Ezsigndocument_ResponseCompound::is_t_ezsigndocument_declinedtosignreason_Valid() const{
    return m_t_ezsigndocument_declinedtosignreason_isValid;
}

QString Ezsigndocument_ResponseCompound::getSEzsigndocumentMd5signed() const {
    return m_s_ezsigndocument_md5signed;
}
void Ezsigndocument_ResponseCompound::setSEzsigndocumentMd5signed(const QString &s_ezsigndocument_md5signed) {
    m_s_ezsigndocument_md5signed = s_ezsigndocument_md5signed;
    m_s_ezsigndocument_md5signed_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_md5signed_Set() const{
    return m_s_ezsigndocument_md5signed_isSet;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_md5signed_Valid() const{
    return m_s_ezsigndocument_md5signed_isValid;
}

bool Ezsigndocument_ResponseCompound::isBEzsigndocumentEzsignform() const {
    return m_b_ezsigndocument_ezsignform;
}
void Ezsigndocument_ResponseCompound::setBEzsigndocumentEzsignform(const bool &b_ezsigndocument_ezsignform) {
    m_b_ezsigndocument_ezsignform = b_ezsigndocument_ezsignform;
    m_b_ezsigndocument_ezsignform_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_b_ezsigndocument_ezsignform_Set() const{
    return m_b_ezsigndocument_ezsignform_isSet;
}

bool Ezsigndocument_ResponseCompound::is_b_ezsigndocument_ezsignform_Valid() const{
    return m_b_ezsigndocument_ezsignform_isValid;
}

bool Ezsigndocument_ResponseCompound::isBEzsigndocumentHassignedsignatures() const {
    return m_b_ezsigndocument_hassignedsignatures;
}
void Ezsigndocument_ResponseCompound::setBEzsigndocumentHassignedsignatures(const bool &b_ezsigndocument_hassignedsignatures) {
    m_b_ezsigndocument_hassignedsignatures = b_ezsigndocument_hassignedsignatures;
    m_b_ezsigndocument_hassignedsignatures_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_b_ezsigndocument_hassignedsignatures_Set() const{
    return m_b_ezsigndocument_hassignedsignatures_isSet;
}

bool Ezsigndocument_ResponseCompound::is_b_ezsigndocument_hassignedsignatures_Valid() const{
    return m_b_ezsigndocument_hassignedsignatures_isValid;
}

Common_Audit Ezsigndocument_ResponseCompound::getObjAudit() const {
    return m_obj_audit;
}
void Ezsigndocument_ResponseCompound::setObjAudit(const Common_Audit &obj_audit) {
    m_obj_audit = obj_audit;
    m_obj_audit_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_obj_audit_Set() const{
    return m_obj_audit_isSet;
}

bool Ezsigndocument_ResponseCompound::is_obj_audit_Valid() const{
    return m_obj_audit_isValid;
}

QString Ezsigndocument_ResponseCompound::getSEzsigndocumentExternalid() const {
    return m_s_ezsigndocument_externalid;
}
void Ezsigndocument_ResponseCompound::setSEzsigndocumentExternalid(const QString &s_ezsigndocument_externalid) {
    m_s_ezsigndocument_externalid = s_ezsigndocument_externalid;
    m_s_ezsigndocument_externalid_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_externalid_Set() const{
    return m_s_ezsigndocument_externalid_isSet;
}

bool Ezsigndocument_ResponseCompound::is_s_ezsigndocument_externalid_Valid() const{
    return m_s_ezsigndocument_externalid_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentEzsignsignatureattachmenttotal() const {
    return m_i_ezsigndocument_ezsignsignatureattachmenttotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentEzsignsignatureattachmenttotal(const qint32 &i_ezsigndocument_ezsignsignatureattachmenttotal) {
    m_i_ezsigndocument_ezsignsignatureattachmenttotal = i_ezsigndocument_ezsignsignatureattachmenttotal;
    m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_ezsignsignatureattachmenttotal_Set() const{
    return m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_ezsignsignatureattachmenttotal_Valid() const{
    return m_i_ezsigndocument_ezsignsignatureattachmenttotal_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentEzsigndiscussiontotal() const {
    return m_i_ezsigndocument_ezsigndiscussiontotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentEzsigndiscussiontotal(const qint32 &i_ezsigndocument_ezsigndiscussiontotal) {
    m_i_ezsigndocument_ezsigndiscussiontotal = i_ezsigndocument_ezsigndiscussiontotal;
    m_i_ezsigndocument_ezsigndiscussiontotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_ezsigndiscussiontotal_Set() const{
    return m_i_ezsigndocument_ezsigndiscussiontotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_ezsigndiscussiontotal_Valid() const{
    return m_i_ezsigndocument_ezsigndiscussiontotal_isValid;
}

Computed_eEzsigndocumentSteptype Ezsigndocument_ResponseCompound::getEEzsigndocumentSteptype() const {
    return m_e_ezsigndocument_steptype;
}
void Ezsigndocument_ResponseCompound::setEEzsigndocumentSteptype(const Computed_eEzsigndocumentSteptype &e_ezsigndocument_steptype) {
    m_e_ezsigndocument_steptype = e_ezsigndocument_steptype;
    m_e_ezsigndocument_steptype_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_e_ezsigndocument_steptype_Set() const{
    return m_e_ezsigndocument_steptype_isSet;
}

bool Ezsigndocument_ResponseCompound::is_e_ezsigndocument_steptype_Valid() const{
    return m_e_ezsigndocument_steptype_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentStepformtotal() const {
    return m_i_ezsigndocument_stepformtotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentStepformtotal(const qint32 &i_ezsigndocument_stepformtotal) {
    m_i_ezsigndocument_stepformtotal = i_ezsigndocument_stepformtotal;
    m_i_ezsigndocument_stepformtotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepformtotal_Set() const{
    return m_i_ezsigndocument_stepformtotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepformtotal_Valid() const{
    return m_i_ezsigndocument_stepformtotal_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentStepformcurrent() const {
    return m_i_ezsigndocument_stepformcurrent;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentStepformcurrent(const qint32 &i_ezsigndocument_stepformcurrent) {
    m_i_ezsigndocument_stepformcurrent = i_ezsigndocument_stepformcurrent;
    m_i_ezsigndocument_stepformcurrent_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepformcurrent_Set() const{
    return m_i_ezsigndocument_stepformcurrent_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepformcurrent_Valid() const{
    return m_i_ezsigndocument_stepformcurrent_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentStepsignaturetotal() const {
    return m_i_ezsigndocument_stepsignaturetotal;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentStepsignaturetotal(const qint32 &i_ezsigndocument_stepsignaturetotal) {
    m_i_ezsigndocument_stepsignaturetotal = i_ezsigndocument_stepsignaturetotal;
    m_i_ezsigndocument_stepsignaturetotal_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepsignaturetotal_Set() const{
    return m_i_ezsigndocument_stepsignaturetotal_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepsignaturetotal_Valid() const{
    return m_i_ezsigndocument_stepsignaturetotal_isValid;
}

qint32 Ezsigndocument_ResponseCompound::getIEzsigndocumentStepsignatureCurrent() const {
    return m_i_ezsigndocument_stepsignature_current;
}
void Ezsigndocument_ResponseCompound::setIEzsigndocumentStepsignatureCurrent(const qint32 &i_ezsigndocument_stepsignature_current) {
    m_i_ezsigndocument_stepsignature_current = i_ezsigndocument_stepsignature_current;
    m_i_ezsigndocument_stepsignature_current_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepsignature_current_Set() const{
    return m_i_ezsigndocument_stepsignature_current_isSet;
}

bool Ezsigndocument_ResponseCompound::is_i_ezsigndocument_stepsignature_current_Valid() const{
    return m_i_ezsigndocument_stepsignature_current_isValid;
}

QList<Custom_Ezsignfoldersignerassociationstatus_Response> Ezsigndocument_ResponseCompound::getAObjEzsignfoldersignerassociationstatus() const {
    return m_a_obj_ezsignfoldersignerassociationstatus;
}
void Ezsigndocument_ResponseCompound::setAObjEzsignfoldersignerassociationstatus(const QList<Custom_Ezsignfoldersignerassociationstatus_Response> &a_obj_ezsignfoldersignerassociationstatus) {
    m_a_obj_ezsignfoldersignerassociationstatus = a_obj_ezsignfoldersignerassociationstatus;
    m_a_obj_ezsignfoldersignerassociationstatus_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_a_obj_ezsignfoldersignerassociationstatus_Set() const{
    return m_a_obj_ezsignfoldersignerassociationstatus_isSet;
}

bool Ezsigndocument_ResponseCompound::is_a_obj_ezsignfoldersignerassociationstatus_Valid() const{
    return m_a_obj_ezsignfoldersignerassociationstatus_isValid;
}

QList<Ezsigndocumentdependency_Response> Ezsigndocument_ResponseCompound::getAObjEzsigndocumentdependency() const {
    return m_a_obj_ezsigndocumentdependency;
}
void Ezsigndocument_ResponseCompound::setAObjEzsigndocumentdependency(const QList<Ezsigndocumentdependency_Response> &a_obj_ezsigndocumentdependency) {
    m_a_obj_ezsigndocumentdependency = a_obj_ezsigndocumentdependency;
    m_a_obj_ezsigndocumentdependency_isSet = true;
}

bool Ezsigndocument_ResponseCompound::is_a_obj_ezsigndocumentdependency_Set() const{
    return m_a_obj_ezsigndocumentdependency_isSet;
}

bool Ezsigndocument_ResponseCompound::is_a_obj_ezsigndocumentdependency_Valid() const{
    return m_a_obj_ezsigndocumentdependency_isValid;
}

bool Ezsigndocument_ResponseCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsigndocument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsignfolder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsigndocument_duedate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsignform_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_language_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsigndocument_step.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsigndocument_firstsend_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_ezsigndocument_lastsend_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_pagetotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_signaturesigned_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_signaturetotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_formfieldtotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_md5initial_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_t_ezsigndocument_declinedtosignreason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_md5signed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsigndocument_ezsignform_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_ezsigndocument_hassignedsignatures_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_audit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_externalid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_ezsigndiscussiontotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_ezsigndocument_steptype.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_stepformtotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_stepformcurrent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_stepsignaturetotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_ezsigndocument_stepsignature_current_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_ezsignfoldersignerassociationstatus.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_ezsigndocumentdependency.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsigndocument_ResponseCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezsigndocument_id_isValid && m_fki_ezsignfolder_id_isValid && m_dt_ezsigndocument_duedate_isValid && m_s_ezsigndocument_name_isValid && m_e_ezsigndocument_step_isValid && m_i_ezsigndocument_order_isValid && m_i_ezsigndocument_pagetotal_isValid && m_i_ezsigndocument_signaturesigned_isValid && m_i_ezsigndocument_signaturetotal_isValid && m_i_ezsigndocument_formfieldtotal_isValid && m_i_ezsigndocument_ezsignsignatureattachmenttotal_isValid && m_i_ezsigndocument_ezsigndiscussiontotal_isValid && m_e_ezsigndocument_steptype_isValid && m_i_ezsigndocument_stepformtotal_isValid && m_i_ezsigndocument_stepformcurrent_isValid && m_i_ezsigndocument_stepsignaturetotal_isValid && m_i_ezsigndocument_stepsignature_current_isValid && m_a_obj_ezsignfoldersignerassociationstatus_isValid && true;
}

} // namespace Ezmaxapi
