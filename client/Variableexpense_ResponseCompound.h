/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Variableexpense_ResponseCompound.h
 *
 * A Variableexpense Object
 */

#ifndef Variableexpense_ResponseCompound_H
#define Variableexpense_ResponseCompound_H

#include <QJsonObject>

#include "Field_eVariableexpenseTaxable.h"
#include "Multilingual_VariableexpenseDescription.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Multilingual_VariableexpenseDescription;

class Variableexpense_ResponseCompound : public Object {
public:
    Variableexpense_ResponseCompound();
    Variableexpense_ResponseCompound(QString json);
    ~Variableexpense_ResponseCompound() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiVariableexpenseId() const;
    void setPkiVariableexpenseId(const qint32 &pki_variableexpense_id);
    bool is_pki_variableexpense_id_Set() const;
    bool is_pki_variableexpense_id_Valid() const;

    QString getSVariableexpenseCode() const;
    void setSVariableexpenseCode(const QString &s_variableexpense_code);
    bool is_s_variableexpense_code_Set() const;
    bool is_s_variableexpense_code_Valid() const;

    Multilingual_VariableexpenseDescription getObjVariableexpenseDescription() const;
    void setObjVariableexpenseDescription(const Multilingual_VariableexpenseDescription &obj_variableexpense_description);
    bool is_obj_variableexpense_description_Set() const;
    bool is_obj_variableexpense_description_Valid() const;

    Field_eVariableexpenseTaxable getEVariableexpenseTaxable() const;
    void setEVariableexpenseTaxable(const Field_eVariableexpenseTaxable &e_variableexpense_taxable);
    bool is_e_variableexpense_taxable_Set() const;
    bool is_e_variableexpense_taxable_Valid() const;

    bool isBVariableexpenseIsactive() const;
    void setBVariableexpenseIsactive(const bool &b_variableexpense_isactive);
    bool is_b_variableexpense_isactive_Set() const;
    bool is_b_variableexpense_isactive_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_variableexpense_id;
    bool m_pki_variableexpense_id_isSet;
    bool m_pki_variableexpense_id_isValid;

    QString m_s_variableexpense_code;
    bool m_s_variableexpense_code_isSet;
    bool m_s_variableexpense_code_isValid;

    Multilingual_VariableexpenseDescription m_obj_variableexpense_description;
    bool m_obj_variableexpense_description_isSet;
    bool m_obj_variableexpense_description_isValid;

    Field_eVariableexpenseTaxable m_e_variableexpense_taxable;
    bool m_e_variableexpense_taxable_isSet;
    bool m_e_variableexpense_taxable_isValid;

    bool m_b_variableexpense_isactive;
    bool m_b_variableexpense_isactive_isSet;
    bool m_b_variableexpense_isactive_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Variableexpense_ResponseCompound)

#endif // Variableexpense_ResponseCompound_H
