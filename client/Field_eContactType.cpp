/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Field_eContactType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Field_eContactType::Field_eContactType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Field_eContactType::Field_eContactType() {
    this->initializeModel();
}

Field_eContactType::~Field_eContactType() {}

void Field_eContactType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eField_eContactType::INVALID_VALUE_OPENAPI_GENERATED;
}

void Field_eContactType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Agent", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::AGENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Assistant", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::ASSISTANT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BankAccount", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::BANKACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Borrower", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::BORROWER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Buyer", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::BUYER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Company", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::COMPANY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ContractCreator", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::CONTRACTCREATOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Creditcardmerchant", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::CREDITCARDMERCHANT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Customer", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::CUSTOMER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Depositreceipt", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::DEPOSITRECEIPT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Employee", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::EMPLOYEE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ExternalBroker", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::EXTERNALBROKER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EzsignSigner", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::EZSIGNSIGNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EzsignUser", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::EZSIGNUSER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EzcomAgent", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::EZCOMAGENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EzcomApprover", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::EZCOMAPPROVER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FinancialInstitution", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FINANCIALINSTITUTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FranchiseBroker", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FRANCHISEBROKER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Franchisefranchisecontact", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FRANCHISEFRANCHISECONTACT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Franchisefranchisesignatory", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FRANCHISEFRANCHISESIGNATORY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FranchiseOfficeBroker", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FRANCHISEOFFICEBROKER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FranchiseCompany", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FRANCHISECOMPANY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FranchiseOwner", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::FRANCHISEOWNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Lead", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::LEAD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MarketingCampaignSample", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::MARKETINGCAMPAIGNSAMPLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Notary", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::NOTARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Payer", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::PAYER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Petowner", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::PETOWNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PrivateTo", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::PRIVATETO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RewardMember", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::REWARDMEMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RewardRepresentative", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::REWARDREPRESENTATIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Seller", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::SELLER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Shared", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::SHARED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Supplier", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::SUPPLIER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Survey", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::SURVEY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Inspector", Qt::CaseInsensitive) == 0) {
        m_value = eField_eContactType::INSPECTOR;
        m_value_isSet = m_value_isValid = true;
    }
}

void Field_eContactType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString Field_eContactType::asJson() const {
    
    QString val;
    switch (m_value){
        case eField_eContactType::AGENT:
            val = "Agent";
            break;
        case eField_eContactType::ASSISTANT:
            val = "Assistant";
            break;
        case eField_eContactType::BANKACCOUNT:
            val = "BankAccount";
            break;
        case eField_eContactType::BORROWER:
            val = "Borrower";
            break;
        case eField_eContactType::BUYER:
            val = "Buyer";
            break;
        case eField_eContactType::COMPANY:
            val = "Company";
            break;
        case eField_eContactType::CONTRACTCREATOR:
            val = "ContractCreator";
            break;
        case eField_eContactType::CREDITCARDMERCHANT:
            val = "Creditcardmerchant";
            break;
        case eField_eContactType::CUSTOMER:
            val = "Customer";
            break;
        case eField_eContactType::DEPOSITRECEIPT:
            val = "Depositreceipt";
            break;
        case eField_eContactType::EMPLOYEE:
            val = "Employee";
            break;
        case eField_eContactType::EXTERNALBROKER:
            val = "ExternalBroker";
            break;
        case eField_eContactType::EZSIGNSIGNER:
            val = "EzsignSigner";
            break;
        case eField_eContactType::EZSIGNUSER:
            val = "EzsignUser";
            break;
        case eField_eContactType::EZCOMAGENT:
            val = "EzcomAgent";
            break;
        case eField_eContactType::EZCOMAPPROVER:
            val = "EzcomApprover";
            break;
        case eField_eContactType::FINANCIALINSTITUTION:
            val = "FinancialInstitution";
            break;
        case eField_eContactType::FRANCHISEBROKER:
            val = "FranchiseBroker";
            break;
        case eField_eContactType::FRANCHISEFRANCHISECONTACT:
            val = "Franchisefranchisecontact";
            break;
        case eField_eContactType::FRANCHISEFRANCHISESIGNATORY:
            val = "Franchisefranchisesignatory";
            break;
        case eField_eContactType::FRANCHISEOFFICEBROKER:
            val = "FranchiseOfficeBroker";
            break;
        case eField_eContactType::FRANCHISECOMPANY:
            val = "FranchiseCompany";
            break;
        case eField_eContactType::FRANCHISEOWNER:
            val = "FranchiseOwner";
            break;
        case eField_eContactType::LEAD:
            val = "Lead";
            break;
        case eField_eContactType::MARKETINGCAMPAIGNSAMPLE:
            val = "MarketingCampaignSample";
            break;
        case eField_eContactType::NOTARY:
            val = "Notary";
            break;
        case eField_eContactType::PAYER:
            val = "Payer";
            break;
        case eField_eContactType::PETOWNER:
            val = "Petowner";
            break;
        case eField_eContactType::PRIVATETO:
            val = "PrivateTo";
            break;
        case eField_eContactType::REWARDMEMBER:
            val = "RewardMember";
            break;
        case eField_eContactType::REWARDREPRESENTATIVE:
            val = "RewardRepresentative";
            break;
        case eField_eContactType::SELLER:
            val = "Seller";
            break;
        case eField_eContactType::SHARED:
            val = "Shared";
            break;
        case eField_eContactType::SUPPLIER:
            val = "Supplier";
            break;
        case eField_eContactType::SURVEY:
            val = "Survey";
            break;
        case eField_eContactType::INSPECTOR:
            val = "Inspector";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue Field_eContactType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


Field_eContactType::eField_eContactType Field_eContactType::getValue() const {
    return m_value;
}

void Field_eContactType::setValue(const Field_eContactType::eField_eContactType& value){
    m_value = value;
    m_value_isSet = true;
}
bool Field_eContactType::isSet() const {
    
    return m_value_isSet;
}

bool Field_eContactType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace Ezmaxapi
