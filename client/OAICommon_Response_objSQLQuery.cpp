/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommon_Response_objSQLQuery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommon_Response_objSQLQuery::OAICommon_Response_objSQLQuery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommon_Response_objSQLQuery::OAICommon_Response_objSQLQuery() {
    this->initializeModel();
}

OAICommon_Response_objSQLQuery::~OAICommon_Response_objSQLQuery() {}

void OAICommon_Response_objSQLQuery::initializeModel() {

    m_s_query_isSet = false;
    m_s_query_isValid = false;

    m_f_duration_isSet = false;
    m_f_duration_isValid = false;
}

void OAICommon_Response_objSQLQuery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommon_Response_objSQLQuery::fromJsonObject(QJsonObject json) {

    m_s_query_isValid = ::OpenAPI::fromJsonValue(s_query, json[QString("sQuery")]);
    m_s_query_isSet = !json[QString("sQuery")].isNull() && m_s_query_isValid;

    m_f_duration_isValid = ::OpenAPI::fromJsonValue(f_duration, json[QString("fDuration")]);
    m_f_duration_isSet = !json[QString("fDuration")].isNull() && m_f_duration_isValid;
}

QString OAICommon_Response_objSQLQuery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommon_Response_objSQLQuery::asJsonObject() const {
    QJsonObject obj;
    if (m_s_query_isSet) {
        obj.insert(QString("sQuery"), ::OpenAPI::toJsonValue(s_query));
    }
    if (m_f_duration_isSet) {
        obj.insert(QString("fDuration"), ::OpenAPI::toJsonValue(f_duration));
    }
    return obj;
}

QString OAICommon_Response_objSQLQuery::getSQuery() const {
    return s_query;
}
void OAICommon_Response_objSQLQuery::setSQuery(const QString &s_query) {
    this->s_query = s_query;
    this->m_s_query_isSet = true;
}

bool OAICommon_Response_objSQLQuery::is_s_query_Set() const{
    return m_s_query_isSet;
}

bool OAICommon_Response_objSQLQuery::is_s_query_Valid() const{
    return m_s_query_isValid;
}

float OAICommon_Response_objSQLQuery::getFDuration() const {
    return f_duration;
}
void OAICommon_Response_objSQLQuery::setFDuration(const float &f_duration) {
    this->f_duration = f_duration;
    this->m_f_duration_isSet = true;
}

bool OAICommon_Response_objSQLQuery::is_f_duration_Set() const{
    return m_f_duration_isSet;
}

bool OAICommon_Response_objSQLQuery::is_f_duration_Valid() const{
    return m_f_duration_isValid;
}

bool OAICommon_Response_objSQLQuery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_query_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_f_duration_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommon_Response_objSQLQuery::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_query_isValid && m_f_duration_isValid && true;
}

} // namespace OpenAPI
