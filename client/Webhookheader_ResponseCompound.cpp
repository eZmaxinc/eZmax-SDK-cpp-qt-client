/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Webhookheader_ResponseCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Webhookheader_ResponseCompound::Webhookheader_ResponseCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Webhookheader_ResponseCompound::Webhookheader_ResponseCompound() {
    this->initializeModel();
}

Webhookheader_ResponseCompound::~Webhookheader_ResponseCompound() {}

void Webhookheader_ResponseCompound::initializeModel() {

    m_pki_webhookheader_id_isSet = false;
    m_pki_webhookheader_id_isValid = false;

    m_fki_webhook_id_isSet = false;
    m_fki_webhook_id_isValid = false;

    m_s_webhookheader_name_isSet = false;
    m_s_webhookheader_name_isValid = false;

    m_s_webhookheader_value_isSet = false;
    m_s_webhookheader_value_isValid = false;
}

void Webhookheader_ResponseCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Webhookheader_ResponseCompound::fromJsonObject(QJsonObject json) {

    m_pki_webhookheader_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_webhookheader_id, json[QString("pkiWebhookheaderID")]);
    m_pki_webhookheader_id_isSet = !json[QString("pkiWebhookheaderID")].isNull() && m_pki_webhookheader_id_isValid;

    m_fki_webhook_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_webhook_id, json[QString("fkiWebhookID")]);
    m_fki_webhook_id_isSet = !json[QString("fkiWebhookID")].isNull() && m_fki_webhook_id_isValid;

    m_s_webhookheader_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_webhookheader_name, json[QString("sWebhookheaderName")]);
    m_s_webhookheader_name_isSet = !json[QString("sWebhookheaderName")].isNull() && m_s_webhookheader_name_isValid;

    m_s_webhookheader_value_isValid = ::Ezmaxapi::fromJsonValue(m_s_webhookheader_value, json[QString("sWebhookheaderValue")]);
    m_s_webhookheader_value_isSet = !json[QString("sWebhookheaderValue")].isNull() && m_s_webhookheader_value_isValid;
}

QString Webhookheader_ResponseCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Webhookheader_ResponseCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_webhookheader_id_isSet) {
        obj.insert(QString("pkiWebhookheaderID"), ::Ezmaxapi::toJsonValue(m_pki_webhookheader_id));
    }
    if (m_fki_webhook_id_isSet) {
        obj.insert(QString("fkiWebhookID"), ::Ezmaxapi::toJsonValue(m_fki_webhook_id));
    }
    if (m_s_webhookheader_name_isSet) {
        obj.insert(QString("sWebhookheaderName"), ::Ezmaxapi::toJsonValue(m_s_webhookheader_name));
    }
    if (m_s_webhookheader_value_isSet) {
        obj.insert(QString("sWebhookheaderValue"), ::Ezmaxapi::toJsonValue(m_s_webhookheader_value));
    }
    return obj;
}

qint32 Webhookheader_ResponseCompound::getPkiWebhookheaderId() const {
    return m_pki_webhookheader_id;
}
void Webhookheader_ResponseCompound::setPkiWebhookheaderId(const qint32 &pki_webhookheader_id) {
    m_pki_webhookheader_id = pki_webhookheader_id;
    m_pki_webhookheader_id_isSet = true;
}

bool Webhookheader_ResponseCompound::is_pki_webhookheader_id_Set() const{
    return m_pki_webhookheader_id_isSet;
}

bool Webhookheader_ResponseCompound::is_pki_webhookheader_id_Valid() const{
    return m_pki_webhookheader_id_isValid;
}

qint32 Webhookheader_ResponseCompound::getFkiWebhookId() const {
    return m_fki_webhook_id;
}
void Webhookheader_ResponseCompound::setFkiWebhookId(const qint32 &fki_webhook_id) {
    m_fki_webhook_id = fki_webhook_id;
    m_fki_webhook_id_isSet = true;
}

bool Webhookheader_ResponseCompound::is_fki_webhook_id_Set() const{
    return m_fki_webhook_id_isSet;
}

bool Webhookheader_ResponseCompound::is_fki_webhook_id_Valid() const{
    return m_fki_webhook_id_isValid;
}

QString Webhookheader_ResponseCompound::getSWebhookheaderName() const {
    return m_s_webhookheader_name;
}
void Webhookheader_ResponseCompound::setSWebhookheaderName(const QString &s_webhookheader_name) {
    m_s_webhookheader_name = s_webhookheader_name;
    m_s_webhookheader_name_isSet = true;
}

bool Webhookheader_ResponseCompound::is_s_webhookheader_name_Set() const{
    return m_s_webhookheader_name_isSet;
}

bool Webhookheader_ResponseCompound::is_s_webhookheader_name_Valid() const{
    return m_s_webhookheader_name_isValid;
}

QString Webhookheader_ResponseCompound::getSWebhookheaderValue() const {
    return m_s_webhookheader_value;
}
void Webhookheader_ResponseCompound::setSWebhookheaderValue(const QString &s_webhookheader_value) {
    m_s_webhookheader_value = s_webhookheader_value;
    m_s_webhookheader_value_isSet = true;
}

bool Webhookheader_ResponseCompound::is_s_webhookheader_value_Set() const{
    return m_s_webhookheader_value_isSet;
}

bool Webhookheader_ResponseCompound::is_s_webhookheader_value_Valid() const{
    return m_s_webhookheader_value_isValid;
}

bool Webhookheader_ResponseCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_webhookheader_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_webhook_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_webhookheader_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_webhookheader_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Webhookheader_ResponseCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_webhookheader_id_isValid && m_fki_webhook_id_isValid && m_s_webhookheader_name_isValid && m_s_webhookheader_value_isValid && true;
}

} // namespace Ezmaxapi
