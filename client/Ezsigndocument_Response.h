/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Ezsigndocument_Response.h
 *
 * An Ezsigndocument Object
 */

#ifndef Ezsigndocument_Response_H
#define Ezsigndocument_Response_H

#include <QJsonObject>

#include "Common_Audit.h"
#include "Field_eEzsigndocumentStep.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Common_Audit;

class Ezsigndocument_Response : public Object {
public:
    Ezsigndocument_Response();
    Ezsigndocument_Response(QString json);
    ~Ezsigndocument_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiEzsigndocumentId() const;
    void setPkiEzsigndocumentId(const qint32 &pki_ezsigndocument_id);
    bool is_pki_ezsigndocument_id_Set() const;
    bool is_pki_ezsigndocument_id_Valid() const;

    qint32 getFkiEzsignfolderId() const;
    void setFkiEzsignfolderId(const qint32 &fki_ezsignfolder_id);
    bool is_fki_ezsignfolder_id_Set() const;
    bool is_fki_ezsignfolder_id_Valid() const;

    qint32 getFkiEzsignfoldersignerassociationIdDeclinedtosign() const;
    void setFkiEzsignfoldersignerassociationIdDeclinedtosign(const qint32 &fki_ezsignfoldersignerassociation_id_declinedtosign);
    bool is_fki_ezsignfoldersignerassociation_id_declinedtosign_Set() const;
    bool is_fki_ezsignfoldersignerassociation_id_declinedtosign_Valid() const;

    QString getDtEzsigndocumentDuedate() const;
    void setDtEzsigndocumentDuedate(const QString &dt_ezsigndocument_duedate);
    bool is_dt_ezsigndocument_duedate_Set() const;
    bool is_dt_ezsigndocument_duedate_Valid() const;

    QString getDtEzsignformCompleted() const;
    void setDtEzsignformCompleted(const QString &dt_ezsignform_completed);
    bool is_dt_ezsignform_completed_Set() const;
    bool is_dt_ezsignform_completed_Valid() const;

    qint32 getFkiLanguageId() const;
    void setFkiLanguageId(const qint32 &fki_language_id);
    bool is_fki_language_id_Set() const;
    bool is_fki_language_id_Valid() const;

    QString getSEzsigndocumentName() const;
    void setSEzsigndocumentName(const QString &s_ezsigndocument_name);
    bool is_s_ezsigndocument_name_Set() const;
    bool is_s_ezsigndocument_name_Valid() const;

    Field_eEzsigndocumentStep getEEzsigndocumentStep() const;
    void setEEzsigndocumentStep(const Field_eEzsigndocumentStep &e_ezsigndocument_step);
    bool is_e_ezsigndocument_step_Set() const;
    bool is_e_ezsigndocument_step_Valid() const;

    QString getDtEzsigndocumentFirstsend() const;
    void setDtEzsigndocumentFirstsend(const QString &dt_ezsigndocument_firstsend);
    bool is_dt_ezsigndocument_firstsend_Set() const;
    bool is_dt_ezsigndocument_firstsend_Valid() const;

    QString getDtEzsigndocumentLastsend() const;
    void setDtEzsigndocumentLastsend(const QString &dt_ezsigndocument_lastsend);
    bool is_dt_ezsigndocument_lastsend_Set() const;
    bool is_dt_ezsigndocument_lastsend_Valid() const;

    qint32 getIEzsigndocumentOrder() const;
    void setIEzsigndocumentOrder(const qint32 &i_ezsigndocument_order);
    bool is_i_ezsigndocument_order_Set() const;
    bool is_i_ezsigndocument_order_Valid() const;

    qint32 getIEzsigndocumentPagetotal() const;
    void setIEzsigndocumentPagetotal(const qint32 &i_ezsigndocument_pagetotal);
    bool is_i_ezsigndocument_pagetotal_Set() const;
    bool is_i_ezsigndocument_pagetotal_Valid() const;

    qint32 getIEzsigndocumentSignaturesigned() const;
    void setIEzsigndocumentSignaturesigned(const qint32 &i_ezsigndocument_signaturesigned);
    bool is_i_ezsigndocument_signaturesigned_Set() const;
    bool is_i_ezsigndocument_signaturesigned_Valid() const;

    qint32 getIEzsigndocumentSignaturetotal() const;
    void setIEzsigndocumentSignaturetotal(const qint32 &i_ezsigndocument_signaturetotal);
    bool is_i_ezsigndocument_signaturetotal_Set() const;
    bool is_i_ezsigndocument_signaturetotal_Valid() const;

    QString getSEzsigndocumentMd5initial() const;
    void setSEzsigndocumentMd5initial(const QString &s_ezsigndocument_md5initial);
    bool is_s_ezsigndocument_md5initial_Set() const;
    bool is_s_ezsigndocument_md5initial_Valid() const;

    QString getTEzsigndocumentDeclinedtosignreason() const;
    void setTEzsigndocumentDeclinedtosignreason(const QString &t_ezsigndocument_declinedtosignreason);
    bool is_t_ezsigndocument_declinedtosignreason_Set() const;
    bool is_t_ezsigndocument_declinedtosignreason_Valid() const;

    QString getSEzsigndocumentMd5signed() const;
    void setSEzsigndocumentMd5signed(const QString &s_ezsigndocument_md5signed);
    bool is_s_ezsigndocument_md5signed_Set() const;
    bool is_s_ezsigndocument_md5signed_Valid() const;

    bool isBEzsigndocumentEzsignform() const;
    void setBEzsigndocumentEzsignform(const bool &b_ezsigndocument_ezsignform);
    bool is_b_ezsigndocument_ezsignform_Set() const;
    bool is_b_ezsigndocument_ezsignform_Valid() const;

    bool isBEzsigndocumentHassignedsignatures() const;
    void setBEzsigndocumentHassignedsignatures(const bool &b_ezsigndocument_hassignedsignatures);
    bool is_b_ezsigndocument_hassignedsignatures_Set() const;
    bool is_b_ezsigndocument_hassignedsignatures_Valid() const;

    Common_Audit getObjAudit() const;
    void setObjAudit(const Common_Audit &obj_audit);
    bool is_obj_audit_Set() const;
    bool is_obj_audit_Valid() const;

    QString getSEzsigndocumentExternalid() const;
    void setSEzsigndocumentExternalid(const QString &s_ezsigndocument_externalid);
    bool is_s_ezsigndocument_externalid_Set() const;
    bool is_s_ezsigndocument_externalid_Valid() const;

    qint32 getIEzsigndocumentEzsignsignatureattachmenttotal() const;
    void setIEzsigndocumentEzsignsignatureattachmenttotal(const qint32 &i_ezsigndocument_ezsignsignatureattachmenttotal);
    bool is_i_ezsigndocument_ezsignsignatureattachmenttotal_Set() const;
    bool is_i_ezsigndocument_ezsignsignatureattachmenttotal_Valid() const;

    qint32 getIEzsigndocumentEzsigndiscussiontotal() const;
    void setIEzsigndocumentEzsigndiscussiontotal(const qint32 &i_ezsigndocument_ezsigndiscussiontotal);
    bool is_i_ezsigndocument_ezsigndiscussiontotal_Set() const;
    bool is_i_ezsigndocument_ezsigndiscussiontotal_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_ezsigndocument_id;
    bool m_pki_ezsigndocument_id_isSet;
    bool m_pki_ezsigndocument_id_isValid;

    qint32 m_fki_ezsignfolder_id;
    bool m_fki_ezsignfolder_id_isSet;
    bool m_fki_ezsignfolder_id_isValid;

    qint32 m_fki_ezsignfoldersignerassociation_id_declinedtosign;
    bool m_fki_ezsignfoldersignerassociation_id_declinedtosign_isSet;
    bool m_fki_ezsignfoldersignerassociation_id_declinedtosign_isValid;

    QString m_dt_ezsigndocument_duedate;
    bool m_dt_ezsigndocument_duedate_isSet;
    bool m_dt_ezsigndocument_duedate_isValid;

    QString m_dt_ezsignform_completed;
    bool m_dt_ezsignform_completed_isSet;
    bool m_dt_ezsignform_completed_isValid;

    qint32 m_fki_language_id;
    bool m_fki_language_id_isSet;
    bool m_fki_language_id_isValid;

    QString m_s_ezsigndocument_name;
    bool m_s_ezsigndocument_name_isSet;
    bool m_s_ezsigndocument_name_isValid;

    Field_eEzsigndocumentStep m_e_ezsigndocument_step;
    bool m_e_ezsigndocument_step_isSet;
    bool m_e_ezsigndocument_step_isValid;

    QString m_dt_ezsigndocument_firstsend;
    bool m_dt_ezsigndocument_firstsend_isSet;
    bool m_dt_ezsigndocument_firstsend_isValid;

    QString m_dt_ezsigndocument_lastsend;
    bool m_dt_ezsigndocument_lastsend_isSet;
    bool m_dt_ezsigndocument_lastsend_isValid;

    qint32 m_i_ezsigndocument_order;
    bool m_i_ezsigndocument_order_isSet;
    bool m_i_ezsigndocument_order_isValid;

    qint32 m_i_ezsigndocument_pagetotal;
    bool m_i_ezsigndocument_pagetotal_isSet;
    bool m_i_ezsigndocument_pagetotal_isValid;

    qint32 m_i_ezsigndocument_signaturesigned;
    bool m_i_ezsigndocument_signaturesigned_isSet;
    bool m_i_ezsigndocument_signaturesigned_isValid;

    qint32 m_i_ezsigndocument_signaturetotal;
    bool m_i_ezsigndocument_signaturetotal_isSet;
    bool m_i_ezsigndocument_signaturetotal_isValid;

    QString m_s_ezsigndocument_md5initial;
    bool m_s_ezsigndocument_md5initial_isSet;
    bool m_s_ezsigndocument_md5initial_isValid;

    QString m_t_ezsigndocument_declinedtosignreason;
    bool m_t_ezsigndocument_declinedtosignreason_isSet;
    bool m_t_ezsigndocument_declinedtosignreason_isValid;

    QString m_s_ezsigndocument_md5signed;
    bool m_s_ezsigndocument_md5signed_isSet;
    bool m_s_ezsigndocument_md5signed_isValid;

    bool m_b_ezsigndocument_ezsignform;
    bool m_b_ezsigndocument_ezsignform_isSet;
    bool m_b_ezsigndocument_ezsignform_isValid;

    bool m_b_ezsigndocument_hassignedsignatures;
    bool m_b_ezsigndocument_hassignedsignatures_isSet;
    bool m_b_ezsigndocument_hassignedsignatures_isValid;

    Common_Audit m_obj_audit;
    bool m_obj_audit_isSet;
    bool m_obj_audit_isValid;

    QString m_s_ezsigndocument_externalid;
    bool m_s_ezsigndocument_externalid_isSet;
    bool m_s_ezsigndocument_externalid_isValid;

    qint32 m_i_ezsigndocument_ezsignsignatureattachmenttotal;
    bool m_i_ezsigndocument_ezsignsignatureattachmenttotal_isSet;
    bool m_i_ezsigndocument_ezsignsignatureattachmenttotal_isValid;

    qint32 m_i_ezsigndocument_ezsigndiscussiontotal;
    bool m_i_ezsigndocument_ezsigndiscussiontotal_isSet;
    bool m_i_ezsigndocument_ezsigndiscussiontotal_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Ezsigndocument_Response)

#endif // Ezsigndocument_Response_H
