/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace Ezmaxapi {

OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response() {
    this->initializeModel();
}

OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::~OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response() {}

void OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::initializeModel() {

    m_pki_ezsigndocument_id_isSet = false;
    m_pki_ezsigndocument_id_isValid = false;

    m_s_ezsigndocument_name_isSet = false;
    m_s_ezsigndocument_name_isValid = false;

    m_a_obj_ezsignsignature_isSet = false;
    m_a_obj_ezsignsignature_isValid = false;
}

void OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::fromJsonObject(QJsonObject json) {

    m_pki_ezsigndocument_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsigndocument_id, json[QString("pkiEzsigndocumentID")]);
    m_pki_ezsigndocument_id_isSet = !json[QString("pkiEzsigndocumentID")].isNull() && m_pki_ezsigndocument_id_isValid;

    m_s_ezsigndocument_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigndocument_name, json[QString("sEzsigndocumentName")]);
    m_s_ezsigndocument_name_isSet = !json[QString("sEzsigndocumentName")].isNull() && m_s_ezsigndocument_name_isValid;

    m_a_obj_ezsignsignature_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_ezsignsignature, json[QString("a_objEzsignsignature")]);
    m_a_obj_ezsignsignature_isSet = !json[QString("a_objEzsignsignature")].isNull() && m_a_obj_ezsignsignature_isValid;
}

QString OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsigndocument_id_isSet) {
        obj.insert(QString("pkiEzsigndocumentID"), ::Ezmaxapi::toJsonValue(m_pki_ezsigndocument_id));
    }
    if (m_s_ezsigndocument_name_isSet) {
        obj.insert(QString("sEzsigndocumentName"), ::Ezmaxapi::toJsonValue(m_s_ezsigndocument_name));
    }
    if (m_a_obj_ezsignsignature.size() > 0) {
        obj.insert(QString("a_objEzsignsignature"), ::Ezmaxapi::toJsonValue(m_a_obj_ezsignsignature));
    }
    return obj;
}

qint32 OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::getPkiEzsigndocumentId() const {
    return m_pki_ezsigndocument_id;
}
void OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::setPkiEzsigndocumentId(const qint32 &pki_ezsigndocument_id) {
    m_pki_ezsigndocument_id = pki_ezsigndocument_id;
    m_pki_ezsigndocument_id_isSet = true;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::is_pki_ezsigndocument_id_Set() const{
    return m_pki_ezsigndocument_id_isSet;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::is_pki_ezsigndocument_id_Valid() const{
    return m_pki_ezsigndocument_id_isValid;
}

QString OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::getSEzsigndocumentName() const {
    return m_s_ezsigndocument_name;
}
void OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::setSEzsigndocumentName(const QString &s_ezsigndocument_name) {
    m_s_ezsigndocument_name = s_ezsigndocument_name;
    m_s_ezsigndocument_name_isSet = true;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::is_s_ezsigndocument_name_Set() const{
    return m_s_ezsigndocument_name_isSet;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::is_s_ezsigndocument_name_Valid() const{
    return m_s_ezsigndocument_name_isValid;
}

QList<OAICustom_EzsignsignatureEzsignsignaturesAutomatic_Response> OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::getAObjEzsignsignature() const {
    return m_a_obj_ezsignsignature;
}
void OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::setAObjEzsignsignature(const QList<OAICustom_EzsignsignatureEzsignsignaturesAutomatic_Response> &a_obj_ezsignsignature) {
    m_a_obj_ezsignsignature = a_obj_ezsignsignature;
    m_a_obj_ezsignsignature_isSet = true;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::is_a_obj_ezsignsignature_Set() const{
    return m_a_obj_ezsignsignature_isSet;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::is_a_obj_ezsignsignature_Valid() const{
    return m_a_obj_ezsignsignature_isValid;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsigndocument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigndocument_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_ezsignsignature.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustom_EzsigndocumentEzsignsignaturesAutomatic_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezsigndocument_id_isValid && m_s_ezsigndocument_name_isValid && m_a_obj_ezsignsignature_isValid && true;
}

} // namespace Ezmaxapi
