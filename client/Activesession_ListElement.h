/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Activesession_ListElement.h
 *
 * A Activesession List Element
 */

#ifndef Activesession_ListElement_H
#define Activesession_ListElement_H

#include <QJsonObject>

#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Activesession_ListElement : public Object {
public:
    Activesession_ListElement();
    Activesession_ListElement(QString json);
    ~Activesession_ListElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiActivesessionId() const;
    void setPkiActivesessionId(const qint32 &pki_activesession_id);
    bool is_pki_activesession_id_Set() const;
    bool is_pki_activesession_id_Valid() const;

    qint32 getFkiUserId() const;
    void setFkiUserId(const qint32 &fki_user_id);
    bool is_fki_user_id_Set() const;
    bool is_fki_user_id_Valid() const;

    qint32 getFkiComputerId() const;
    void setFkiComputerId(const qint32 &fki_computer_id);
    bool is_fki_computer_id_Set() const;
    bool is_fki_computer_id_Valid() const;

    qint32 getFkiCompanyId() const;
    void setFkiCompanyId(const qint32 &fki_company_id);
    bool is_fki_company_id_Set() const;
    bool is_fki_company_id_Valid() const;

    qint32 getFkiDepartmentId() const;
    void setFkiDepartmentId(const qint32 &fki_department_id);
    bool is_fki_department_id_Set() const;
    bool is_fki_department_id_Valid() const;

    QString getSCompanyNameX() const;
    void setSCompanyNameX(const QString &s_company_name_x);
    bool is_s_company_name_x_Set() const;
    bool is_s_company_name_x_Valid() const;

    QString getSDepartmentNameX() const;
    void setSDepartmentNameX(const QString &s_department_name_x);
    bool is_s_department_name_x_Set() const;
    bool is_s_department_name_x_Valid() const;

    QString getSActivesessionLoginname() const;
    void setSActivesessionLoginname(const QString &s_activesession_loginname);
    bool is_s_activesession_loginname_Set() const;
    bool is_s_activesession_loginname_Valid() const;

    QString getSComputerDescription() const;
    void setSComputerDescription(const QString &s_computer_description);
    bool is_s_computer_description_Set() const;
    bool is_s_computer_description_Valid() const;

    QString getDtActivesessionFirsthit() const;
    void setDtActivesessionFirsthit(const QString &dt_activesession_firsthit);
    bool is_dt_activesession_firsthit_Set() const;
    bool is_dt_activesession_firsthit_Valid() const;

    QString getDtActivesessionLasthit() const;
    void setDtActivesessionLasthit(const QString &dt_activesession_lasthit);
    bool is_dt_activesession_lasthit_Set() const;
    bool is_dt_activesession_lasthit_Valid() const;

    QString getSActivesessionIp() const;
    void setSActivesessionIp(const QString &s_activesession_ip);
    bool is_s_activesession_ip_Set() const;
    bool is_s_activesession_ip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_activesession_id;
    bool m_pki_activesession_id_isSet;
    bool m_pki_activesession_id_isValid;

    qint32 m_fki_user_id;
    bool m_fki_user_id_isSet;
    bool m_fki_user_id_isValid;

    qint32 m_fki_computer_id;
    bool m_fki_computer_id_isSet;
    bool m_fki_computer_id_isValid;

    qint32 m_fki_company_id;
    bool m_fki_company_id_isSet;
    bool m_fki_company_id_isValid;

    qint32 m_fki_department_id;
    bool m_fki_department_id_isSet;
    bool m_fki_department_id_isValid;

    QString m_s_company_name_x;
    bool m_s_company_name_x_isSet;
    bool m_s_company_name_x_isValid;

    QString m_s_department_name_x;
    bool m_s_department_name_x_isSet;
    bool m_s_department_name_x_isValid;

    QString m_s_activesession_loginname;
    bool m_s_activesession_loginname_isSet;
    bool m_s_activesession_loginname_isValid;

    QString m_s_computer_description;
    bool m_s_computer_description_isSet;
    bool m_s_computer_description_isValid;

    QString m_dt_activesession_firsthit;
    bool m_dt_activesession_firsthit_isSet;
    bool m_dt_activesession_firsthit_isValid;

    QString m_dt_activesession_lasthit;
    bool m_dt_activesession_lasthit_isSet;
    bool m_dt_activesession_lasthit_isValid;

    QString m_s_activesession_ip;
    bool m_s_activesession_ip_isSet;
    bool m_s_activesession_ip_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Activesession_ListElement)

#endif // Activesession_ListElement_H
