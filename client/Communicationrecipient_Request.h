/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Communicationrecipient_Request.h
 *
 * A Communicationrecipient Object
 */

#ifndef Communicationrecipient_Request_H
#define Communicationrecipient_Request_H

#include <QJsonObject>

#include "Field_eCommunicationrecipientType.h"

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Communicationrecipient_Request : public Object {
public:
    Communicationrecipient_Request();
    Communicationrecipient_Request(QString json);
    ~Communicationrecipient_Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiCommunicationrecipientId() const;
    void setPkiCommunicationrecipientId(const qint32 &pki_communicationrecipient_id);
    bool is_pki_communicationrecipient_id_Set() const;
    bool is_pki_communicationrecipient_id_Valid() const;

    qint32 getFkiAgentId() const;
    void setFkiAgentId(const qint32 &fki_agent_id);
    bool is_fki_agent_id_Set() const;
    bool is_fki_agent_id_Valid() const;

    qint32 getFkiAgentincorporationId() const;
    void setFkiAgentincorporationId(const qint32 &fki_agentincorporation_id);
    bool is_fki_agentincorporation_id_Set() const;
    bool is_fki_agentincorporation_id_Valid() const;

    qint32 getFkiBrokerId() const;
    void setFkiBrokerId(const qint32 &fki_broker_id);
    bool is_fki_broker_id_Set() const;
    bool is_fki_broker_id_Valid() const;

    qint32 getFkiCustomerId() const;
    void setFkiCustomerId(const qint32 &fki_customer_id);
    bool is_fki_customer_id_Set() const;
    bool is_fki_customer_id_Valid() const;

    qint32 getFkiEmployeeId() const;
    void setFkiEmployeeId(const qint32 &fki_employee_id);
    bool is_fki_employee_id_Set() const;
    bool is_fki_employee_id_Valid() const;

    qint32 getFkiAssistantId() const;
    void setFkiAssistantId(const qint32 &fki_assistant_id);
    bool is_fki_assistant_id_Set() const;
    bool is_fki_assistant_id_Valid() const;

    qint32 getFkiExternalbrokerId() const;
    void setFkiExternalbrokerId(const qint32 &fki_externalbroker_id);
    bool is_fki_externalbroker_id_Set() const;
    bool is_fki_externalbroker_id_Valid() const;

    qint32 getFkiEzsignsignerId() const;
    void setFkiEzsignsignerId(const qint32 &fki_ezsignsigner_id);
    bool is_fki_ezsignsigner_id_Set() const;
    bool is_fki_ezsignsigner_id_Valid() const;

    qint32 getFkiNotaryId() const;
    void setFkiNotaryId(const qint32 &fki_notary_id);
    bool is_fki_notary_id_Set() const;
    bool is_fki_notary_id_Valid() const;

    qint32 getFkiSupplierId() const;
    void setFkiSupplierId(const qint32 &fki_supplier_id);
    bool is_fki_supplier_id_Set() const;
    bool is_fki_supplier_id_Valid() const;

    qint32 getFkiUserId() const;
    void setFkiUserId(const qint32 &fki_user_id);
    bool is_fki_user_id_Set() const;
    bool is_fki_user_id_Valid() const;

    Field_eCommunicationrecipientType getECommunicationrecipientType() const;
    void setECommunicationrecipientType(const Field_eCommunicationrecipientType &e_communicationrecipient_type);
    bool is_e_communicationrecipient_type_Set() const;
    bool is_e_communicationrecipient_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_communicationrecipient_id;
    bool m_pki_communicationrecipient_id_isSet;
    bool m_pki_communicationrecipient_id_isValid;

    qint32 m_fki_agent_id;
    bool m_fki_agent_id_isSet;
    bool m_fki_agent_id_isValid;

    qint32 m_fki_agentincorporation_id;
    bool m_fki_agentincorporation_id_isSet;
    bool m_fki_agentincorporation_id_isValid;

    qint32 m_fki_broker_id;
    bool m_fki_broker_id_isSet;
    bool m_fki_broker_id_isValid;

    qint32 m_fki_customer_id;
    bool m_fki_customer_id_isSet;
    bool m_fki_customer_id_isValid;

    qint32 m_fki_employee_id;
    bool m_fki_employee_id_isSet;
    bool m_fki_employee_id_isValid;

    qint32 m_fki_assistant_id;
    bool m_fki_assistant_id_isSet;
    bool m_fki_assistant_id_isValid;

    qint32 m_fki_externalbroker_id;
    bool m_fki_externalbroker_id_isSet;
    bool m_fki_externalbroker_id_isValid;

    qint32 m_fki_ezsignsigner_id;
    bool m_fki_ezsignsigner_id_isSet;
    bool m_fki_ezsignsigner_id_isValid;

    qint32 m_fki_notary_id;
    bool m_fki_notary_id_isSet;
    bool m_fki_notary_id_isValid;

    qint32 m_fki_supplier_id;
    bool m_fki_supplier_id_isSet;
    bool m_fki_supplier_id_isValid;

    qint32 m_fki_user_id;
    bool m_fki_user_id_isSet;
    bool m_fki_user_id_isValid;

    Field_eCommunicationrecipientType m_e_communicationrecipient_type;
    bool m_e_communicationrecipient_type_isSet;
    bool m_e_communicationrecipient_type_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Communicationrecipient_Request)

#endif // Communicationrecipient_Request_H
