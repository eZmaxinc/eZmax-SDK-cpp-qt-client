/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Enum_ReportdataType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Enum_ReportdataType::Enum_ReportdataType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Enum_ReportdataType::Enum_ReportdataType() {
    this->initializeModel();
}

Enum_ReportdataType::~Enum_ReportdataType() {}

void Enum_ReportdataType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eEnum_ReportdataType::INVALID_VALUE_OPENAPI_GENERATED;
}

void Enum_ReportdataType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Date", Qt::CaseInsensitive) == 0) {
        m_value = eEnum_ReportdataType::DATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Money", Qt::CaseInsensitive) == 0) {
        m_value = eEnum_ReportdataType::MONEY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Number", Qt::CaseInsensitive) == 0) {
        m_value = eEnum_ReportdataType::NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Percentage", Qt::CaseInsensitive) == 0) {
        m_value = eEnum_ReportdataType::PERCENTAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Period", Qt::CaseInsensitive) == 0) {
        m_value = eEnum_ReportdataType::PERIOD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("String", Qt::CaseInsensitive) == 0) {
        m_value = eEnum_ReportdataType::STRING;
        m_value_isSet = m_value_isValid = true;
    }
}

void Enum_ReportdataType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString Enum_ReportdataType::asJson() const {
    
    QString val;
    switch (m_value){
        case eEnum_ReportdataType::DATE:
            val = "Date";
            break;
        case eEnum_ReportdataType::MONEY:
            val = "Money";
            break;
        case eEnum_ReportdataType::NUMBER:
            val = "Number";
            break;
        case eEnum_ReportdataType::PERCENTAGE:
            val = "Percentage";
            break;
        case eEnum_ReportdataType::PERIOD:
            val = "Period";
            break;
        case eEnum_ReportdataType::STRING:
            val = "String";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue Enum_ReportdataType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


Enum_ReportdataType::eEnum_ReportdataType Enum_ReportdataType::getValue() const {
    return m_value;
}

void Enum_ReportdataType::setValue(const Enum_ReportdataType::eEnum_ReportdataType& value){
    m_value = value;
    m_value_isSet = true;
}
bool Enum_ReportdataType::isSet() const {
    
    return m_value_isSet;
}

bool Enum_ReportdataType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace Ezmaxapi
