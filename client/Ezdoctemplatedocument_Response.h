/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Ezdoctemplatedocument_Response.h
 *
 * A Ezdoctemplatedocument Object
 */

#ifndef Ezdoctemplatedocument_Response_H
#define Ezdoctemplatedocument_Response_H

#include <QJsonObject>

#include "Field_eEzdoctemplatedocumentPrivacylevel.h"
#include "Multilingual_EzdoctemplatedocumentName.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Multilingual_EzdoctemplatedocumentName;

class Ezdoctemplatedocument_Response : public Object {
public:
    Ezdoctemplatedocument_Response();
    Ezdoctemplatedocument_Response(QString json);
    ~Ezdoctemplatedocument_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiEzdoctemplatedocumentId() const;
    void setPkiEzdoctemplatedocumentId(const qint32 &pki_ezdoctemplatedocument_id);
    bool is_pki_ezdoctemplatedocument_id_Set() const;
    bool is_pki_ezdoctemplatedocument_id_Valid() const;

    qint32 getFkiLanguageId() const;
    void setFkiLanguageId(const qint32 &fki_language_id);
    bool is_fki_language_id_Set() const;
    bool is_fki_language_id_Valid() const;

    qint32 getFkiEzsignfoldertypeId() const;
    void setFkiEzsignfoldertypeId(const qint32 &fki_ezsignfoldertype_id);
    bool is_fki_ezsignfoldertype_id_Set() const;
    bool is_fki_ezsignfoldertype_id_Valid() const;

    qint32 getFkiEzdoctemplatetypeId() const;
    void setFkiEzdoctemplatetypeId(const qint32 &fki_ezdoctemplatetype_id);
    bool is_fki_ezdoctemplatetype_id_Set() const;
    bool is_fki_ezdoctemplatetype_id_Valid() const;

    qint32 getFkiEzdoctemplatefieldtypecategoryId() const;
    void setFkiEzdoctemplatefieldtypecategoryId(const qint32 &fki_ezdoctemplatefieldtypecategory_id);
    bool is_fki_ezdoctemplatefieldtypecategory_id_Set() const;
    bool is_fki_ezdoctemplatefieldtypecategory_id_Valid() const;

    Field_eEzdoctemplatedocumentPrivacylevel getEEzdoctemplatedocumentPrivacylevel() const;
    void setEEzdoctemplatedocumentPrivacylevel(const Field_eEzdoctemplatedocumentPrivacylevel &e_ezdoctemplatedocument_privacylevel);
    bool is_e_ezdoctemplatedocument_privacylevel_Set() const;
    bool is_e_ezdoctemplatedocument_privacylevel_Valid() const;

    bool isBEzdoctemplatedocumentIsactive() const;
    void setBEzdoctemplatedocumentIsactive(const bool &b_ezdoctemplatedocument_isactive);
    bool is_b_ezdoctemplatedocument_isactive_Set() const;
    bool is_b_ezdoctemplatedocument_isactive_Valid() const;

    Multilingual_EzdoctemplatedocumentName getObjEzdoctemplatedocumentName() const;
    void setObjEzdoctemplatedocumentName(const Multilingual_EzdoctemplatedocumentName &obj_ezdoctemplatedocument_name);
    bool is_obj_ezdoctemplatedocument_name_Set() const;
    bool is_obj_ezdoctemplatedocument_name_Valid() const;

    QString getSEzdoctemplatedocumentNameX() const;
    void setSEzdoctemplatedocumentNameX(const QString &s_ezdoctemplatedocument_name_x);
    bool is_s_ezdoctemplatedocument_name_x_Set() const;
    bool is_s_ezdoctemplatedocument_name_x_Valid() const;

    QString getSEzsignfoldertypeNameX() const;
    void setSEzsignfoldertypeNameX(const QString &s_ezsignfoldertype_name_x);
    bool is_s_ezsignfoldertype_name_x_Set() const;
    bool is_s_ezsignfoldertype_name_x_Valid() const;

    QString getSEzdoctemplatefieldtypecategoryDescriptionX() const;
    void setSEzdoctemplatefieldtypecategoryDescriptionX(const QString &s_ezdoctemplatefieldtypecategory_description_x);
    bool is_s_ezdoctemplatefieldtypecategory_description_x_Set() const;
    bool is_s_ezdoctemplatefieldtypecategory_description_x_Valid() const;

    QString getSEzdoctemplatetypeDescriptionX() const;
    void setSEzdoctemplatetypeDescriptionX(const QString &s_ezdoctemplatetype_description_x);
    bool is_s_ezdoctemplatetype_description_x_Set() const;
    bool is_s_ezdoctemplatetype_description_x_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_ezdoctemplatedocument_id;
    bool m_pki_ezdoctemplatedocument_id_isSet;
    bool m_pki_ezdoctemplatedocument_id_isValid;

    qint32 m_fki_language_id;
    bool m_fki_language_id_isSet;
    bool m_fki_language_id_isValid;

    qint32 m_fki_ezsignfoldertype_id;
    bool m_fki_ezsignfoldertype_id_isSet;
    bool m_fki_ezsignfoldertype_id_isValid;

    qint32 m_fki_ezdoctemplatetype_id;
    bool m_fki_ezdoctemplatetype_id_isSet;
    bool m_fki_ezdoctemplatetype_id_isValid;

    qint32 m_fki_ezdoctemplatefieldtypecategory_id;
    bool m_fki_ezdoctemplatefieldtypecategory_id_isSet;
    bool m_fki_ezdoctemplatefieldtypecategory_id_isValid;

    Field_eEzdoctemplatedocumentPrivacylevel m_e_ezdoctemplatedocument_privacylevel;
    bool m_e_ezdoctemplatedocument_privacylevel_isSet;
    bool m_e_ezdoctemplatedocument_privacylevel_isValid;

    bool m_b_ezdoctemplatedocument_isactive;
    bool m_b_ezdoctemplatedocument_isactive_isSet;
    bool m_b_ezdoctemplatedocument_isactive_isValid;

    Multilingual_EzdoctemplatedocumentName m_obj_ezdoctemplatedocument_name;
    bool m_obj_ezdoctemplatedocument_name_isSet;
    bool m_obj_ezdoctemplatedocument_name_isValid;

    QString m_s_ezdoctemplatedocument_name_x;
    bool m_s_ezdoctemplatedocument_name_x_isSet;
    bool m_s_ezdoctemplatedocument_name_x_isValid;

    QString m_s_ezsignfoldertype_name_x;
    bool m_s_ezsignfoldertype_name_x_isSet;
    bool m_s_ezsignfoldertype_name_x_isValid;

    QString m_s_ezdoctemplatefieldtypecategory_description_x;
    bool m_s_ezdoctemplatefieldtypecategory_description_x_isSet;
    bool m_s_ezdoctemplatefieldtypecategory_description_x_isValid;

    QString m_s_ezdoctemplatetype_description_x;
    bool m_s_ezdoctemplatetype_description_x_isSet;
    bool m_s_ezdoctemplatetype_description_x_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Ezdoctemplatedocument_Response)

#endif // Ezdoctemplatedocument_Response_H
