/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezdoctemplatedocument_RequestPatch.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezdoctemplatedocument_RequestPatch::Ezdoctemplatedocument_RequestPatch(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezdoctemplatedocument_RequestPatch::Ezdoctemplatedocument_RequestPatch() {
    this->initializeModel();
}

Ezdoctemplatedocument_RequestPatch::~Ezdoctemplatedocument_RequestPatch() {}

void Ezdoctemplatedocument_RequestPatch::initializeModel() {

    m_e_ezdoctemplatedocument_format_isSet = false;
    m_e_ezdoctemplatedocument_format_isValid = false;

    m_s_ezdoctemplatedocument_fields_isSet = false;
    m_s_ezdoctemplatedocument_fields_isValid = false;

    m_s_ezdoctemplatedocument_base64_isSet = false;
    m_s_ezdoctemplatedocument_base64_isValid = false;
}

void Ezdoctemplatedocument_RequestPatch::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezdoctemplatedocument_RequestPatch::fromJsonObject(QJsonObject json) {

    m_e_ezdoctemplatedocument_format_isValid = ::Ezmaxapi::fromJsonValue(m_e_ezdoctemplatedocument_format, json[QString("eEzdoctemplatedocumentFormat")]);
    m_e_ezdoctemplatedocument_format_isSet = !json[QString("eEzdoctemplatedocumentFormat")].isNull() && m_e_ezdoctemplatedocument_format_isValid;

    m_s_ezdoctemplatedocument_fields_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezdoctemplatedocument_fields, json[QString("sEzdoctemplatedocumentFields")]);
    m_s_ezdoctemplatedocument_fields_isSet = !json[QString("sEzdoctemplatedocumentFields")].isNull() && m_s_ezdoctemplatedocument_fields_isValid;

    m_s_ezdoctemplatedocument_base64_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezdoctemplatedocument_base64, json[QString("sEzdoctemplatedocumentBase64")]);
    m_s_ezdoctemplatedocument_base64_isSet = !json[QString("sEzdoctemplatedocumentBase64")].isNull() && m_s_ezdoctemplatedocument_base64_isValid;
}

QString Ezdoctemplatedocument_RequestPatch::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezdoctemplatedocument_RequestPatch::asJsonObject() const {
    QJsonObject obj;
    if (m_e_ezdoctemplatedocument_format_isSet) {
        obj.insert(QString("eEzdoctemplatedocumentFormat"), ::Ezmaxapi::toJsonValue(m_e_ezdoctemplatedocument_format));
    }
    if (m_s_ezdoctemplatedocument_fields_isSet) {
        obj.insert(QString("sEzdoctemplatedocumentFields"), ::Ezmaxapi::toJsonValue(m_s_ezdoctemplatedocument_fields));
    }
    if (m_s_ezdoctemplatedocument_base64_isSet) {
        obj.insert(QString("sEzdoctemplatedocumentBase64"), ::Ezmaxapi::toJsonValue(m_s_ezdoctemplatedocument_base64));
    }
    return obj;
}

QString Ezdoctemplatedocument_RequestPatch::getEEzdoctemplatedocumentFormat() const {
    return m_e_ezdoctemplatedocument_format;
}
void Ezdoctemplatedocument_RequestPatch::setEEzdoctemplatedocumentFormat(const QString &e_ezdoctemplatedocument_format) {
    m_e_ezdoctemplatedocument_format = e_ezdoctemplatedocument_format;
    m_e_ezdoctemplatedocument_format_isSet = true;
}

bool Ezdoctemplatedocument_RequestPatch::is_e_ezdoctemplatedocument_format_Set() const{
    return m_e_ezdoctemplatedocument_format_isSet;
}

bool Ezdoctemplatedocument_RequestPatch::is_e_ezdoctemplatedocument_format_Valid() const{
    return m_e_ezdoctemplatedocument_format_isValid;
}

QString Ezdoctemplatedocument_RequestPatch::getSEzdoctemplatedocumentFields() const {
    return m_s_ezdoctemplatedocument_fields;
}
void Ezdoctemplatedocument_RequestPatch::setSEzdoctemplatedocumentFields(const QString &s_ezdoctemplatedocument_fields) {
    m_s_ezdoctemplatedocument_fields = s_ezdoctemplatedocument_fields;
    m_s_ezdoctemplatedocument_fields_isSet = true;
}

bool Ezdoctemplatedocument_RequestPatch::is_s_ezdoctemplatedocument_fields_Set() const{
    return m_s_ezdoctemplatedocument_fields_isSet;
}

bool Ezdoctemplatedocument_RequestPatch::is_s_ezdoctemplatedocument_fields_Valid() const{
    return m_s_ezdoctemplatedocument_fields_isValid;
}

QByteArray Ezdoctemplatedocument_RequestPatch::getSEzdoctemplatedocumentBase64() const {
    return m_s_ezdoctemplatedocument_base64;
}
void Ezdoctemplatedocument_RequestPatch::setSEzdoctemplatedocumentBase64(const QByteArray &s_ezdoctemplatedocument_base64) {
    m_s_ezdoctemplatedocument_base64 = s_ezdoctemplatedocument_base64;
    m_s_ezdoctemplatedocument_base64_isSet = true;
}

bool Ezdoctemplatedocument_RequestPatch::is_s_ezdoctemplatedocument_base64_Set() const{
    return m_s_ezdoctemplatedocument_base64_isSet;
}

bool Ezdoctemplatedocument_RequestPatch::is_s_ezdoctemplatedocument_base64_Valid() const{
    return m_s_ezdoctemplatedocument_base64_isValid;
}

bool Ezdoctemplatedocument_RequestPatch::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_e_ezdoctemplatedocument_format_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezdoctemplatedocument_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezdoctemplatedocument_base64_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezdoctemplatedocument_RequestPatch::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace Ezmaxapi
