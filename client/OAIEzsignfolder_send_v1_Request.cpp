/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEzsignfolder_send_v1_Request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEzsignfolder_send_v1_Request::OAIEzsignfolder_send_v1_Request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEzsignfolder_send_v1_Request::OAIEzsignfolder_send_v1_Request() {
    this->initializeModel();
}

OAIEzsignfolder_send_v1_Request::~OAIEzsignfolder_send_v1_Request() {}

void OAIEzsignfolder_send_v1_Request::initializeModel() {

    m_t_extra_message_isSet = false;
    m_t_extra_message_isValid = false;
}

void OAIEzsignfolder_send_v1_Request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEzsignfolder_send_v1_Request::fromJsonObject(QJsonObject json) {

    m_t_extra_message_isValid = ::OpenAPI::fromJsonValue(t_extra_message, json[QString("tExtraMessage")]);
    m_t_extra_message_isSet = !json[QString("tExtraMessage")].isNull() && m_t_extra_message_isValid;
}

QString OAIEzsignfolder_send_v1_Request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEzsignfolder_send_v1_Request::asJsonObject() const {
    QJsonObject obj;
    if (m_t_extra_message_isSet) {
        obj.insert(QString("tExtraMessage"), ::OpenAPI::toJsonValue(t_extra_message));
    }
    return obj;
}

QString OAIEzsignfolder_send_v1_Request::getTExtraMessage() const {
    return t_extra_message;
}
void OAIEzsignfolder_send_v1_Request::setTExtraMessage(const QString &t_extra_message) {
    this->t_extra_message = t_extra_message;
    this->m_t_extra_message_isSet = true;
}

bool OAIEzsignfolder_send_v1_Request::is_t_extra_message_Set() const{
    return m_t_extra_message_isSet;
}

bool OAIEzsignfolder_send_v1_Request::is_t_extra_message_Valid() const{
    return m_t_extra_message_isValid;
}

bool OAIEzsignfolder_send_v1_Request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_t_extra_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEzsignfolder_send_v1_Request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_t_extra_message_isValid && true;
}

} // namespace OpenAPI
