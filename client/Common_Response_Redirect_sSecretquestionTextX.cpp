/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Common_Response_Redirect_sSecretquestionTextX.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Common_Response_Redirect_sSecretquestionTextX::Common_Response_Redirect_sSecretquestionTextX(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Common_Response_Redirect_sSecretquestionTextX::Common_Response_Redirect_sSecretquestionTextX() {
    this->initializeModel();
}

Common_Response_Redirect_sSecretquestionTextX::~Common_Response_Redirect_sSecretquestionTextX() {}

void Common_Response_Redirect_sSecretquestionTextX::initializeModel() {

    m_s_secretquestion_text_x_isSet = false;
    m_s_secretquestion_text_x_isValid = false;
}

void Common_Response_Redirect_sSecretquestionTextX::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Common_Response_Redirect_sSecretquestionTextX::fromJsonObject(QJsonObject json) {

    m_s_secretquestion_text_x_isValid = ::Ezmaxapi::fromJsonValue(m_s_secretquestion_text_x, json[QString("sSecretquestionTextX")]);
    m_s_secretquestion_text_x_isSet = !json[QString("sSecretquestionTextX")].isNull() && m_s_secretquestion_text_x_isValid;
}

QString Common_Response_Redirect_sSecretquestionTextX::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Common_Response_Redirect_sSecretquestionTextX::asJsonObject() const {
    QJsonObject obj;
    if (m_s_secretquestion_text_x_isSet) {
        obj.insert(QString("sSecretquestionTextX"), ::Ezmaxapi::toJsonValue(m_s_secretquestion_text_x));
    }
    return obj;
}

QString Common_Response_Redirect_sSecretquestionTextX::getSSecretquestionTextX() const {
    return m_s_secretquestion_text_x;
}
void Common_Response_Redirect_sSecretquestionTextX::setSSecretquestionTextX(const QString &s_secretquestion_text_x) {
    m_s_secretquestion_text_x = s_secretquestion_text_x;
    m_s_secretquestion_text_x_isSet = true;
}

bool Common_Response_Redirect_sSecretquestionTextX::is_s_secretquestion_text_x_Set() const{
    return m_s_secretquestion_text_x_isSet;
}

bool Common_Response_Redirect_sSecretquestionTextX::is_s_secretquestion_text_x_Valid() const{
    return m_s_secretquestion_text_x_isValid;
}

bool Common_Response_Redirect_sSecretquestionTextX::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_secretquestion_text_x_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Common_Response_Redirect_sSecretquestionTextX::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_secretquestion_text_x_isValid && true;
}

} // namespace Ezmaxapi
