/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.7
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListpresentation_Request.h
 *
 * A Listpresentation element
 */

#ifndef OAIListpresentation_Request_H
#define OAIListpresentation_Request_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListpresentation_Request : public OAIObject {
public:
    OAIListpresentation_Request();
    OAIListpresentation_Request(QString json);
    ~OAIListpresentation_Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSListpresentationDescription() const;
    void setSListpresentationDescription(const QString &s_listpresentation_description);
    bool is_s_listpresentation_description_Set() const;
    bool is_s_listpresentation_description_Valid() const;

    QString getSListpresentationFilter() const;
    void setSListpresentationFilter(const QString &s_listpresentation_filter);
    bool is_s_listpresentation_filter_Set() const;
    bool is_s_listpresentation_filter_Valid() const;

    QString getSListpresentationOrderby() const;
    void setSListpresentationOrderby(const QString &s_listpresentation_orderby);
    bool is_s_listpresentation_orderby_Set() const;
    bool is_s_listpresentation_orderby_Valid() const;

    QList<QString> getASColumnName() const;
    void setASColumnName(const QList<QString> &a_s_column_name);
    bool is_a_s_column_name_Set() const;
    bool is_a_s_column_name_Valid() const;

    qint32 getIListpresentationRowMax() const;
    void setIListpresentationRowMax(const qint32 &i_listpresentation_row_max);
    bool is_i_listpresentation_row_max_Set() const;
    bool is_i_listpresentation_row_max_Valid() const;

    qint32 getIListpresentationRowOffset() const;
    void setIListpresentationRowOffset(const qint32 &i_listpresentation_row_offset);
    bool is_i_listpresentation_row_offset_Set() const;
    bool is_i_listpresentation_row_offset_Valid() const;

    bool isBListpresentationDefault() const;
    void setBListpresentationDefault(const bool &b_listpresentation_default);
    bool is_b_listpresentation_default_Set() const;
    bool is_b_listpresentation_default_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString s_listpresentation_description;
    bool m_s_listpresentation_description_isSet;
    bool m_s_listpresentation_description_isValid;

    QString s_listpresentation_filter;
    bool m_s_listpresentation_filter_isSet;
    bool m_s_listpresentation_filter_isValid;

    QString s_listpresentation_orderby;
    bool m_s_listpresentation_orderby_isSet;
    bool m_s_listpresentation_orderby_isValid;

    QList<QString> a_s_column_name;
    bool m_a_s_column_name_isSet;
    bool m_a_s_column_name_isValid;

    qint32 i_listpresentation_row_max;
    bool m_i_listpresentation_row_max_isSet;
    bool m_i_listpresentation_row_max_isValid;

    qint32 i_listpresentation_row_offset;
    bool m_i_listpresentation_row_offset_isSet;
    bool m_i_listpresentation_row_offset_isValid;

    bool b_listpresentation_default;
    bool m_b_listpresentation_default_isSet;
    bool m_b_listpresentation_default_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListpresentation_Request)

#endif // OAIListpresentation_Request_H
