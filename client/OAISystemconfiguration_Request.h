/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISystemconfiguration_Request.h
 *
 * A Systemconfiguration Object
 */

#ifndef OAISystemconfiguration_Request_H
#define OAISystemconfiguration_Request_H

#include <QJsonObject>

#include "OAIField_eSystemconfigurationEzsign.h"
#include "OAIField_eSystemconfigurationLanguage1.h"
#include "OAIField_eSystemconfigurationLanguage2.h"
#include "OAIField_eSystemconfigurationNewexternaluseraction.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace Ezmaxapi {

class OAISystemconfiguration_Request : public OAIObject {
public:
    OAISystemconfiguration_Request();
    OAISystemconfiguration_Request(QString json);
    ~OAISystemconfiguration_Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiSystemconfigurationId() const;
    void setPkiSystemconfigurationId(const qint32 &pki_systemconfiguration_id);
    bool is_pki_systemconfiguration_id_Set() const;
    bool is_pki_systemconfiguration_id_Valid() const;

    OAIField_eSystemconfigurationNewexternaluseraction getESystemconfigurationNewexternaluseraction() const;
    void setESystemconfigurationNewexternaluseraction(const OAIField_eSystemconfigurationNewexternaluseraction &e_systemconfiguration_newexternaluseraction);
    bool is_e_systemconfiguration_newexternaluseraction_Set() const;
    bool is_e_systemconfiguration_newexternaluseraction_Valid() const;

    OAIField_eSystemconfigurationLanguage1 getESystemconfigurationLanguage1() const;
    void setESystemconfigurationLanguage1(const OAIField_eSystemconfigurationLanguage1 &e_systemconfiguration_language1);
    bool is_e_systemconfiguration_language1_Set() const;
    bool is_e_systemconfiguration_language1_Valid() const;

    OAIField_eSystemconfigurationLanguage2 getESystemconfigurationLanguage2() const;
    void setESystemconfigurationLanguage2(const OAIField_eSystemconfigurationLanguage2 &e_systemconfiguration_language2);
    bool is_e_systemconfiguration_language2_Set() const;
    bool is_e_systemconfiguration_language2_Valid() const;

    OAIField_eSystemconfigurationEzsign getESystemconfigurationEzsign() const;
    void setESystemconfigurationEzsign(const OAIField_eSystemconfigurationEzsign &e_systemconfiguration_ezsign);
    bool is_e_systemconfiguration_ezsign_Set() const;
    bool is_e_systemconfiguration_ezsign_Valid() const;

    bool isBSystemconfigurationEzsignpersonnal() const;
    void setBSystemconfigurationEzsignpersonnal(const bool &b_systemconfiguration_ezsignpersonnal);
    bool is_b_systemconfiguration_ezsignpersonnal_Set() const;
    bool is_b_systemconfiguration_ezsignpersonnal_Valid() const;

    bool isBSystemconfigurationSspr() const;
    void setBSystemconfigurationSspr(const bool &b_systemconfiguration_sspr);
    bool is_b_systemconfiguration_sspr_Set() const;
    bool is_b_systemconfiguration_sspr_Valid() const;

    QString getDtSystemconfigurationReadonlyexpirationstart() const;
    void setDtSystemconfigurationReadonlyexpirationstart(const QString &dt_systemconfiguration_readonlyexpirationstart);
    bool is_dt_systemconfiguration_readonlyexpirationstart_Set() const;
    bool is_dt_systemconfiguration_readonlyexpirationstart_Valid() const;

    QString getDtSystemconfigurationReadonlyexpirationend() const;
    void setDtSystemconfigurationReadonlyexpirationend(const QString &dt_systemconfiguration_readonlyexpirationend);
    bool is_dt_systemconfiguration_readonlyexpirationend_Set() const;
    bool is_dt_systemconfiguration_readonlyexpirationend_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_systemconfiguration_id;
    bool m_pki_systemconfiguration_id_isSet;
    bool m_pki_systemconfiguration_id_isValid;

    OAIField_eSystemconfigurationNewexternaluseraction m_e_systemconfiguration_newexternaluseraction;
    bool m_e_systemconfiguration_newexternaluseraction_isSet;
    bool m_e_systemconfiguration_newexternaluseraction_isValid;

    OAIField_eSystemconfigurationLanguage1 m_e_systemconfiguration_language1;
    bool m_e_systemconfiguration_language1_isSet;
    bool m_e_systemconfiguration_language1_isValid;

    OAIField_eSystemconfigurationLanguage2 m_e_systemconfiguration_language2;
    bool m_e_systemconfiguration_language2_isSet;
    bool m_e_systemconfiguration_language2_isValid;

    OAIField_eSystemconfigurationEzsign m_e_systemconfiguration_ezsign;
    bool m_e_systemconfiguration_ezsign_isSet;
    bool m_e_systemconfiguration_ezsign_isValid;

    bool m_b_systemconfiguration_ezsignpersonnal;
    bool m_b_systemconfiguration_ezsignpersonnal_isSet;
    bool m_b_systemconfiguration_ezsignpersonnal_isValid;

    bool m_b_systemconfiguration_sspr;
    bool m_b_systemconfiguration_sspr_isSet;
    bool m_b_systemconfiguration_sspr_isValid;

    QString m_dt_systemconfiguration_readonlyexpirationstart;
    bool m_dt_systemconfiguration_readonlyexpirationstart_isSet;
    bool m_dt_systemconfiguration_readonlyexpirationstart_isValid;

    QString m_dt_systemconfiguration_readonlyexpirationend;
    bool m_dt_systemconfiguration_readonlyexpirationend_isSet;
    bool m_dt_systemconfiguration_readonlyexpirationend_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::OAISystemconfiguration_Request)

#endif // OAISystemconfiguration_Request_H
