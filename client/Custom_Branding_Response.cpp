/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_Branding_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_Branding_Response::Custom_Branding_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_Branding_Response::Custom_Branding_Response() {
    this->initializeModel();
}

Custom_Branding_Response::~Custom_Branding_Response() {}

void Custom_Branding_Response::initializeModel() {

    m_i_branding_color_isSet = false;
    m_i_branding_color_isValid = false;

    m_s_branding_logointerfaceurl_isSet = false;
    m_s_branding_logointerfaceurl_isValid = false;
}

void Custom_Branding_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Custom_Branding_Response::fromJsonObject(QJsonObject json) {

    m_i_branding_color_isValid = ::Ezmaxapi::fromJsonValue(m_i_branding_color, json[QString("iBrandingColor")]);
    m_i_branding_color_isSet = !json[QString("iBrandingColor")].isNull() && m_i_branding_color_isValid;

    m_s_branding_logointerfaceurl_isValid = ::Ezmaxapi::fromJsonValue(m_s_branding_logointerfaceurl, json[QString("sBrandingLogointerfaceurl")]);
    m_s_branding_logointerfaceurl_isSet = !json[QString("sBrandingLogointerfaceurl")].isNull() && m_s_branding_logointerfaceurl_isValid;
}

QString Custom_Branding_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Custom_Branding_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_i_branding_color_isSet) {
        obj.insert(QString("iBrandingColor"), ::Ezmaxapi::toJsonValue(m_i_branding_color));
    }
    if (m_s_branding_logointerfaceurl_isSet) {
        obj.insert(QString("sBrandingLogointerfaceurl"), ::Ezmaxapi::toJsonValue(m_s_branding_logointerfaceurl));
    }
    return obj;
}

qint32 Custom_Branding_Response::getIBrandingColor() const {
    return m_i_branding_color;
}
void Custom_Branding_Response::setIBrandingColor(const qint32 &i_branding_color) {
    m_i_branding_color = i_branding_color;
    m_i_branding_color_isSet = true;
}

bool Custom_Branding_Response::is_i_branding_color_Set() const{
    return m_i_branding_color_isSet;
}

bool Custom_Branding_Response::is_i_branding_color_Valid() const{
    return m_i_branding_color_isValid;
}

QString Custom_Branding_Response::getSBrandingLogointerfaceurl() const {
    return m_s_branding_logointerfaceurl;
}
void Custom_Branding_Response::setSBrandingLogointerfaceurl(const QString &s_branding_logointerfaceurl) {
    m_s_branding_logointerfaceurl = s_branding_logointerfaceurl;
    m_s_branding_logointerfaceurl_isSet = true;
}

bool Custom_Branding_Response::is_s_branding_logointerfaceurl_Set() const{
    return m_s_branding_logointerfaceurl_isSet;
}

bool Custom_Branding_Response::is_s_branding_logointerfaceurl_Valid() const{
    return m_s_branding_logointerfaceurl_isValid;
}

bool Custom_Branding_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_i_branding_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_branding_logointerfaceurl_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Custom_Branding_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_i_branding_color_isValid && m_s_branding_logointerfaceurl_isValid && true;
}

} // namespace Ezmaxapi
