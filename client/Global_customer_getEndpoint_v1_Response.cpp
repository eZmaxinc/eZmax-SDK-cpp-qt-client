/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Global_customer_getEndpoint_v1_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Global_customer_getEndpoint_v1_Response::Global_customer_getEndpoint_v1_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Global_customer_getEndpoint_v1_Response::Global_customer_getEndpoint_v1_Response() {
    this->initializeModel();
}

Global_customer_getEndpoint_v1_Response::~Global_customer_getEndpoint_v1_Response() {}

void Global_customer_getEndpoint_v1_Response::initializeModel() {

    m_s_endpoint_url_isSet = false;
    m_s_endpoint_url_isValid = false;
}

void Global_customer_getEndpoint_v1_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Global_customer_getEndpoint_v1_Response::fromJsonObject(QJsonObject json) {

    m_s_endpoint_url_isValid = ::Ezmaxapi::fromJsonValue(m_s_endpoint_url, json[QString("sEndpointURL")]);
    m_s_endpoint_url_isSet = !json[QString("sEndpointURL")].isNull() && m_s_endpoint_url_isValid;
}

QString Global_customer_getEndpoint_v1_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Global_customer_getEndpoint_v1_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_s_endpoint_url_isSet) {
        obj.insert(QString("sEndpointURL"), ::Ezmaxapi::toJsonValue(m_s_endpoint_url));
    }
    return obj;
}

QString Global_customer_getEndpoint_v1_Response::getSEndpointUrl() const {
    return m_s_endpoint_url;
}
void Global_customer_getEndpoint_v1_Response::setSEndpointUrl(const QString &s_endpoint_url) {
    m_s_endpoint_url = s_endpoint_url;
    m_s_endpoint_url_isSet = true;
}

bool Global_customer_getEndpoint_v1_Response::is_s_endpoint_url_Set() const{
    return m_s_endpoint_url_isSet;
}

bool Global_customer_getEndpoint_v1_Response::is_s_endpoint_url_Valid() const{
    return m_s_endpoint_url_isValid;
}

bool Global_customer_getEndpoint_v1_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_endpoint_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Global_customer_getEndpoint_v1_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_endpoint_url_isValid && true;
}

} // namespace Ezmaxapi
