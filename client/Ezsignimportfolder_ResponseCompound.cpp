/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsignimportfolder_ResponseCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsignimportfolder_ResponseCompound::Ezsignimportfolder_ResponseCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsignimportfolder_ResponseCompound::Ezsignimportfolder_ResponseCompound() {
    this->initializeModel();
}

Ezsignimportfolder_ResponseCompound::~Ezsignimportfolder_ResponseCompound() {}

void Ezsignimportfolder_ResponseCompound::initializeModel() {

    m_pki_ezsignimportfolder_id_isSet = false;
    m_pki_ezsignimportfolder_id_isValid = false;

    m_s_ezsignimportfolder_name_isSet = false;
    m_s_ezsignimportfolder_name_isValid = false;

    m_a_obj_ezsignimportdocument_isSet = false;
    m_a_obj_ezsignimportdocument_isValid = false;
}

void Ezsignimportfolder_ResponseCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsignimportfolder_ResponseCompound::fromJsonObject(QJsonObject json) {

    m_pki_ezsignimportfolder_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsignimportfolder_id, json[QString("pkiEzsignimportfolderID")]);
    m_pki_ezsignimportfolder_id_isSet = !json[QString("pkiEzsignimportfolderID")].isNull() && m_pki_ezsignimportfolder_id_isValid;

    m_s_ezsignimportfolder_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsignimportfolder_name, json[QString("sEzsignimportfolderName")]);
    m_s_ezsignimportfolder_name_isSet = !json[QString("sEzsignimportfolderName")].isNull() && m_s_ezsignimportfolder_name_isValid;

    m_a_obj_ezsignimportdocument_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_ezsignimportdocument, json[QString("a_objEzsignimportdocument")]);
    m_a_obj_ezsignimportdocument_isSet = !json[QString("a_objEzsignimportdocument")].isNull() && m_a_obj_ezsignimportdocument_isValid;
}

QString Ezsignimportfolder_ResponseCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsignimportfolder_ResponseCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsignimportfolder_id_isSet) {
        obj.insert(QString("pkiEzsignimportfolderID"), ::Ezmaxapi::toJsonValue(m_pki_ezsignimportfolder_id));
    }
    if (m_s_ezsignimportfolder_name_isSet) {
        obj.insert(QString("sEzsignimportfolderName"), ::Ezmaxapi::toJsonValue(m_s_ezsignimportfolder_name));
    }
    if (m_a_obj_ezsignimportdocument.size() > 0) {
        obj.insert(QString("a_objEzsignimportdocument"), ::Ezmaxapi::toJsonValue(m_a_obj_ezsignimportdocument));
    }
    return obj;
}

qint32 Ezsignimportfolder_ResponseCompound::getPkiEzsignimportfolderId() const {
    return m_pki_ezsignimportfolder_id;
}
void Ezsignimportfolder_ResponseCompound::setPkiEzsignimportfolderId(const qint32 &pki_ezsignimportfolder_id) {
    m_pki_ezsignimportfolder_id = pki_ezsignimportfolder_id;
    m_pki_ezsignimportfolder_id_isSet = true;
}

bool Ezsignimportfolder_ResponseCompound::is_pki_ezsignimportfolder_id_Set() const{
    return m_pki_ezsignimportfolder_id_isSet;
}

bool Ezsignimportfolder_ResponseCompound::is_pki_ezsignimportfolder_id_Valid() const{
    return m_pki_ezsignimportfolder_id_isValid;
}

QString Ezsignimportfolder_ResponseCompound::getSEzsignimportfolderName() const {
    return m_s_ezsignimportfolder_name;
}
void Ezsignimportfolder_ResponseCompound::setSEzsignimportfolderName(const QString &s_ezsignimportfolder_name) {
    m_s_ezsignimportfolder_name = s_ezsignimportfolder_name;
    m_s_ezsignimportfolder_name_isSet = true;
}

bool Ezsignimportfolder_ResponseCompound::is_s_ezsignimportfolder_name_Set() const{
    return m_s_ezsignimportfolder_name_isSet;
}

bool Ezsignimportfolder_ResponseCompound::is_s_ezsignimportfolder_name_Valid() const{
    return m_s_ezsignimportfolder_name_isValid;
}

QList<Custom_Ezsignimportdocument_Response> Ezsignimportfolder_ResponseCompound::getAObjEzsignimportdocument() const {
    return m_a_obj_ezsignimportdocument;
}
void Ezsignimportfolder_ResponseCompound::setAObjEzsignimportdocument(const QList<Custom_Ezsignimportdocument_Response> &a_obj_ezsignimportdocument) {
    m_a_obj_ezsignimportdocument = a_obj_ezsignimportdocument;
    m_a_obj_ezsignimportdocument_isSet = true;
}

bool Ezsignimportfolder_ResponseCompound::is_a_obj_ezsignimportdocument_Set() const{
    return m_a_obj_ezsignimportdocument_isSet;
}

bool Ezsignimportfolder_ResponseCompound::is_a_obj_ezsignimportdocument_Valid() const{
    return m_a_obj_ezsignimportdocument_isValid;
}

bool Ezsignimportfolder_ResponseCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsignimportfolder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsignimportfolder_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_ezsignimportdocument.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsignimportfolder_ResponseCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_ezsignimportfolder_id_isValid && m_s_ezsignimportfolder_name_isValid && true;
}

} // namespace Ezmaxapi
