/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.18
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommon_Reportrow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommon_Reportrow::OAICommon_Reportrow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommon_Reportrow::OAICommon_Reportrow() {
    this->initializeModel();
}

OAICommon_Reportrow::~OAICommon_Reportrow() {}

void OAICommon_Reportrow::initializeModel() {

    m_a_obj_reportcell_isSet = false;
    m_a_obj_reportcell_isValid = false;

    m_i_reportrow_height_isSet = false;
    m_i_reportrow_height_isValid = false;
}

void OAICommon_Reportrow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommon_Reportrow::fromJsonObject(QJsonObject json) {

    m_a_obj_reportcell_isValid = ::OpenAPI::fromJsonValue(a_obj_reportcell, json[QString("a_objReportcell")]);
    m_a_obj_reportcell_isSet = !json[QString("a_objReportcell")].isNull() && m_a_obj_reportcell_isValid;

    m_i_reportrow_height_isValid = ::OpenAPI::fromJsonValue(i_reportrow_height, json[QString("iReportrowHeight")]);
    m_i_reportrow_height_isSet = !json[QString("iReportrowHeight")].isNull() && m_i_reportrow_height_isValid;
}

QString OAICommon_Reportrow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommon_Reportrow::asJsonObject() const {
    QJsonObject obj;
    if (a_obj_reportcell.size() > 0) {
        obj.insert(QString("a_objReportcell"), ::OpenAPI::toJsonValue(a_obj_reportcell));
    }
    if (m_i_reportrow_height_isSet) {
        obj.insert(QString("iReportrowHeight"), ::OpenAPI::toJsonValue(i_reportrow_height));
    }
    return obj;
}

QList<OAICommon_Reportcell> OAICommon_Reportrow::getAObjReportcell() const {
    return a_obj_reportcell;
}
void OAICommon_Reportrow::setAObjReportcell(const QList<OAICommon_Reportcell> &a_obj_reportcell) {
    this->a_obj_reportcell = a_obj_reportcell;
    this->m_a_obj_reportcell_isSet = true;
}

bool OAICommon_Reportrow::is_a_obj_reportcell_Set() const{
    return m_a_obj_reportcell_isSet;
}

bool OAICommon_Reportrow::is_a_obj_reportcell_Valid() const{
    return m_a_obj_reportcell_isValid;
}

qint32 OAICommon_Reportrow::getIReportrowHeight() const {
    return i_reportrow_height;
}
void OAICommon_Reportrow::setIReportrowHeight(const qint32 &i_reportrow_height) {
    this->i_reportrow_height = i_reportrow_height;
    this->m_i_reportrow_height_isSet = true;
}

bool OAICommon_Reportrow::is_i_reportrow_height_Set() const{
    return m_i_reportrow_height_isSet;
}

bool OAICommon_Reportrow::is_i_reportrow_height_Valid() const{
    return m_i_reportrow_height_isValid;
}

bool OAICommon_Reportrow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (a_obj_reportcell.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_reportrow_height_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommon_Reportrow::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_a_obj_reportcell_isValid && m_i_reportrow_height_isValid && true;
}

} // namespace OpenAPI
