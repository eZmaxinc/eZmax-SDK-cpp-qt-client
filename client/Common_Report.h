/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Common_Report.h
 *
 * A Report containing Reportsections 
 */

#ifndef Common_Report_H
#define Common_Report_H

#include <QJsonObject>

#include "Common_Reportsection.h"
#include <QList>
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Common_Reportsection;

class Common_Report : public Object {
public:
    Common_Report();
    Common_Report(QString json);
    ~Common_Report() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<Common_Reportsection> getAObjReportsection() const;
    void setAObjReportsection(const QList<Common_Reportsection> &a_obj_reportsection);
    bool is_a_obj_reportsection_Set() const;
    bool is_a_obj_reportsection_Valid() const;

    bool isBReportPaginate() const;
    void setBReportPaginate(const bool &b_report_paginate);
    bool is_b_report_paginate_Set() const;
    bool is_b_report_paginate_Valid() const;

    QString getSReportTitle() const;
    void setSReportTitle(const QString &s_report_title);
    bool is_s_report_title_Set() const;
    bool is_s_report_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<Common_Reportsection> m_a_obj_reportsection;
    bool m_a_obj_reportsection_isSet;
    bool m_a_obj_reportsection_isValid;

    bool m_b_report_paginate;
    bool m_b_report_paginate_isSet;
    bool m_b_report_paginate_isValid;

    QString m_s_report_title;
    bool m_s_report_title_isSet;
    bool m_s_report_title_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Common_Report)

#endif // Common_Report_H
