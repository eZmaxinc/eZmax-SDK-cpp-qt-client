/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsigntemplatepublic_resetUrl_v1_Response_mPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::Ezsigntemplatepublic_resetUrl_v1_Response_mPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::Ezsigntemplatepublic_resetUrl_v1_Response_mPayload() {
    this->initializeModel();
}

Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::~Ezsigntemplatepublic_resetUrl_v1_Response_mPayload() {}

void Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::initializeModel() {

    m_s_ezsigntemplatepublic_url_isSet = false;
    m_s_ezsigntemplatepublic_url_isValid = false;
}

void Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::fromJsonObject(QJsonObject json) {

    m_s_ezsigntemplatepublic_url_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigntemplatepublic_url, json[QString("sEzsigntemplatepublicUrl")]);
    m_s_ezsigntemplatepublic_url_isSet = !json[QString("sEzsigntemplatepublicUrl")].isNull() && m_s_ezsigntemplatepublic_url_isValid;
}

QString Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_s_ezsigntemplatepublic_url_isSet) {
        obj.insert(QString("sEzsigntemplatepublicUrl"), ::Ezmaxapi::toJsonValue(m_s_ezsigntemplatepublic_url));
    }
    return obj;
}

QString Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::getSEzsigntemplatepublicUrl() const {
    return m_s_ezsigntemplatepublic_url;
}
void Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::setSEzsigntemplatepublicUrl(const QString &s_ezsigntemplatepublic_url) {
    m_s_ezsigntemplatepublic_url = s_ezsigntemplatepublic_url;
    m_s_ezsigntemplatepublic_url_isSet = true;
}

bool Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::is_s_ezsigntemplatepublic_url_Set() const{
    return m_s_ezsigntemplatepublic_url_isSet;
}

bool Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::is_s_ezsigntemplatepublic_url_Valid() const{
    return m_s_ezsigntemplatepublic_url_isValid;
}

bool Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_ezsigntemplatepublic_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsigntemplatepublic_resetUrl_v1_Response_mPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_ezsigntemplatepublic_url_isValid && true;
}

} // namespace Ezmaxapi
