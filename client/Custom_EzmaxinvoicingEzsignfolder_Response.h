/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Custom_EzmaxinvoicingEzsignfolder_Response.h
 *
 * An EzmaxinvoicingEzsignfolder object containing information about the Ezmaxinvoicing for an Ezsignfolder
 */

#ifndef Custom_EzmaxinvoicingEzsignfolder_Response_H
#define Custom_EzmaxinvoicingEzsignfolder_Response_H

#include <QJsonObject>

#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Custom_EzmaxinvoicingEzsignfolder_Response : public Object {
public:
    Custom_EzmaxinvoicingEzsignfolder_Response();
    Custom_EzmaxinvoicingEzsignfolder_Response(QString json);
    ~Custom_EzmaxinvoicingEzsignfolder_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFkiEzsignfolderId() const;
    void setFkiEzsignfolderId(const qint32 &fki_ezsignfolder_id);
    bool is_fki_ezsignfolder_id_Set() const;
    bool is_fki_ezsignfolder_id_Valid() const;

    QString getSEzsignfolderDescription() const;
    void setSEzsignfolderDescription(const QString &s_ezsignfolder_description);
    bool is_s_ezsignfolder_description_Set() const;
    bool is_s_ezsignfolder_description_Valid() const;

    bool isBEzsigntsarequirementBillable() const;
    void setBEzsigntsarequirementBillable(const bool &b_ezsigntsarequirement_billable);
    bool is_b_ezsigntsarequirement_billable_Set() const;
    bool is_b_ezsigntsarequirement_billable_Valid() const;

    bool isBEzsignfolderMfaused() const;
    void setBEzsignfolderMfaused(const bool &b_ezsignfolder_mfaused);
    bool is_b_ezsignfolder_mfaused_Set() const;
    bool is_b_ezsignfolder_mfaused_Valid() const;

    bool isBEzsignfolderPaymentused() const;
    void setBEzsignfolderPaymentused(const bool &b_ezsignfolder_paymentused);
    bool is_b_ezsignfolder_paymentused_Set() const;
    bool is_b_ezsignfolder_paymentused_Valid() const;

    bool isBEzsignfolderAllowed() const;
    void setBEzsignfolderAllowed(const bool &b_ezsignfolder_allowed);
    bool is_b_ezsignfolder_allowed_Set() const;
    bool is_b_ezsignfolder_allowed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_fki_ezsignfolder_id;
    bool m_fki_ezsignfolder_id_isSet;
    bool m_fki_ezsignfolder_id_isValid;

    QString m_s_ezsignfolder_description;
    bool m_s_ezsignfolder_description_isSet;
    bool m_s_ezsignfolder_description_isValid;

    bool m_b_ezsigntsarequirement_billable;
    bool m_b_ezsigntsarequirement_billable_isSet;
    bool m_b_ezsigntsarequirement_billable_isValid;

    bool m_b_ezsignfolder_mfaused;
    bool m_b_ezsignfolder_mfaused_isSet;
    bool m_b_ezsignfolder_mfaused_isValid;

    bool m_b_ezsignfolder_paymentused;
    bool m_b_ezsignfolder_paymentused_isSet;
    bool m_b_ezsignfolder_paymentused_isValid;

    bool m_b_ezsignfolder_allowed;
    bool m_b_ezsignfolder_allowed_isSet;
    bool m_b_ezsignfolder_allowed_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Custom_EzmaxinvoicingEzsignfolder_Response)

#endif // Custom_EzmaxinvoicingEzsignfolder_Response_H
