/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Ezsigntemplatesigner_RequestCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Ezsigntemplatesigner_RequestCompound::Ezsigntemplatesigner_RequestCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Ezsigntemplatesigner_RequestCompound::Ezsigntemplatesigner_RequestCompound() {
    this->initializeModel();
}

Ezsigntemplatesigner_RequestCompound::~Ezsigntemplatesigner_RequestCompound() {}

void Ezsigntemplatesigner_RequestCompound::initializeModel() {

    m_pki_ezsigntemplatesigner_id_isSet = false;
    m_pki_ezsigntemplatesigner_id_isValid = false;

    m_fki_ezsigntemplate_id_isSet = false;
    m_fki_ezsigntemplate_id_isValid = false;

    m_s_ezsigntemplatesigner_description_isSet = false;
    m_s_ezsigntemplatesigner_description_isValid = false;
}

void Ezsigntemplatesigner_RequestCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Ezsigntemplatesigner_RequestCompound::fromJsonObject(QJsonObject json) {

    m_pki_ezsigntemplatesigner_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_ezsigntemplatesigner_id, json[QString("pkiEzsigntemplatesignerID")]);
    m_pki_ezsigntemplatesigner_id_isSet = !json[QString("pkiEzsigntemplatesignerID")].isNull() && m_pki_ezsigntemplatesigner_id_isValid;

    m_fki_ezsigntemplate_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsigntemplate_id, json[QString("fkiEzsigntemplateID")]);
    m_fki_ezsigntemplate_id_isSet = !json[QString("fkiEzsigntemplateID")].isNull() && m_fki_ezsigntemplate_id_isValid;

    m_s_ezsigntemplatesigner_description_isValid = ::Ezmaxapi::fromJsonValue(m_s_ezsigntemplatesigner_description, json[QString("sEzsigntemplatesignerDescription")]);
    m_s_ezsigntemplatesigner_description_isSet = !json[QString("sEzsigntemplatesignerDescription")].isNull() && m_s_ezsigntemplatesigner_description_isValid;
}

QString Ezsigntemplatesigner_RequestCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Ezsigntemplatesigner_RequestCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_ezsigntemplatesigner_id_isSet) {
        obj.insert(QString("pkiEzsigntemplatesignerID"), ::Ezmaxapi::toJsonValue(m_pki_ezsigntemplatesigner_id));
    }
    if (m_fki_ezsigntemplate_id_isSet) {
        obj.insert(QString("fkiEzsigntemplateID"), ::Ezmaxapi::toJsonValue(m_fki_ezsigntemplate_id));
    }
    if (m_s_ezsigntemplatesigner_description_isSet) {
        obj.insert(QString("sEzsigntemplatesignerDescription"), ::Ezmaxapi::toJsonValue(m_s_ezsigntemplatesigner_description));
    }
    return obj;
}

qint32 Ezsigntemplatesigner_RequestCompound::getPkiEzsigntemplatesignerId() const {
    return m_pki_ezsigntemplatesigner_id;
}
void Ezsigntemplatesigner_RequestCompound::setPkiEzsigntemplatesignerId(const qint32 &pki_ezsigntemplatesigner_id) {
    m_pki_ezsigntemplatesigner_id = pki_ezsigntemplatesigner_id;
    m_pki_ezsigntemplatesigner_id_isSet = true;
}

bool Ezsigntemplatesigner_RequestCompound::is_pki_ezsigntemplatesigner_id_Set() const{
    return m_pki_ezsigntemplatesigner_id_isSet;
}

bool Ezsigntemplatesigner_RequestCompound::is_pki_ezsigntemplatesigner_id_Valid() const{
    return m_pki_ezsigntemplatesigner_id_isValid;
}

qint32 Ezsigntemplatesigner_RequestCompound::getFkiEzsigntemplateId() const {
    return m_fki_ezsigntemplate_id;
}
void Ezsigntemplatesigner_RequestCompound::setFkiEzsigntemplateId(const qint32 &fki_ezsigntemplate_id) {
    m_fki_ezsigntemplate_id = fki_ezsigntemplate_id;
    m_fki_ezsigntemplate_id_isSet = true;
}

bool Ezsigntemplatesigner_RequestCompound::is_fki_ezsigntemplate_id_Set() const{
    return m_fki_ezsigntemplate_id_isSet;
}

bool Ezsigntemplatesigner_RequestCompound::is_fki_ezsigntemplate_id_Valid() const{
    return m_fki_ezsigntemplate_id_isValid;
}

QString Ezsigntemplatesigner_RequestCompound::getSEzsigntemplatesignerDescription() const {
    return m_s_ezsigntemplatesigner_description;
}
void Ezsigntemplatesigner_RequestCompound::setSEzsigntemplatesignerDescription(const QString &s_ezsigntemplatesigner_description) {
    m_s_ezsigntemplatesigner_description = s_ezsigntemplatesigner_description;
    m_s_ezsigntemplatesigner_description_isSet = true;
}

bool Ezsigntemplatesigner_RequestCompound::is_s_ezsigntemplatesigner_description_Set() const{
    return m_s_ezsigntemplatesigner_description_isSet;
}

bool Ezsigntemplatesigner_RequestCompound::is_s_ezsigntemplatesigner_description_Valid() const{
    return m_s_ezsigntemplatesigner_description_isValid;
}

bool Ezsigntemplatesigner_RequestCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_ezsigntemplatesigner_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsigntemplate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_ezsigntemplatesigner_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Ezsigntemplatesigner_RequestCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fki_ezsigntemplate_id_isValid && m_s_ezsigntemplatesigner_description_isValid && true;
}

} // namespace Ezmaxapi
