/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScim_GroupMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace Ezmaxapi {

OAIScim_GroupMember::OAIScim_GroupMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScim_GroupMember::OAIScim_GroupMember() {
    this->initializeModel();
}

OAIScim_GroupMember::~OAIScim_GroupMember() {}

void OAIScim_GroupMember::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;

    m_display_isSet = false;
    m_display_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_ref_isSet = false;
    m_ref_isValid = false;
}

void OAIScim_GroupMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScim_GroupMember::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::Ezmaxapi::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;

    m_display_isValid = ::Ezmaxapi::fromJsonValue(m_display, json[QString("display")]);
    m_display_isSet = !json[QString("display")].isNull() && m_display_isValid;

    m_type_isValid = ::Ezmaxapi::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_ref_isValid = ::Ezmaxapi::fromJsonValue(m_ref, json[QString("$ref")]);
    m_ref_isSet = !json[QString("$ref")].isNull() && m_ref_isValid;
}

QString OAIScim_GroupMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScim_GroupMember::asJsonObject() const {
    QJsonObject obj;
    if (m_value_isSet) {
        obj.insert(QString("value"), ::Ezmaxapi::toJsonValue(m_value));
    }
    if (m_display_isSet) {
        obj.insert(QString("display"), ::Ezmaxapi::toJsonValue(m_display));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::Ezmaxapi::toJsonValue(m_type));
    }
    if (m_ref_isSet) {
        obj.insert(QString("$ref"), ::Ezmaxapi::toJsonValue(m_ref));
    }
    return obj;
}

QString OAIScim_GroupMember::getValue() const {
    return m_value;
}
void OAIScim_GroupMember::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIScim_GroupMember::is_value_Set() const{
    return m_value_isSet;
}

bool OAIScim_GroupMember::is_value_Valid() const{
    return m_value_isValid;
}

QString OAIScim_GroupMember::getDisplay() const {
    return m_display;
}
void OAIScim_GroupMember::setDisplay(const QString &display) {
    m_display = display;
    m_display_isSet = true;
}

bool OAIScim_GroupMember::is_display_Set() const{
    return m_display_isSet;
}

bool OAIScim_GroupMember::is_display_Valid() const{
    return m_display_isValid;
}

QString OAIScim_GroupMember::getType() const {
    return m_type;
}
void OAIScim_GroupMember::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIScim_GroupMember::is_type_Set() const{
    return m_type_isSet;
}

bool OAIScim_GroupMember::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIScim_GroupMember::getRef() const {
    return m_ref;
}
void OAIScim_GroupMember::setRef(const QString &ref) {
    m_ref = ref;
    m_ref_isSet = true;
}

bool OAIScim_GroupMember::is_ref_Set() const{
    return m_ref_isSet;
}

bool OAIScim_GroupMember::is_ref_Valid() const{
    return m_ref_isValid;
}

bool OAIScim_GroupMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScim_GroupMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace Ezmaxapi
