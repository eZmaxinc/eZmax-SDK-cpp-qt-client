/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_Attachmentdocumenttype_Response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_Attachmentdocumenttype_Response::Custom_Attachmentdocumenttype_Response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_Attachmentdocumenttype_Response::Custom_Attachmentdocumenttype_Response() {
    this->initializeModel();
}

Custom_Attachmentdocumenttype_Response::~Custom_Attachmentdocumenttype_Response() {}

void Custom_Attachmentdocumenttype_Response::initializeModel() {

    m_e_attachment_documenttype_isSet = false;
    m_e_attachment_documenttype_isValid = false;

    m_a_obj_attachment_isSet = false;
    m_a_obj_attachment_isValid = false;
}

void Custom_Attachmentdocumenttype_Response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Custom_Attachmentdocumenttype_Response::fromJsonObject(QJsonObject json) {

    m_e_attachment_documenttype_isValid = ::Ezmaxapi::fromJsonValue(m_e_attachment_documenttype, json[QString("eAttachmentDocumenttype")]);
    m_e_attachment_documenttype_isSet = !json[QString("eAttachmentDocumenttype")].isNull() && m_e_attachment_documenttype_isValid;

    m_a_obj_attachment_isValid = ::Ezmaxapi::fromJsonValue(m_a_obj_attachment, json[QString("a_objAttachment")]);
    m_a_obj_attachment_isSet = !json[QString("a_objAttachment")].isNull() && m_a_obj_attachment_isValid;
}

QString Custom_Attachmentdocumenttype_Response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Custom_Attachmentdocumenttype_Response::asJsonObject() const {
    QJsonObject obj;
    if (m_e_attachment_documenttype.isSet()) {
        obj.insert(QString("eAttachmentDocumenttype"), ::Ezmaxapi::toJsonValue(m_e_attachment_documenttype));
    }
    if (m_a_obj_attachment.size() > 0) {
        obj.insert(QString("a_objAttachment"), ::Ezmaxapi::toJsonValue(m_a_obj_attachment));
    }
    return obj;
}

Field_eAttachmentDocumenttype Custom_Attachmentdocumenttype_Response::getEAttachmentDocumenttype() const {
    return m_e_attachment_documenttype;
}
void Custom_Attachmentdocumenttype_Response::setEAttachmentDocumenttype(const Field_eAttachmentDocumenttype &e_attachment_documenttype) {
    m_e_attachment_documenttype = e_attachment_documenttype;
    m_e_attachment_documenttype_isSet = true;
}

bool Custom_Attachmentdocumenttype_Response::is_e_attachment_documenttype_Set() const{
    return m_e_attachment_documenttype_isSet;
}

bool Custom_Attachmentdocumenttype_Response::is_e_attachment_documenttype_Valid() const{
    return m_e_attachment_documenttype_isValid;
}

QList<Custom_Attachment_Response> Custom_Attachmentdocumenttype_Response::getAObjAttachment() const {
    return m_a_obj_attachment;
}
void Custom_Attachmentdocumenttype_Response::setAObjAttachment(const QList<Custom_Attachment_Response> &a_obj_attachment) {
    m_a_obj_attachment = a_obj_attachment;
    m_a_obj_attachment_isSet = true;
}

bool Custom_Attachmentdocumenttype_Response::is_a_obj_attachment_Set() const{
    return m_a_obj_attachment_isSet;
}

bool Custom_Attachmentdocumenttype_Response::is_a_obj_attachment_Valid() const{
    return m_a_obj_attachment_isValid;
}

bool Custom_Attachmentdocumenttype_Response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_e_attachment_documenttype.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_a_obj_attachment.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Custom_Attachmentdocumenttype_Response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_e_attachment_documenttype_isValid && m_a_obj_attachment_isValid && true;
}

} // namespace Ezmaxapi
