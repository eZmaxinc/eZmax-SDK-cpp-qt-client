/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.17
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnum_Horizontalalignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnum_Horizontalalignment::OAIEnum_Horizontalalignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnum_Horizontalalignment::OAIEnum_Horizontalalignment() {
    this->initializeModel();
}

OAIEnum_Horizontalalignment::~OAIEnum_Horizontalalignment() {}

void OAIEnum_Horizontalalignment::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEnum_Horizontalalignment::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEnum_Horizontalalignment::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Center", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEnum_Horizontalalignment::CENTER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Left", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEnum_Horizontalalignment::LEFT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Right", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEnum_Horizontalalignment::RIGHT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEnum_Horizontalalignment::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEnum_Horizontalalignment::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEnum_Horizontalalignment::CENTER:
            val = "Center";
            break;
        case eOAIEnum_Horizontalalignment::LEFT:
            val = "Left";
            break;
        case eOAIEnum_Horizontalalignment::RIGHT:
            val = "Right";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEnum_Horizontalalignment::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEnum_Horizontalalignment::eOAIEnum_Horizontalalignment OAIEnum_Horizontalalignment::getValue() const {
    return m_value;
}

void OAIEnum_Horizontalalignment::setValue(const OAIEnum_Horizontalalignment::eOAIEnum_Horizontalalignment& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEnum_Horizontalalignment::isSet() const {
    
    return m_value_isSet;
}

bool OAIEnum_Horizontalalignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
