/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Communicationexternalrecipient_RequestCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Communicationexternalrecipient_RequestCompound::Communicationexternalrecipient_RequestCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Communicationexternalrecipient_RequestCompound::Communicationexternalrecipient_RequestCompound() {
    this->initializeModel();
}

Communicationexternalrecipient_RequestCompound::~Communicationexternalrecipient_RequestCompound() {}

void Communicationexternalrecipient_RequestCompound::initializeModel() {

    m_pki_communicationexternalrecipient_id_isSet = false;
    m_pki_communicationexternalrecipient_id_isValid = false;

    m_s_email_address_isSet = false;
    m_s_email_address_isValid = false;

    m_s_phone_e164_isSet = false;
    m_s_phone_e164_isValid = false;

    m_e_communicationexternalrecipient_type_isSet = false;
    m_e_communicationexternalrecipient_type_isValid = false;

    m_s_communicationexternalrecipient_name_isSet = false;
    m_s_communicationexternalrecipient_name_isValid = false;
}

void Communicationexternalrecipient_RequestCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Communicationexternalrecipient_RequestCompound::fromJsonObject(QJsonObject json) {

    m_pki_communicationexternalrecipient_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_communicationexternalrecipient_id, json[QString("pkiCommunicationexternalrecipientID")]);
    m_pki_communicationexternalrecipient_id_isSet = !json[QString("pkiCommunicationexternalrecipientID")].isNull() && m_pki_communicationexternalrecipient_id_isValid;

    m_s_email_address_isValid = ::Ezmaxapi::fromJsonValue(m_s_email_address, json[QString("sEmailAddress")]);
    m_s_email_address_isSet = !json[QString("sEmailAddress")].isNull() && m_s_email_address_isValid;

    m_s_phone_e164_isValid = ::Ezmaxapi::fromJsonValue(m_s_phone_e164, json[QString("sPhoneE164")]);
    m_s_phone_e164_isSet = !json[QString("sPhoneE164")].isNull() && m_s_phone_e164_isValid;

    m_e_communicationexternalrecipient_type_isValid = ::Ezmaxapi::fromJsonValue(m_e_communicationexternalrecipient_type, json[QString("eCommunicationexternalrecipientType")]);
    m_e_communicationexternalrecipient_type_isSet = !json[QString("eCommunicationexternalrecipientType")].isNull() && m_e_communicationexternalrecipient_type_isValid;

    m_s_communicationexternalrecipient_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_communicationexternalrecipient_name, json[QString("sCommunicationexternalrecipientName")]);
    m_s_communicationexternalrecipient_name_isSet = !json[QString("sCommunicationexternalrecipientName")].isNull() && m_s_communicationexternalrecipient_name_isValid;
}

QString Communicationexternalrecipient_RequestCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Communicationexternalrecipient_RequestCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_communicationexternalrecipient_id_isSet) {
        obj.insert(QString("pkiCommunicationexternalrecipientID"), ::Ezmaxapi::toJsonValue(m_pki_communicationexternalrecipient_id));
    }
    if (m_s_email_address_isSet) {
        obj.insert(QString("sEmailAddress"), ::Ezmaxapi::toJsonValue(m_s_email_address));
    }
    if (m_s_phone_e164_isSet) {
        obj.insert(QString("sPhoneE164"), ::Ezmaxapi::toJsonValue(m_s_phone_e164));
    }
    if (m_e_communicationexternalrecipient_type.isSet()) {
        obj.insert(QString("eCommunicationexternalrecipientType"), ::Ezmaxapi::toJsonValue(m_e_communicationexternalrecipient_type));
    }
    if (m_s_communicationexternalrecipient_name_isSet) {
        obj.insert(QString("sCommunicationexternalrecipientName"), ::Ezmaxapi::toJsonValue(m_s_communicationexternalrecipient_name));
    }
    return obj;
}

qint32 Communicationexternalrecipient_RequestCompound::getPkiCommunicationexternalrecipientId() const {
    return m_pki_communicationexternalrecipient_id;
}
void Communicationexternalrecipient_RequestCompound::setPkiCommunicationexternalrecipientId(const qint32 &pki_communicationexternalrecipient_id) {
    m_pki_communicationexternalrecipient_id = pki_communicationexternalrecipient_id;
    m_pki_communicationexternalrecipient_id_isSet = true;
}

bool Communicationexternalrecipient_RequestCompound::is_pki_communicationexternalrecipient_id_Set() const{
    return m_pki_communicationexternalrecipient_id_isSet;
}

bool Communicationexternalrecipient_RequestCompound::is_pki_communicationexternalrecipient_id_Valid() const{
    return m_pki_communicationexternalrecipient_id_isValid;
}

QString Communicationexternalrecipient_RequestCompound::getSEmailAddress() const {
    return m_s_email_address;
}
void Communicationexternalrecipient_RequestCompound::setSEmailAddress(const QString &s_email_address) {
    m_s_email_address = s_email_address;
    m_s_email_address_isSet = true;
}

bool Communicationexternalrecipient_RequestCompound::is_s_email_address_Set() const{
    return m_s_email_address_isSet;
}

bool Communicationexternalrecipient_RequestCompound::is_s_email_address_Valid() const{
    return m_s_email_address_isValid;
}

QString Communicationexternalrecipient_RequestCompound::getSPhoneE164() const {
    return m_s_phone_e164;
}
void Communicationexternalrecipient_RequestCompound::setSPhoneE164(const QString &s_phone_e164) {
    m_s_phone_e164 = s_phone_e164;
    m_s_phone_e164_isSet = true;
}

bool Communicationexternalrecipient_RequestCompound::is_s_phone_e164_Set() const{
    return m_s_phone_e164_isSet;
}

bool Communicationexternalrecipient_RequestCompound::is_s_phone_e164_Valid() const{
    return m_s_phone_e164_isValid;
}

Field_eCommunicationexternalrecipientType Communicationexternalrecipient_RequestCompound::getECommunicationexternalrecipientType() const {
    return m_e_communicationexternalrecipient_type;
}
void Communicationexternalrecipient_RequestCompound::setECommunicationexternalrecipientType(const Field_eCommunicationexternalrecipientType &e_communicationexternalrecipient_type) {
    m_e_communicationexternalrecipient_type = e_communicationexternalrecipient_type;
    m_e_communicationexternalrecipient_type_isSet = true;
}

bool Communicationexternalrecipient_RequestCompound::is_e_communicationexternalrecipient_type_Set() const{
    return m_e_communicationexternalrecipient_type_isSet;
}

bool Communicationexternalrecipient_RequestCompound::is_e_communicationexternalrecipient_type_Valid() const{
    return m_e_communicationexternalrecipient_type_isValid;
}

QString Communicationexternalrecipient_RequestCompound::getSCommunicationexternalrecipientName() const {
    return m_s_communicationexternalrecipient_name;
}
void Communicationexternalrecipient_RequestCompound::setSCommunicationexternalrecipientName(const QString &s_communicationexternalrecipient_name) {
    m_s_communicationexternalrecipient_name = s_communicationexternalrecipient_name;
    m_s_communicationexternalrecipient_name_isSet = true;
}

bool Communicationexternalrecipient_RequestCompound::is_s_communicationexternalrecipient_name_Set() const{
    return m_s_communicationexternalrecipient_name_isSet;
}

bool Communicationexternalrecipient_RequestCompound::is_s_communicationexternalrecipient_name_Valid() const{
    return m_s_communicationexternalrecipient_name_isValid;
}

bool Communicationexternalrecipient_RequestCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_communicationexternalrecipient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_phone_e164_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_communicationexternalrecipient_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_communicationexternalrecipient_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Communicationexternalrecipient_RequestCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace Ezmaxapi
