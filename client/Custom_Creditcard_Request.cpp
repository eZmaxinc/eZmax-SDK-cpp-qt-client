/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_Creditcard_Request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_Creditcard_Request::Custom_Creditcard_Request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_Creditcard_Request::Custom_Creditcard_Request() {
    this->initializeModel();
}

Custom_Creditcard_Request::~Custom_Creditcard_Request() {}

void Custom_Creditcard_Request::initializeModel() {

    m_fks_creditcardtoken_id_isSet = false;
    m_fks_creditcardtoken_id_isValid = false;

    m_s_creditcard_cvv_isSet = false;
    m_s_creditcard_cvv_isValid = false;

    m_obj_creditcarddetail_isSet = false;
    m_obj_creditcarddetail_isValid = false;
}

void Custom_Creditcard_Request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Custom_Creditcard_Request::fromJsonObject(QJsonObject json) {

    m_fks_creditcardtoken_id_isValid = ::Ezmaxapi::fromJsonValue(m_fks_creditcardtoken_id, json[QString("fksCreditcardtokenID")]);
    m_fks_creditcardtoken_id_isSet = !json[QString("fksCreditcardtokenID")].isNull() && m_fks_creditcardtoken_id_isValid;

    m_s_creditcard_cvv_isValid = ::Ezmaxapi::fromJsonValue(m_s_creditcard_cvv, json[QString("sCreditcardCVV")]);
    m_s_creditcard_cvv_isSet = !json[QString("sCreditcardCVV")].isNull() && m_s_creditcard_cvv_isValid;

    m_obj_creditcarddetail_isValid = ::Ezmaxapi::fromJsonValue(m_obj_creditcarddetail, json[QString("objCreditcarddetail")]);
    m_obj_creditcarddetail_isSet = !json[QString("objCreditcarddetail")].isNull() && m_obj_creditcarddetail_isValid;
}

QString Custom_Creditcard_Request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Custom_Creditcard_Request::asJsonObject() const {
    QJsonObject obj;
    if (m_fks_creditcardtoken_id_isSet) {
        obj.insert(QString("fksCreditcardtokenID"), ::Ezmaxapi::toJsonValue(m_fks_creditcardtoken_id));
    }
    if (m_s_creditcard_cvv_isSet) {
        obj.insert(QString("sCreditcardCVV"), ::Ezmaxapi::toJsonValue(m_s_creditcard_cvv));
    }
    if (m_obj_creditcarddetail.isSet()) {
        obj.insert(QString("objCreditcarddetail"), ::Ezmaxapi::toJsonValue(m_obj_creditcarddetail));
    }
    return obj;
}

QString Custom_Creditcard_Request::getFksCreditcardtokenId() const {
    return m_fks_creditcardtoken_id;
}
void Custom_Creditcard_Request::setFksCreditcardtokenId(const QString &fks_creditcardtoken_id) {
    m_fks_creditcardtoken_id = fks_creditcardtoken_id;
    m_fks_creditcardtoken_id_isSet = true;
}

bool Custom_Creditcard_Request::is_fks_creditcardtoken_id_Set() const{
    return m_fks_creditcardtoken_id_isSet;
}

bool Custom_Creditcard_Request::is_fks_creditcardtoken_id_Valid() const{
    return m_fks_creditcardtoken_id_isValid;
}

QString Custom_Creditcard_Request::getSCreditcardCvv() const {
    return m_s_creditcard_cvv;
}
void Custom_Creditcard_Request::setSCreditcardCvv(const QString &s_creditcard_cvv) {
    m_s_creditcard_cvv = s_creditcard_cvv;
    m_s_creditcard_cvv_isSet = true;
}

bool Custom_Creditcard_Request::is_s_creditcard_cvv_Set() const{
    return m_s_creditcard_cvv_isSet;
}

bool Custom_Creditcard_Request::is_s_creditcard_cvv_Valid() const{
    return m_s_creditcard_cvv_isValid;
}

Creditcarddetail_Request Custom_Creditcard_Request::getObjCreditcarddetail() const {
    return m_obj_creditcarddetail;
}
void Custom_Creditcard_Request::setObjCreditcarddetail(const Creditcarddetail_Request &obj_creditcarddetail) {
    m_obj_creditcarddetail = obj_creditcarddetail;
    m_obj_creditcarddetail_isSet = true;
}

bool Custom_Creditcard_Request::is_obj_creditcarddetail_Set() const{
    return m_obj_creditcarddetail_isSet;
}

bool Custom_Creditcard_Request::is_obj_creditcarddetail_Valid() const{
    return m_obj_creditcarddetail_isValid;
}

bool Custom_Creditcard_Request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fks_creditcardtoken_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_creditcard_cvv_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_creditcarddetail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Custom_Creditcard_Request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fks_creditcardtoken_id_isValid && m_s_creditcard_cvv_isValid && m_obj_creditcarddetail_isValid && true;
}

} // namespace Ezmaxapi
