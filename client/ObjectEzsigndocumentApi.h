/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef _ObjectEzsigndocumentApi_H
#define _ObjectEzsigndocumentApi_H

#include "Helpers.h"
#include "HttpRequest.h"
#include "ServerConfiguration.h"
#include "Oauth.h"

#include "Common_Response_Error.h"
#include "Common_Response_Error_EzsignformValidation.h"
#include "Common_Response_Error_sTemporaryFileUrl.h"
#include "Ezsigndocument_applyEzsigntemplate_v1_Request.h"
#include "Ezsigndocument_applyEzsigntemplate_v1_Response.h"
#include "Ezsigndocument_applyEzsigntemplate_v2_Request.h"
#include "Ezsigndocument_applyEzsigntemplate_v2_Response.h"
#include "Ezsigndocument_applyEzsigntemplateglobal_v1_Request.h"
#include "Ezsigndocument_applyEzsigntemplateglobal_v1_Response.h"
#include "Ezsigndocument_createEzsignelementsPositionedByWord_v1_Request.h"
#include "Ezsigndocument_createEzsignelementsPositionedByWord_v1_Response.h"
#include "Ezsigndocument_createObject_v1_Request.h"
#include "Ezsigndocument_createObject_v1_Response.h"
#include "Ezsigndocument_createObject_v2_Request.h"
#include "Ezsigndocument_createObject_v2_Response.h"
#include "Ezsigndocument_createObject_v3_Request.h"
#include "Ezsigndocument_createObject_v3_Response.h"
#include "Ezsigndocument_declineToSign_v1_Request.h"
#include "Ezsigndocument_declineToSign_v1_Response.h"
#include "Ezsigndocument_deleteObject_v1_Response.h"
#include "Ezsigndocument_editEzsignannotations_v1_Request.h"
#include "Ezsigndocument_editEzsignannotations_v1_Response.h"
#include "Ezsigndocument_editEzsignformfieldgroups_v1_Request.h"
#include "Ezsigndocument_editEzsignformfieldgroups_v1_Response.h"
#include "Ezsigndocument_editEzsignsignatures_v1_Request.h"
#include "Ezsigndocument_editEzsignsignatures_v1_Response.h"
#include "Ezsigndocument_editObject_v1_Request.h"
#include "Ezsigndocument_editObject_v1_Response.h"
#include "Ezsigndocument_endPrematurely_v1_Response.h"
#include "Ezsigndocument_extractText_v1_Request.h"
#include "Ezsigndocument_extractText_v1_Response.h"
#include "Ezsigndocument_flatten_v1_Response.h"
#include "Ezsigndocument_getActionableElements_v1_Response.h"
#include "Ezsigndocument_getAttachments_v1_Response.h"
#include "Ezsigndocument_getCompletedElements_v1_Response.h"
#include "Ezsigndocument_getDownloadUrl_v1_Response.h"
#include "Ezsigndocument_getEzsignannotations_v1_Response.h"
#include "Ezsigndocument_getEzsigndiscussions_v1_Response.h"
#include "Ezsigndocument_getEzsignformfieldgroups_v1_Response.h"
#include "Ezsigndocument_getEzsignpages_v1_Response.h"
#include "Ezsigndocument_getEzsignsignaturesAutomatic_v1_Response.h"
#include "Ezsigndocument_getEzsignsignatures_v1_Response.h"
#include "Ezsigndocument_getFormData_v1_Response.h"
#include "Ezsigndocument_getObject_v1_Response.h"
#include "Ezsigndocument_getObject_v2_Response.h"
#include "Ezsigndocument_getTemporaryProof_v1_Response.h"
#include "Ezsigndocument_getWordsPositions_v1_Request.h"
#include "Ezsigndocument_getWordsPositions_v1_Response.h"
#include "Ezsigndocument_patchObject_v1_Request.h"
#include "Ezsigndocument_patchObject_v1_Response.h"
#include "Ezsigndocument_prefillEzsignform_v1_Request.h"
#include "Ezsigndocument_prefillEzsignform_v1_Response.h"
#include "Ezsigndocument_submitEzsignform_v1_Request.h"
#include "Ezsigndocument_submitEzsignform_v1_Response.h"
#include "Ezsigndocument_unsend_v1_Response.h"
#include "HttpFileElement.h"
#include "Object.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace Ezmaxapi {

class ObjectEzsigndocumentApi : public QObject {
    Q_OBJECT

public:
    ObjectEzsigndocumentApi(const int timeOut = 0);
    ~ObjectEzsigndocumentApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, ServerVariable> &variables = QMap<QString, ServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, ServerVariable> &variables =  QMap<QString, ServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, ServerVariable> &variables =  QMap<QString, ServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_apply_ezsigntemplate_v1_request Ezsigndocument_applyEzsigntemplate_v1_Request [required]
    */
    Q_DECL_DEPRECATED virtual void ezsigndocumentApplyEzsigntemplateV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_applyEzsigntemplate_v1_Request &ezsigndocument_apply_ezsigntemplate_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_apply_ezsigntemplate_v2_request Ezsigndocument_applyEzsigntemplate_v2_Request [required]
    */
    virtual void ezsigndocumentApplyEzsigntemplateV2(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_applyEzsigntemplate_v2_Request &ezsigndocument_apply_ezsigntemplate_v2_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_apply_ezsigntemplateglobal_v1_request Ezsigndocument_applyEzsigntemplateglobal_v1_Request [required]
    */
    virtual void ezsigndocumentApplyEzsigntemplateglobalV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_applyEzsigntemplateglobal_v1_Request &ezsigndocument_apply_ezsigntemplateglobal_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_create_ezsignelements_positioned_by_word_v1_request Ezsigndocument_createEzsignelementsPositionedByWord_v1_Request [required]
    */
    virtual void ezsigndocumentCreateEzsignelementsPositionedByWordV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_createEzsignelementsPositionedByWord_v1_Request &ezsigndocument_create_ezsignelements_positioned_by_word_v1_request);

    /**
    * @param[in]  ezsigndocument_create_object_v1_request QList<Ezsigndocument_createObject_v1_Request> [required]
    */
    Q_DECL_DEPRECATED virtual void ezsigndocumentCreateObjectV1(const QList<Ezsigndocument_createObject_v1_Request> &ezsigndocument_create_object_v1_request);

    /**
    * @param[in]  ezsigndocument_create_object_v2_request Ezsigndocument_createObject_v2_Request [required]
    */
    Q_DECL_DEPRECATED virtual void ezsigndocumentCreateObjectV2(const Ezsigndocument_createObject_v2_Request &ezsigndocument_create_object_v2_request);

    /**
    * @param[in]  ezsigndocument_create_object_v3_request Ezsigndocument_createObject_v3_Request [required]
    */
    virtual void ezsigndocumentCreateObjectV3(const Ezsigndocument_createObject_v3_Request &ezsigndocument_create_object_v3_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_decline_to_sign_v1_request Ezsigndocument_declineToSign_v1_Request [required]
    */
    virtual void ezsigndocumentDeclineToSignV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_declineToSign_v1_Request &ezsigndocument_decline_to_sign_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentDeleteObjectV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_edit_ezsignannotations_v1_request Ezsigndocument_editEzsignannotations_v1_Request [required]
    */
    virtual void ezsigndocumentEditEzsignannotationsV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_editEzsignannotations_v1_Request &ezsigndocument_edit_ezsignannotations_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_edit_ezsignformfieldgroups_v1_request Ezsigndocument_editEzsignformfieldgroups_v1_Request [required]
    */
    virtual void ezsigndocumentEditEzsignformfieldgroupsV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_editEzsignformfieldgroups_v1_Request &ezsigndocument_edit_ezsignformfieldgroups_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_edit_ezsignsignatures_v1_request Ezsigndocument_editEzsignsignatures_v1_Request [required]
    */
    virtual void ezsigndocumentEditEzsignsignaturesV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_editEzsignsignatures_v1_Request &ezsigndocument_edit_ezsignsignatures_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_edit_object_v1_request Ezsigndocument_editObject_v1_Request [required]
    */
    virtual void ezsigndocumentEditObjectV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_editObject_v1_Request &ezsigndocument_edit_object_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  body Object [required]
    */
    virtual void ezsigndocumentEndPrematurelyV1(const qint32 &pki_ezsigndocument_id, const Object &body);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_extract_text_v1_request Ezsigndocument_extractText_v1_Request [required]
    */
    virtual void ezsigndocumentExtractTextV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_extractText_v1_Request &ezsigndocument_extract_text_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  body Object [required]
    */
    virtual void ezsigndocumentFlattenV1(const qint32 &pki_ezsigndocument_id, const Object &body);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetActionableElementsV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetAttachmentsV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetCompletedElementsV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  e_document_type QString [required]
    */
    virtual void ezsigndocumentGetDownloadUrlV1(const qint32 &pki_ezsigndocument_id, const QString &e_document_type);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetEzsignannotationsV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetEzsigndiscussionsV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetEzsignformfieldgroupsV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetEzsignpagesV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetEzsignsignaturesAutomaticV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetEzsignsignaturesV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetFormDataV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    Q_DECL_DEPRECATED virtual void ezsigndocumentGetObjectV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetObjectV2(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    */
    virtual void ezsigndocumentGetTemporaryProofV1(const qint32 &pki_ezsigndocument_id);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_get_words_positions_v1_request Ezsigndocument_getWordsPositions_v1_Request [required]
    */
    virtual void ezsigndocumentGetWordsPositionsV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_getWordsPositions_v1_Request &ezsigndocument_get_words_positions_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_patch_object_v1_request Ezsigndocument_patchObject_v1_Request [required]
    */
    virtual void ezsigndocumentPatchObjectV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_patchObject_v1_Request &ezsigndocument_patch_object_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_prefill_ezsignform_v1_request Ezsigndocument_prefillEzsignform_v1_Request [required]
    */
    virtual void ezsigndocumentPrefillEzsignformV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_prefillEzsignform_v1_Request &ezsigndocument_prefill_ezsignform_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  ezsigndocument_submit_ezsignform_v1_request Ezsigndocument_submitEzsignform_v1_Request [required]
    */
    virtual void ezsigndocumentSubmitEzsignformV1(const qint32 &pki_ezsigndocument_id, const Ezsigndocument_submitEzsignform_v1_Request &ezsigndocument_submit_ezsignform_v1_request);

    /**
    * @param[in]  pki_ezsigndocument_id qint32 [required]
    * @param[in]  body Object [required]
    */
    virtual void ezsigndocumentUnsendV1(const qint32 &pki_ezsigndocument_id, const Object &body);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<ServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    HttpRequestInput _latestInput;
    HttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void ezsigndocumentApplyEzsigntemplateV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentApplyEzsigntemplateV2Callback(HttpRequestWorker *worker);
    void ezsigndocumentApplyEzsigntemplateglobalV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentCreateObjectV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentCreateObjectV2Callback(HttpRequestWorker *worker);
    void ezsigndocumentCreateObjectV3Callback(HttpRequestWorker *worker);
    void ezsigndocumentDeclineToSignV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentDeleteObjectV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentEditEzsignannotationsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentEditEzsignformfieldgroupsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentEditEzsignsignaturesV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentEditObjectV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentEndPrematurelyV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentExtractTextV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentFlattenV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetActionableElementsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetAttachmentsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetCompletedElementsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetDownloadUrlV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetEzsignannotationsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetEzsigndiscussionsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetEzsignformfieldgroupsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetEzsignpagesV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetEzsignsignaturesAutomaticV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetEzsignsignaturesV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetFormDataV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetObjectV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetObjectV2Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetTemporaryProofV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentGetWordsPositionsV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentPatchObjectV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentPrefillEzsignformV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentSubmitEzsignformV1Callback(HttpRequestWorker *worker);
    void ezsigndocumentUnsendV1Callback(HttpRequestWorker *worker);

Q_SIGNALS:

    void ezsigndocumentApplyEzsigntemplateV1Signal(Ezsigndocument_applyEzsigntemplate_v1_Response summary);
    void ezsigndocumentApplyEzsigntemplateV2Signal(Ezsigndocument_applyEzsigntemplate_v2_Response summary);
    void ezsigndocumentApplyEzsigntemplateglobalV1Signal(Ezsigndocument_applyEzsigntemplateglobal_v1_Response summary);
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1Signal(Ezsigndocument_createEzsignelementsPositionedByWord_v1_Response summary);
    void ezsigndocumentCreateObjectV1Signal(Ezsigndocument_createObject_v1_Response summary);
    void ezsigndocumentCreateObjectV2Signal(Ezsigndocument_createObject_v2_Response summary);
    void ezsigndocumentCreateObjectV3Signal(Ezsigndocument_createObject_v3_Response summary);
    void ezsigndocumentDeclineToSignV1Signal(Ezsigndocument_declineToSign_v1_Response summary);
    void ezsigndocumentDeleteObjectV1Signal(Ezsigndocument_deleteObject_v1_Response summary);
    void ezsigndocumentEditEzsignannotationsV1Signal(Ezsigndocument_editEzsignannotations_v1_Response summary);
    void ezsigndocumentEditEzsignformfieldgroupsV1Signal(Ezsigndocument_editEzsignformfieldgroups_v1_Response summary);
    void ezsigndocumentEditEzsignsignaturesV1Signal(Ezsigndocument_editEzsignsignatures_v1_Response summary);
    void ezsigndocumentEditObjectV1Signal(Ezsigndocument_editObject_v1_Response summary);
    void ezsigndocumentEndPrematurelyV1Signal(Ezsigndocument_endPrematurely_v1_Response summary);
    void ezsigndocumentExtractTextV1Signal(Ezsigndocument_extractText_v1_Response summary);
    void ezsigndocumentFlattenV1Signal(Ezsigndocument_flatten_v1_Response summary);
    void ezsigndocumentGetActionableElementsV1Signal(Ezsigndocument_getActionableElements_v1_Response summary);
    void ezsigndocumentGetAttachmentsV1Signal(Ezsigndocument_getAttachments_v1_Response summary);
    void ezsigndocumentGetCompletedElementsV1Signal(Ezsigndocument_getCompletedElements_v1_Response summary);
    void ezsigndocumentGetDownloadUrlV1Signal(Ezsigndocument_getDownloadUrl_v1_Response summary);
    void ezsigndocumentGetEzsignannotationsV1Signal(Ezsigndocument_getEzsignannotations_v1_Response summary);
    void ezsigndocumentGetEzsigndiscussionsV1Signal(Ezsigndocument_getEzsigndiscussions_v1_Response summary);
    void ezsigndocumentGetEzsignformfieldgroupsV1Signal(Ezsigndocument_getEzsignformfieldgroups_v1_Response summary);
    void ezsigndocumentGetEzsignpagesV1Signal(Ezsigndocument_getEzsignpages_v1_Response summary);
    void ezsigndocumentGetEzsignsignaturesAutomaticV1Signal(Ezsigndocument_getEzsignsignaturesAutomatic_v1_Response summary);
    void ezsigndocumentGetEzsignsignaturesV1Signal(Ezsigndocument_getEzsignsignatures_v1_Response summary);
    void ezsigndocumentGetFormDataV1Signal(Ezsigndocument_getFormData_v1_Response summary);
    void ezsigndocumentGetObjectV1Signal(Ezsigndocument_getObject_v1_Response summary);
    void ezsigndocumentGetObjectV2Signal(Ezsigndocument_getObject_v2_Response summary);
    void ezsigndocumentGetTemporaryProofV1Signal(Ezsigndocument_getTemporaryProof_v1_Response summary);
    void ezsigndocumentGetWordsPositionsV1Signal(Ezsigndocument_getWordsPositions_v1_Response summary);
    void ezsigndocumentPatchObjectV1Signal(Ezsigndocument_patchObject_v1_Response summary);
    void ezsigndocumentPrefillEzsignformV1Signal(Ezsigndocument_prefillEzsignform_v1_Response summary);
    void ezsigndocumentSubmitEzsignformV1Signal(Ezsigndocument_submitEzsignform_v1_Response summary);
    void ezsigndocumentUnsendV1Signal(Ezsigndocument_unsend_v1_Response summary);


    void ezsigndocumentApplyEzsigntemplateV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_applyEzsigntemplate_v1_Response summary);
    void ezsigndocumentApplyEzsigntemplateV2SignalFull(HttpRequestWorker *worker, Ezsigndocument_applyEzsigntemplate_v2_Response summary);
    void ezsigndocumentApplyEzsigntemplateglobalV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_applyEzsigntemplateglobal_v1_Response summary);
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_createEzsignelementsPositionedByWord_v1_Response summary);
    void ezsigndocumentCreateObjectV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_createObject_v1_Response summary);
    void ezsigndocumentCreateObjectV2SignalFull(HttpRequestWorker *worker, Ezsigndocument_createObject_v2_Response summary);
    void ezsigndocumentCreateObjectV3SignalFull(HttpRequestWorker *worker, Ezsigndocument_createObject_v3_Response summary);
    void ezsigndocumentDeclineToSignV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_declineToSign_v1_Response summary);
    void ezsigndocumentDeleteObjectV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_deleteObject_v1_Response summary);
    void ezsigndocumentEditEzsignannotationsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_editEzsignannotations_v1_Response summary);
    void ezsigndocumentEditEzsignformfieldgroupsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_editEzsignformfieldgroups_v1_Response summary);
    void ezsigndocumentEditEzsignsignaturesV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_editEzsignsignatures_v1_Response summary);
    void ezsigndocumentEditObjectV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_editObject_v1_Response summary);
    void ezsigndocumentEndPrematurelyV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_endPrematurely_v1_Response summary);
    void ezsigndocumentExtractTextV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_extractText_v1_Response summary);
    void ezsigndocumentFlattenV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_flatten_v1_Response summary);
    void ezsigndocumentGetActionableElementsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getActionableElements_v1_Response summary);
    void ezsigndocumentGetAttachmentsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getAttachments_v1_Response summary);
    void ezsigndocumentGetCompletedElementsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getCompletedElements_v1_Response summary);
    void ezsigndocumentGetDownloadUrlV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getDownloadUrl_v1_Response summary);
    void ezsigndocumentGetEzsignannotationsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getEzsignannotations_v1_Response summary);
    void ezsigndocumentGetEzsigndiscussionsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getEzsigndiscussions_v1_Response summary);
    void ezsigndocumentGetEzsignformfieldgroupsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getEzsignformfieldgroups_v1_Response summary);
    void ezsigndocumentGetEzsignpagesV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getEzsignpages_v1_Response summary);
    void ezsigndocumentGetEzsignsignaturesAutomaticV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getEzsignsignaturesAutomatic_v1_Response summary);
    void ezsigndocumentGetEzsignsignaturesV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getEzsignsignatures_v1_Response summary);
    void ezsigndocumentGetFormDataV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getFormData_v1_Response summary);
    void ezsigndocumentGetObjectV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getObject_v1_Response summary);
    void ezsigndocumentGetObjectV2SignalFull(HttpRequestWorker *worker, Ezsigndocument_getObject_v2_Response summary);
    void ezsigndocumentGetTemporaryProofV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getTemporaryProof_v1_Response summary);
    void ezsigndocumentGetWordsPositionsV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_getWordsPositions_v1_Response summary);
    void ezsigndocumentPatchObjectV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_patchObject_v1_Response summary);
    void ezsigndocumentPrefillEzsignformV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_prefillEzsignform_v1_Response summary);
    void ezsigndocumentSubmitEzsignformV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_submitEzsignform_v1_Response summary);
    void ezsigndocumentUnsendV1SignalFull(HttpRequestWorker *worker, Ezsigndocument_unsend_v1_Response summary);

    Q_DECL_DEPRECATED_X("Use ezsigndocumentApplyEzsigntemplateV1SignalError() instead")
    void ezsigndocumentApplyEzsigntemplateV1SignalE(Ezsigndocument_applyEzsigntemplate_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentApplyEzsigntemplateV1SignalError(Ezsigndocument_applyEzsigntemplate_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentApplyEzsigntemplateV2SignalError() instead")
    void ezsigndocumentApplyEzsigntemplateV2SignalE(Ezsigndocument_applyEzsigntemplate_v2_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentApplyEzsigntemplateV2SignalError(Ezsigndocument_applyEzsigntemplate_v2_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentApplyEzsigntemplateglobalV1SignalError() instead")
    void ezsigndocumentApplyEzsigntemplateglobalV1SignalE(Ezsigndocument_applyEzsigntemplateglobal_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentApplyEzsigntemplateglobalV1SignalError(Ezsigndocument_applyEzsigntemplateglobal_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalError() instead")
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalE(Ezsigndocument_createEzsignelementsPositionedByWord_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalError(Ezsigndocument_createEzsignelementsPositionedByWord_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateObjectV1SignalError() instead")
    void ezsigndocumentCreateObjectV1SignalE(Ezsigndocument_createObject_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateObjectV1SignalError(Ezsigndocument_createObject_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateObjectV2SignalError() instead")
    void ezsigndocumentCreateObjectV2SignalE(Ezsigndocument_createObject_v2_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateObjectV2SignalError(Ezsigndocument_createObject_v2_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateObjectV3SignalError() instead")
    void ezsigndocumentCreateObjectV3SignalE(Ezsigndocument_createObject_v3_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateObjectV3SignalError(Ezsigndocument_createObject_v3_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentDeclineToSignV1SignalError() instead")
    void ezsigndocumentDeclineToSignV1SignalE(Ezsigndocument_declineToSign_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentDeclineToSignV1SignalError(Ezsigndocument_declineToSign_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentDeleteObjectV1SignalError() instead")
    void ezsigndocumentDeleteObjectV1SignalE(Ezsigndocument_deleteObject_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentDeleteObjectV1SignalError(Ezsigndocument_deleteObject_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditEzsignannotationsV1SignalError() instead")
    void ezsigndocumentEditEzsignannotationsV1SignalE(Ezsigndocument_editEzsignannotations_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditEzsignannotationsV1SignalError(Ezsigndocument_editEzsignannotations_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditEzsignformfieldgroupsV1SignalError() instead")
    void ezsigndocumentEditEzsignformfieldgroupsV1SignalE(Ezsigndocument_editEzsignformfieldgroups_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditEzsignformfieldgroupsV1SignalError(Ezsigndocument_editEzsignformfieldgroups_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditEzsignsignaturesV1SignalError() instead")
    void ezsigndocumentEditEzsignsignaturesV1SignalE(Ezsigndocument_editEzsignsignatures_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditEzsignsignaturesV1SignalError(Ezsigndocument_editEzsignsignatures_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditObjectV1SignalError() instead")
    void ezsigndocumentEditObjectV1SignalE(Ezsigndocument_editObject_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditObjectV1SignalError(Ezsigndocument_editObject_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEndPrematurelyV1SignalError() instead")
    void ezsigndocumentEndPrematurelyV1SignalE(Ezsigndocument_endPrematurely_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEndPrematurelyV1SignalError(Ezsigndocument_endPrematurely_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentExtractTextV1SignalError() instead")
    void ezsigndocumentExtractTextV1SignalE(Ezsigndocument_extractText_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentExtractTextV1SignalError(Ezsigndocument_extractText_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentFlattenV1SignalError() instead")
    void ezsigndocumentFlattenV1SignalE(Ezsigndocument_flatten_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentFlattenV1SignalError(Ezsigndocument_flatten_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetActionableElementsV1SignalError() instead")
    void ezsigndocumentGetActionableElementsV1SignalE(Ezsigndocument_getActionableElements_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetActionableElementsV1SignalError(Ezsigndocument_getActionableElements_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetAttachmentsV1SignalError() instead")
    void ezsigndocumentGetAttachmentsV1SignalE(Ezsigndocument_getAttachments_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetAttachmentsV1SignalError(Ezsigndocument_getAttachments_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetCompletedElementsV1SignalError() instead")
    void ezsigndocumentGetCompletedElementsV1SignalE(Ezsigndocument_getCompletedElements_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetCompletedElementsV1SignalError(Ezsigndocument_getCompletedElements_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetDownloadUrlV1SignalError() instead")
    void ezsigndocumentGetDownloadUrlV1SignalE(Ezsigndocument_getDownloadUrl_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetDownloadUrlV1SignalError(Ezsigndocument_getDownloadUrl_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignannotationsV1SignalError() instead")
    void ezsigndocumentGetEzsignannotationsV1SignalE(Ezsigndocument_getEzsignannotations_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignannotationsV1SignalError(Ezsigndocument_getEzsignannotations_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsigndiscussionsV1SignalError() instead")
    void ezsigndocumentGetEzsigndiscussionsV1SignalE(Ezsigndocument_getEzsigndiscussions_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsigndiscussionsV1SignalError(Ezsigndocument_getEzsigndiscussions_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignformfieldgroupsV1SignalError() instead")
    void ezsigndocumentGetEzsignformfieldgroupsV1SignalE(Ezsigndocument_getEzsignformfieldgroups_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignformfieldgroupsV1SignalError(Ezsigndocument_getEzsignformfieldgroups_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignpagesV1SignalError() instead")
    void ezsigndocumentGetEzsignpagesV1SignalE(Ezsigndocument_getEzsignpages_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignpagesV1SignalError(Ezsigndocument_getEzsignpages_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignsignaturesAutomaticV1SignalError() instead")
    void ezsigndocumentGetEzsignsignaturesAutomaticV1SignalE(Ezsigndocument_getEzsignsignaturesAutomatic_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignsignaturesAutomaticV1SignalError(Ezsigndocument_getEzsignsignaturesAutomatic_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignsignaturesV1SignalError() instead")
    void ezsigndocumentGetEzsignsignaturesV1SignalE(Ezsigndocument_getEzsignsignatures_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignsignaturesV1SignalError(Ezsigndocument_getEzsignsignatures_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetFormDataV1SignalError() instead")
    void ezsigndocumentGetFormDataV1SignalE(Ezsigndocument_getFormData_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetFormDataV1SignalError(Ezsigndocument_getFormData_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetObjectV1SignalError() instead")
    void ezsigndocumentGetObjectV1SignalE(Ezsigndocument_getObject_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetObjectV1SignalError(Ezsigndocument_getObject_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetObjectV2SignalError() instead")
    void ezsigndocumentGetObjectV2SignalE(Ezsigndocument_getObject_v2_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetObjectV2SignalError(Ezsigndocument_getObject_v2_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetTemporaryProofV1SignalError() instead")
    void ezsigndocumentGetTemporaryProofV1SignalE(Ezsigndocument_getTemporaryProof_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetTemporaryProofV1SignalError(Ezsigndocument_getTemporaryProof_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetWordsPositionsV1SignalError() instead")
    void ezsigndocumentGetWordsPositionsV1SignalE(Ezsigndocument_getWordsPositions_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetWordsPositionsV1SignalError(Ezsigndocument_getWordsPositions_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentPatchObjectV1SignalError() instead")
    void ezsigndocumentPatchObjectV1SignalE(Ezsigndocument_patchObject_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentPatchObjectV1SignalError(Ezsigndocument_patchObject_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentPrefillEzsignformV1SignalError() instead")
    void ezsigndocumentPrefillEzsignformV1SignalE(Ezsigndocument_prefillEzsignform_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentPrefillEzsignformV1SignalError(Ezsigndocument_prefillEzsignform_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentSubmitEzsignformV1SignalError() instead")
    void ezsigndocumentSubmitEzsignformV1SignalE(Ezsigndocument_submitEzsignform_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentSubmitEzsignformV1SignalError(Ezsigndocument_submitEzsignform_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentUnsendV1SignalError() instead")
    void ezsigndocumentUnsendV1SignalE(Ezsigndocument_unsend_v1_Response summary, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentUnsendV1SignalError(Ezsigndocument_unsend_v1_Response summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use ezsigndocumentApplyEzsigntemplateV1SignalErrorFull() instead")
    void ezsigndocumentApplyEzsigntemplateV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentApplyEzsigntemplateV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentApplyEzsigntemplateV2SignalErrorFull() instead")
    void ezsigndocumentApplyEzsigntemplateV2SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentApplyEzsigntemplateV2SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentApplyEzsigntemplateglobalV1SignalErrorFull() instead")
    void ezsigndocumentApplyEzsigntemplateglobalV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentApplyEzsigntemplateglobalV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalErrorFull() instead")
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateEzsignelementsPositionedByWordV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateObjectV1SignalErrorFull() instead")
    void ezsigndocumentCreateObjectV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateObjectV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateObjectV2SignalErrorFull() instead")
    void ezsigndocumentCreateObjectV2SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateObjectV2SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentCreateObjectV3SignalErrorFull() instead")
    void ezsigndocumentCreateObjectV3SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentCreateObjectV3SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentDeclineToSignV1SignalErrorFull() instead")
    void ezsigndocumentDeclineToSignV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentDeclineToSignV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentDeleteObjectV1SignalErrorFull() instead")
    void ezsigndocumentDeleteObjectV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentDeleteObjectV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditEzsignannotationsV1SignalErrorFull() instead")
    void ezsigndocumentEditEzsignannotationsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditEzsignannotationsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditEzsignformfieldgroupsV1SignalErrorFull() instead")
    void ezsigndocumentEditEzsignformfieldgroupsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditEzsignformfieldgroupsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditEzsignsignaturesV1SignalErrorFull() instead")
    void ezsigndocumentEditEzsignsignaturesV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditEzsignsignaturesV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEditObjectV1SignalErrorFull() instead")
    void ezsigndocumentEditObjectV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEditObjectV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentEndPrematurelyV1SignalErrorFull() instead")
    void ezsigndocumentEndPrematurelyV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentEndPrematurelyV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentExtractTextV1SignalErrorFull() instead")
    void ezsigndocumentExtractTextV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentExtractTextV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentFlattenV1SignalErrorFull() instead")
    void ezsigndocumentFlattenV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentFlattenV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetActionableElementsV1SignalErrorFull() instead")
    void ezsigndocumentGetActionableElementsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetActionableElementsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetAttachmentsV1SignalErrorFull() instead")
    void ezsigndocumentGetAttachmentsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetAttachmentsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetCompletedElementsV1SignalErrorFull() instead")
    void ezsigndocumentGetCompletedElementsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetCompletedElementsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetDownloadUrlV1SignalErrorFull() instead")
    void ezsigndocumentGetDownloadUrlV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetDownloadUrlV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignannotationsV1SignalErrorFull() instead")
    void ezsigndocumentGetEzsignannotationsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignannotationsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsigndiscussionsV1SignalErrorFull() instead")
    void ezsigndocumentGetEzsigndiscussionsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsigndiscussionsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignformfieldgroupsV1SignalErrorFull() instead")
    void ezsigndocumentGetEzsignformfieldgroupsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignformfieldgroupsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignpagesV1SignalErrorFull() instead")
    void ezsigndocumentGetEzsignpagesV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignpagesV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignsignaturesAutomaticV1SignalErrorFull() instead")
    void ezsigndocumentGetEzsignsignaturesAutomaticV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignsignaturesAutomaticV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetEzsignsignaturesV1SignalErrorFull() instead")
    void ezsigndocumentGetEzsignsignaturesV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetEzsignsignaturesV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetFormDataV1SignalErrorFull() instead")
    void ezsigndocumentGetFormDataV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetFormDataV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetObjectV1SignalErrorFull() instead")
    void ezsigndocumentGetObjectV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetObjectV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetObjectV2SignalErrorFull() instead")
    void ezsigndocumentGetObjectV2SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetObjectV2SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetTemporaryProofV1SignalErrorFull() instead")
    void ezsigndocumentGetTemporaryProofV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetTemporaryProofV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentGetWordsPositionsV1SignalErrorFull() instead")
    void ezsigndocumentGetWordsPositionsV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentGetWordsPositionsV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentPatchObjectV1SignalErrorFull() instead")
    void ezsigndocumentPatchObjectV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentPatchObjectV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentPrefillEzsignformV1SignalErrorFull() instead")
    void ezsigndocumentPrefillEzsignformV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentPrefillEzsignformV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentSubmitEzsignformV1SignalErrorFull() instead")
    void ezsigndocumentSubmitEzsignformV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentSubmitEzsignformV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use ezsigndocumentUnsendV1SignalErrorFull() instead")
    void ezsigndocumentUnsendV1SignalEFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void ezsigndocumentUnsendV1SignalErrorFull(HttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace Ezmaxapi
#endif
