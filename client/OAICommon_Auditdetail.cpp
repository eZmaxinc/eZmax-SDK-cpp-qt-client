/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommon_Auditdetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommon_Auditdetail::OAICommon_Auditdetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommon_Auditdetail::OAICommon_Auditdetail() {
    this->initializeModel();
}

OAICommon_Auditdetail::~OAICommon_Auditdetail() {}

void OAICommon_Auditdetail::initializeModel() {

    m_fki_user_id_isSet = false;
    m_fki_user_id_isValid = false;

    m_fki_apikey_id_isSet = false;
    m_fki_apikey_id_isValid = false;

    m_s_user_loginname_isSet = false;
    m_s_user_loginname_isValid = false;

    m_s_user_lastname_isSet = false;
    m_s_user_lastname_isValid = false;

    m_s_user_firstname_isSet = false;
    m_s_user_firstname_isValid = false;

    m_s_apikey_description_x_isSet = false;
    m_s_apikey_description_x_isValid = false;

    m_dt_auditdetail_date_isSet = false;
    m_dt_auditdetail_date_isValid = false;
}

void OAICommon_Auditdetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommon_Auditdetail::fromJsonObject(QJsonObject json) {

    m_fki_user_id_isValid = ::OpenAPI::fromJsonValue(m_fki_user_id, json[QString("fkiUserID")]);
    m_fki_user_id_isSet = !json[QString("fkiUserID")].isNull() && m_fki_user_id_isValid;

    m_fki_apikey_id_isValid = ::OpenAPI::fromJsonValue(m_fki_apikey_id, json[QString("fkiApikeyID")]);
    m_fki_apikey_id_isSet = !json[QString("fkiApikeyID")].isNull() && m_fki_apikey_id_isValid;

    m_s_user_loginname_isValid = ::OpenAPI::fromJsonValue(m_s_user_loginname, json[QString("sUserLoginname")]);
    m_s_user_loginname_isSet = !json[QString("sUserLoginname")].isNull() && m_s_user_loginname_isValid;

    m_s_user_lastname_isValid = ::OpenAPI::fromJsonValue(m_s_user_lastname, json[QString("sUserLastname")]);
    m_s_user_lastname_isSet = !json[QString("sUserLastname")].isNull() && m_s_user_lastname_isValid;

    m_s_user_firstname_isValid = ::OpenAPI::fromJsonValue(m_s_user_firstname, json[QString("sUserFirstname")]);
    m_s_user_firstname_isSet = !json[QString("sUserFirstname")].isNull() && m_s_user_firstname_isValid;

    m_s_apikey_description_x_isValid = ::OpenAPI::fromJsonValue(m_s_apikey_description_x, json[QString("sApikeyDescriptionX")]);
    m_s_apikey_description_x_isSet = !json[QString("sApikeyDescriptionX")].isNull() && m_s_apikey_description_x_isValid;

    m_dt_auditdetail_date_isValid = ::OpenAPI::fromJsonValue(m_dt_auditdetail_date, json[QString("dtAuditdetailDate")]);
    m_dt_auditdetail_date_isSet = !json[QString("dtAuditdetailDate")].isNull() && m_dt_auditdetail_date_isValid;
}

QString OAICommon_Auditdetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommon_Auditdetail::asJsonObject() const {
    QJsonObject obj;
    if (m_fki_user_id_isSet) {
        obj.insert(QString("fkiUserID"), ::OpenAPI::toJsonValue(m_fki_user_id));
    }
    if (m_fki_apikey_id_isSet) {
        obj.insert(QString("fkiApikeyID"), ::OpenAPI::toJsonValue(m_fki_apikey_id));
    }
    if (m_s_user_loginname_isSet) {
        obj.insert(QString("sUserLoginname"), ::OpenAPI::toJsonValue(m_s_user_loginname));
    }
    if (m_s_user_lastname_isSet) {
        obj.insert(QString("sUserLastname"), ::OpenAPI::toJsonValue(m_s_user_lastname));
    }
    if (m_s_user_firstname_isSet) {
        obj.insert(QString("sUserFirstname"), ::OpenAPI::toJsonValue(m_s_user_firstname));
    }
    if (m_s_apikey_description_x_isSet) {
        obj.insert(QString("sApikeyDescriptionX"), ::OpenAPI::toJsonValue(m_s_apikey_description_x));
    }
    if (m_dt_auditdetail_date_isSet) {
        obj.insert(QString("dtAuditdetailDate"), ::OpenAPI::toJsonValue(m_dt_auditdetail_date));
    }
    return obj;
}

qint32 OAICommon_Auditdetail::getFkiUserId() const {
    return m_fki_user_id;
}
void OAICommon_Auditdetail::setFkiUserId(const qint32 &fki_user_id) {
    m_fki_user_id = fki_user_id;
    m_fki_user_id_isSet = true;
}

bool OAICommon_Auditdetail::is_fki_user_id_Set() const{
    return m_fki_user_id_isSet;
}

bool OAICommon_Auditdetail::is_fki_user_id_Valid() const{
    return m_fki_user_id_isValid;
}

qint32 OAICommon_Auditdetail::getFkiApikeyId() const {
    return m_fki_apikey_id;
}
void OAICommon_Auditdetail::setFkiApikeyId(const qint32 &fki_apikey_id) {
    m_fki_apikey_id = fki_apikey_id;
    m_fki_apikey_id_isSet = true;
}

bool OAICommon_Auditdetail::is_fki_apikey_id_Set() const{
    return m_fki_apikey_id_isSet;
}

bool OAICommon_Auditdetail::is_fki_apikey_id_Valid() const{
    return m_fki_apikey_id_isValid;
}

QString OAICommon_Auditdetail::getSUserLoginname() const {
    return m_s_user_loginname;
}
void OAICommon_Auditdetail::setSUserLoginname(const QString &s_user_loginname) {
    m_s_user_loginname = s_user_loginname;
    m_s_user_loginname_isSet = true;
}

bool OAICommon_Auditdetail::is_s_user_loginname_Set() const{
    return m_s_user_loginname_isSet;
}

bool OAICommon_Auditdetail::is_s_user_loginname_Valid() const{
    return m_s_user_loginname_isValid;
}

QString OAICommon_Auditdetail::getSUserLastname() const {
    return m_s_user_lastname;
}
void OAICommon_Auditdetail::setSUserLastname(const QString &s_user_lastname) {
    m_s_user_lastname = s_user_lastname;
    m_s_user_lastname_isSet = true;
}

bool OAICommon_Auditdetail::is_s_user_lastname_Set() const{
    return m_s_user_lastname_isSet;
}

bool OAICommon_Auditdetail::is_s_user_lastname_Valid() const{
    return m_s_user_lastname_isValid;
}

QString OAICommon_Auditdetail::getSUserFirstname() const {
    return m_s_user_firstname;
}
void OAICommon_Auditdetail::setSUserFirstname(const QString &s_user_firstname) {
    m_s_user_firstname = s_user_firstname;
    m_s_user_firstname_isSet = true;
}

bool OAICommon_Auditdetail::is_s_user_firstname_Set() const{
    return m_s_user_firstname_isSet;
}

bool OAICommon_Auditdetail::is_s_user_firstname_Valid() const{
    return m_s_user_firstname_isValid;
}

QString OAICommon_Auditdetail::getSApikeyDescriptionX() const {
    return m_s_apikey_description_x;
}
void OAICommon_Auditdetail::setSApikeyDescriptionX(const QString &s_apikey_description_x) {
    m_s_apikey_description_x = s_apikey_description_x;
    m_s_apikey_description_x_isSet = true;
}

bool OAICommon_Auditdetail::is_s_apikey_description_x_Set() const{
    return m_s_apikey_description_x_isSet;
}

bool OAICommon_Auditdetail::is_s_apikey_description_x_Valid() const{
    return m_s_apikey_description_x_isValid;
}

QString OAICommon_Auditdetail::getDtAuditdetailDate() const {
    return m_dt_auditdetail_date;
}
void OAICommon_Auditdetail::setDtAuditdetailDate(const QString &dt_auditdetail_date) {
    m_dt_auditdetail_date = dt_auditdetail_date;
    m_dt_auditdetail_date_isSet = true;
}

bool OAICommon_Auditdetail::is_dt_auditdetail_date_Set() const{
    return m_dt_auditdetail_date_isSet;
}

bool OAICommon_Auditdetail::is_dt_auditdetail_date_Valid() const{
    return m_dt_auditdetail_date_isValid;
}

bool OAICommon_Auditdetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fki_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_apikey_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_user_loginname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_user_lastname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_user_firstname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_apikey_description_x_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dt_auditdetail_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommon_Auditdetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_fki_user_id_isValid && m_s_user_loginname_isValid && m_s_user_lastname_isValid && m_s_user_firstname_isValid && m_dt_auditdetail_date_isValid && true;
}

} // namespace OpenAPI
