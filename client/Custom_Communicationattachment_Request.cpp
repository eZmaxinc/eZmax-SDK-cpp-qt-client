/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Custom_Communicationattachment_Request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Custom_Communicationattachment_Request::Custom_Communicationattachment_Request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Custom_Communicationattachment_Request::Custom_Communicationattachment_Request() {
    this->initializeModel();
}

Custom_Communicationattachment_Request::~Custom_Communicationattachment_Request() {}

void Custom_Communicationattachment_Request::initializeModel() {

    m_obj_communicationattachment_isSet = false;
    m_obj_communicationattachment_isValid = false;

    m_obj_communicationexternalattachment_isSet = false;
    m_obj_communicationexternalattachment_isValid = false;
}

void Custom_Communicationattachment_Request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Custom_Communicationattachment_Request::fromJsonObject(QJsonObject json) {

    m_obj_communicationattachment_isValid = ::Ezmaxapi::fromJsonValue(m_obj_communicationattachment, json[QString("objCommunicationattachment")]);
    m_obj_communicationattachment_isSet = !json[QString("objCommunicationattachment")].isNull() && m_obj_communicationattachment_isValid;

    m_obj_communicationexternalattachment_isValid = ::Ezmaxapi::fromJsonValue(m_obj_communicationexternalattachment, json[QString("objCommunicationexternalattachment")]);
    m_obj_communicationexternalattachment_isSet = !json[QString("objCommunicationexternalattachment")].isNull() && m_obj_communicationexternalattachment_isValid;
}

QString Custom_Communicationattachment_Request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Custom_Communicationattachment_Request::asJsonObject() const {
    QJsonObject obj;
    if (m_obj_communicationattachment.isSet()) {
        obj.insert(QString("objCommunicationattachment"), ::Ezmaxapi::toJsonValue(m_obj_communicationattachment));
    }
    if (m_obj_communicationexternalattachment.isSet()) {
        obj.insert(QString("objCommunicationexternalattachment"), ::Ezmaxapi::toJsonValue(m_obj_communicationexternalattachment));
    }
    return obj;
}

Communicationattachment_RequestCompound Custom_Communicationattachment_Request::getObjCommunicationattachment() const {
    return m_obj_communicationattachment;
}
void Custom_Communicationattachment_Request::setObjCommunicationattachment(const Communicationattachment_RequestCompound &obj_communicationattachment) {
    m_obj_communicationattachment = obj_communicationattachment;
    m_obj_communicationattachment_isSet = true;
}

bool Custom_Communicationattachment_Request::is_obj_communicationattachment_Set() const{
    return m_obj_communicationattachment_isSet;
}

bool Custom_Communicationattachment_Request::is_obj_communicationattachment_Valid() const{
    return m_obj_communicationattachment_isValid;
}

Common_File Custom_Communicationattachment_Request::getObjCommunicationexternalattachment() const {
    return m_obj_communicationexternalattachment;
}
void Custom_Communicationattachment_Request::setObjCommunicationexternalattachment(const Common_File &obj_communicationexternalattachment) {
    m_obj_communicationexternalattachment = obj_communicationexternalattachment;
    m_obj_communicationexternalattachment_isSet = true;
}

bool Custom_Communicationattachment_Request::is_obj_communicationexternalattachment_Set() const{
    return m_obj_communicationexternalattachment_isSet;
}

bool Custom_Communicationattachment_Request::is_obj_communicationexternalattachment_Valid() const{
    return m_obj_communicationexternalattachment_isValid;
}

bool Custom_Communicationattachment_Request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_obj_communicationattachment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_communicationexternalattachment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Custom_Communicationattachment_Request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace Ezmaxapi
