/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.1.5
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthenticate_authenticate_v2_Response_mPayload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthenticate_authenticate_v2_Response_mPayload::OAIAuthenticate_authenticate_v2_Response_mPayload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthenticate_authenticate_v2_Response_mPayload::OAIAuthenticate_authenticate_v2_Response_mPayload() {
    this->initializeModel();
}

OAIAuthenticate_authenticate_v2_Response_mPayload::~OAIAuthenticate_authenticate_v2_Response_mPayload() {}

void OAIAuthenticate_authenticate_v2_Response_mPayload::initializeModel() {

    m_s_authorization_isSet = false;
    m_s_authorization_isValid = false;

    m_s_secret_isSet = false;
    m_s_secret_isValid = false;
}

void OAIAuthenticate_authenticate_v2_Response_mPayload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthenticate_authenticate_v2_Response_mPayload::fromJsonObject(QJsonObject json) {

    m_s_authorization_isValid = ::OpenAPI::fromJsonValue(s_authorization, json[QString("sAuthorization")]);
    m_s_authorization_isSet = !json[QString("sAuthorization")].isNull() && m_s_authorization_isValid;

    m_s_secret_isValid = ::OpenAPI::fromJsonValue(s_secret, json[QString("sSecret")]);
    m_s_secret_isSet = !json[QString("sSecret")].isNull() && m_s_secret_isValid;
}

QString OAIAuthenticate_authenticate_v2_Response_mPayload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthenticate_authenticate_v2_Response_mPayload::asJsonObject() const {
    QJsonObject obj;
    if (m_s_authorization_isSet) {
        obj.insert(QString("sAuthorization"), ::OpenAPI::toJsonValue(s_authorization));
    }
    if (m_s_secret_isSet) {
        obj.insert(QString("sSecret"), ::OpenAPI::toJsonValue(s_secret));
    }
    return obj;
}

QString OAIAuthenticate_authenticate_v2_Response_mPayload::getSAuthorization() const {
    return s_authorization;
}
void OAIAuthenticate_authenticate_v2_Response_mPayload::setSAuthorization(const QString &s_authorization) {
    this->s_authorization = s_authorization;
    this->m_s_authorization_isSet = true;
}

bool OAIAuthenticate_authenticate_v2_Response_mPayload::is_s_authorization_Set() const{
    return m_s_authorization_isSet;
}

bool OAIAuthenticate_authenticate_v2_Response_mPayload::is_s_authorization_Valid() const{
    return m_s_authorization_isValid;
}

QString OAIAuthenticate_authenticate_v2_Response_mPayload::getSSecret() const {
    return s_secret;
}
void OAIAuthenticate_authenticate_v2_Response_mPayload::setSSecret(const QString &s_secret) {
    this->s_secret = s_secret;
    this->m_s_secret_isSet = true;
}

bool OAIAuthenticate_authenticate_v2_Response_mPayload::is_s_secret_Set() const{
    return m_s_secret_isSet;
}

bool OAIAuthenticate_authenticate_v2_Response_mPayload::is_s_secret_Valid() const{
    return m_s_secret_isValid;
}

bool OAIAuthenticate_authenticate_v2_Response_mPayload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_s_authorization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthenticate_authenticate_v2_Response_mPayload::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_s_authorization_isValid && m_s_secret_isValid && true;
}

} // namespace OpenAPI
