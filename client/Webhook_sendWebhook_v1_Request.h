/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Webhook_sendWebhook_v1_Request.h
 *
 * Request for POST /1/object/webhook/sendWebhook
 */

#ifndef Webhook_sendWebhook_v1_Request_H
#define Webhook_sendWebhook_v1_Request_H

#include <QJsonObject>

#include "Custom_eWebhookEzsignevent.h"
#include "Field_eWebhookManagementevent.h"
#include "Field_eWebhookModule.h"

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {

class Webhook_sendWebhook_v1_Request : public Object {
public:
    Webhook_sendWebhook_v1_Request();
    Webhook_sendWebhook_v1_Request(QString json);
    ~Webhook_sendWebhook_v1_Request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Field_eWebhookModule getEWebhookModule() const;
    void setEWebhookModule(const Field_eWebhookModule &e_webhook_module);
    bool is_e_webhook_module_Set() const;
    bool is_e_webhook_module_Valid() const;

    Custom_eWebhookEzsignevent getEWebhookEzsignevent() const;
    void setEWebhookEzsignevent(const Custom_eWebhookEzsignevent &e_webhook_ezsignevent);
    bool is_e_webhook_ezsignevent_Set() const;
    bool is_e_webhook_ezsignevent_Valid() const;

    Field_eWebhookManagementevent getEWebhookManagementevent() const;
    void setEWebhookManagementevent(const Field_eWebhookManagementevent &e_webhook_managementevent);
    bool is_e_webhook_managementevent_Set() const;
    bool is_e_webhook_managementevent_Valid() const;

    qint32 getFkiEzsignfolderId() const;
    void setFkiEzsignfolderId(const qint32 &fki_ezsignfolder_id);
    bool is_fki_ezsignfolder_id_Set() const;
    bool is_fki_ezsignfolder_id_Valid() const;

    qint32 getFkiEzsigndocumentId() const;
    void setFkiEzsigndocumentId(const qint32 &fki_ezsigndocument_id);
    bool is_fki_ezsigndocument_id_Set() const;
    bool is_fki_ezsigndocument_id_Valid() const;

    qint32 getFkiEzsignsignerId() const;
    void setFkiEzsignsignerId(const qint32 &fki_ezsignsigner_id);
    bool is_fki_ezsignsigner_id_Set() const;
    bool is_fki_ezsignsigner_id_Valid() const;

    qint32 getFkiUserId() const;
    void setFkiUserId(const qint32 &fki_user_id);
    bool is_fki_user_id_Set() const;
    bool is_fki_user_id_Valid() const;

    qint32 getFkiUserstagedId() const;
    void setFkiUserstagedId(const qint32 &fki_userstaged_id);
    bool is_fki_userstaged_id_Set() const;
    bool is_fki_userstaged_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    Field_eWebhookModule m_e_webhook_module;
    bool m_e_webhook_module_isSet;
    bool m_e_webhook_module_isValid;

    Custom_eWebhookEzsignevent m_e_webhook_ezsignevent;
    bool m_e_webhook_ezsignevent_isSet;
    bool m_e_webhook_ezsignevent_isValid;

    Field_eWebhookManagementevent m_e_webhook_managementevent;
    bool m_e_webhook_managementevent_isSet;
    bool m_e_webhook_managementevent_isValid;

    qint32 m_fki_ezsignfolder_id;
    bool m_fki_ezsignfolder_id_isSet;
    bool m_fki_ezsignfolder_id_isValid;

    qint32 m_fki_ezsigndocument_id;
    bool m_fki_ezsigndocument_id_isSet;
    bool m_fki_ezsigndocument_id_isValid;

    qint32 m_fki_ezsignsigner_id;
    bool m_fki_ezsignsigner_id_isSet;
    bool m_fki_ezsignsigner_id_isValid;

    qint32 m_fki_user_id;
    bool m_fki_user_id_isSet;
    bool m_fki_user_id_isValid;

    qint32 m_fki_userstaged_id;
    bool m_fki_userstaged_id_isSet;
    bool m_fki_userstaged_id_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Webhook_sendWebhook_v1_Request)

#endif // Webhook_sendWebhook_v1_Request_H
