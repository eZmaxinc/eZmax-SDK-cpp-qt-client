/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Systemconfiguration_Response.h
 *
 * A Systemconfiguration Object
 */

#ifndef Systemconfiguration_Response_H
#define Systemconfiguration_Response_H

#include <QJsonObject>

#include "Custom_Branding_Response.h"
#include "Field_eSystemconfigurationEzsign.h"
#include "Field_eSystemconfigurationEzsignofficeplan.h"
#include "Field_eSystemconfigurationLanguage1.h"
#include "Field_eSystemconfigurationLanguage2.h"
#include "Field_eSystemconfigurationNewexternaluseraction.h"
#include <QString>

#include "Enum.h"
#include "Object.h"

namespace Ezmaxapi {
class Custom_Branding_Response;

class Systemconfiguration_Response : public Object {
public:
    Systemconfiguration_Response();
    Systemconfiguration_Response(QString json);
    ~Systemconfiguration_Response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getPkiSystemconfigurationId() const;
    void setPkiSystemconfigurationId(const qint32 &pki_systemconfiguration_id);
    bool is_pki_systemconfiguration_id_Set() const;
    bool is_pki_systemconfiguration_id_Valid() const;

    qint32 getFkiSystemconfigurationtypeId() const;
    void setFkiSystemconfigurationtypeId(const qint32 &fki_systemconfigurationtype_id);
    bool is_fki_systemconfigurationtype_id_Set() const;
    bool is_fki_systemconfigurationtype_id_Valid() const;

    qint32 getFkiBrandingId() const;
    void setFkiBrandingId(const qint32 &fki_branding_id);
    bool is_fki_branding_id_Set() const;
    bool is_fki_branding_id_Valid() const;

    QString getSSystemconfigurationtypeDescriptionX() const;
    void setSSystemconfigurationtypeDescriptionX(const QString &s_systemconfigurationtype_description_x);
    bool is_s_systemconfigurationtype_description_x_Set() const;
    bool is_s_systemconfigurationtype_description_x_Valid() const;

    Field_eSystemconfigurationNewexternaluseraction getESystemconfigurationNewexternaluseraction() const;
    void setESystemconfigurationNewexternaluseraction(const Field_eSystemconfigurationNewexternaluseraction &e_systemconfiguration_newexternaluseraction);
    bool is_e_systemconfiguration_newexternaluseraction_Set() const;
    bool is_e_systemconfiguration_newexternaluseraction_Valid() const;

    Field_eSystemconfigurationLanguage1 getESystemconfigurationLanguage1() const;
    void setESystemconfigurationLanguage1(const Field_eSystemconfigurationLanguage1 &e_systemconfiguration_language1);
    bool is_e_systemconfiguration_language1_Set() const;
    bool is_e_systemconfiguration_language1_Valid() const;

    Field_eSystemconfigurationLanguage2 getESystemconfigurationLanguage2() const;
    void setESystemconfigurationLanguage2(const Field_eSystemconfigurationLanguage2 &e_systemconfiguration_language2);
    bool is_e_systemconfiguration_language2_Set() const;
    bool is_e_systemconfiguration_language2_Valid() const;

    Q_DECL_DEPRECATED Field_eSystemconfigurationEzsign getESystemconfigurationEzsign() const;
    Q_DECL_DEPRECATED void setESystemconfigurationEzsign(const Field_eSystemconfigurationEzsign &e_systemconfiguration_ezsign);
    Q_DECL_DEPRECATED bool is_e_systemconfiguration_ezsign_Set() const;
    Q_DECL_DEPRECATED bool is_e_systemconfiguration_ezsign_Valid() const;

    Field_eSystemconfigurationEzsignofficeplan getESystemconfigurationEzsignofficeplan() const;
    void setESystemconfigurationEzsignofficeplan(const Field_eSystemconfigurationEzsignofficeplan &e_systemconfiguration_ezsignofficeplan);
    bool is_e_systemconfiguration_ezsignofficeplan_Set() const;
    bool is_e_systemconfiguration_ezsignofficeplan_Valid() const;

    bool isBSystemconfigurationEzsignpaidbyoffice() const;
    void setBSystemconfigurationEzsignpaidbyoffice(const bool &b_systemconfiguration_ezsignpaidbyoffice);
    bool is_b_systemconfiguration_ezsignpaidbyoffice_Set() const;
    bool is_b_systemconfiguration_ezsignpaidbyoffice_Valid() const;

    bool isBSystemconfigurationEzsignpersonnal() const;
    void setBSystemconfigurationEzsignpersonnal(const bool &b_systemconfiguration_ezsignpersonnal);
    bool is_b_systemconfiguration_ezsignpersonnal_Set() const;
    bool is_b_systemconfiguration_ezsignpersonnal_Valid() const;

    bool isBSystemconfigurationHascreditcardmerchant() const;
    void setBSystemconfigurationHascreditcardmerchant(const bool &b_systemconfiguration_hascreditcardmerchant);
    bool is_b_systemconfiguration_hascreditcardmerchant_Set() const;
    bool is_b_systemconfiguration_hascreditcardmerchant_Valid() const;

    bool isBSystemconfigurationIsdisposalactive() const;
    void setBSystemconfigurationIsdisposalactive(const bool &b_systemconfiguration_isdisposalactive);
    bool is_b_systemconfiguration_isdisposalactive_Set() const;
    bool is_b_systemconfiguration_isdisposalactive_Valid() const;

    bool isBSystemconfigurationSspr() const;
    void setBSystemconfigurationSspr(const bool &b_systemconfiguration_sspr);
    bool is_b_systemconfiguration_sspr_Set() const;
    bool is_b_systemconfiguration_sspr_Valid() const;

    QString getDtSystemconfigurationReadonlyexpirationstart() const;
    void setDtSystemconfigurationReadonlyexpirationstart(const QString &dt_systemconfiguration_readonlyexpirationstart);
    bool is_dt_systemconfiguration_readonlyexpirationstart_Set() const;
    bool is_dt_systemconfiguration_readonlyexpirationstart_Valid() const;

    QString getDtSystemconfigurationReadonlyexpirationend() const;
    void setDtSystemconfigurationReadonlyexpirationend(const QString &dt_systemconfiguration_readonlyexpirationend);
    bool is_dt_systemconfiguration_readonlyexpirationend_Set() const;
    bool is_dt_systemconfiguration_readonlyexpirationend_Valid() const;

    Custom_Branding_Response getObjBranding() const;
    void setObjBranding(const Custom_Branding_Response &obj_branding);
    bool is_obj_branding_Set() const;
    bool is_obj_branding_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_pki_systemconfiguration_id;
    bool m_pki_systemconfiguration_id_isSet;
    bool m_pki_systemconfiguration_id_isValid;

    qint32 m_fki_systemconfigurationtype_id;
    bool m_fki_systemconfigurationtype_id_isSet;
    bool m_fki_systemconfigurationtype_id_isValid;

    qint32 m_fki_branding_id;
    bool m_fki_branding_id_isSet;
    bool m_fki_branding_id_isValid;

    QString m_s_systemconfigurationtype_description_x;
    bool m_s_systemconfigurationtype_description_x_isSet;
    bool m_s_systemconfigurationtype_description_x_isValid;

    Field_eSystemconfigurationNewexternaluseraction m_e_systemconfiguration_newexternaluseraction;
    bool m_e_systemconfiguration_newexternaluseraction_isSet;
    bool m_e_systemconfiguration_newexternaluseraction_isValid;

    Field_eSystemconfigurationLanguage1 m_e_systemconfiguration_language1;
    bool m_e_systemconfiguration_language1_isSet;
    bool m_e_systemconfiguration_language1_isValid;

    Field_eSystemconfigurationLanguage2 m_e_systemconfiguration_language2;
    bool m_e_systemconfiguration_language2_isSet;
    bool m_e_systemconfiguration_language2_isValid;

    Field_eSystemconfigurationEzsign m_e_systemconfiguration_ezsign;
    bool m_e_systemconfiguration_ezsign_isSet;
    bool m_e_systemconfiguration_ezsign_isValid;

    Field_eSystemconfigurationEzsignofficeplan m_e_systemconfiguration_ezsignofficeplan;
    bool m_e_systemconfiguration_ezsignofficeplan_isSet;
    bool m_e_systemconfiguration_ezsignofficeplan_isValid;

    bool m_b_systemconfiguration_ezsignpaidbyoffice;
    bool m_b_systemconfiguration_ezsignpaidbyoffice_isSet;
    bool m_b_systemconfiguration_ezsignpaidbyoffice_isValid;

    bool m_b_systemconfiguration_ezsignpersonnal;
    bool m_b_systemconfiguration_ezsignpersonnal_isSet;
    bool m_b_systemconfiguration_ezsignpersonnal_isValid;

    bool m_b_systemconfiguration_hascreditcardmerchant;
    bool m_b_systemconfiguration_hascreditcardmerchant_isSet;
    bool m_b_systemconfiguration_hascreditcardmerchant_isValid;

    bool m_b_systemconfiguration_isdisposalactive;
    bool m_b_systemconfiguration_isdisposalactive_isSet;
    bool m_b_systemconfiguration_isdisposalactive_isValid;

    bool m_b_systemconfiguration_sspr;
    bool m_b_systemconfiguration_sspr_isSet;
    bool m_b_systemconfiguration_sspr_isValid;

    QString m_dt_systemconfiguration_readonlyexpirationstart;
    bool m_dt_systemconfiguration_readonlyexpirationstart_isSet;
    bool m_dt_systemconfiguration_readonlyexpirationstart_isValid;

    QString m_dt_systemconfiguration_readonlyexpirationend;
    bool m_dt_systemconfiguration_readonlyexpirationend_isSet;
    bool m_dt_systemconfiguration_readonlyexpirationend_isValid;

    Custom_Branding_Response m_obj_branding;
    bool m_obj_branding_isSet;
    bool m_obj_branding_isValid;
};

} // namespace Ezmaxapi

Q_DECLARE_METATYPE(Ezmaxapi::Systemconfiguration_Response)

#endif // Systemconfiguration_Response_H
