/**
 * eZmax API Definition (Full)
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "Attachment_ResponseCompound.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "Helpers.h"

namespace Ezmaxapi {

Attachment_ResponseCompound::Attachment_ResponseCompound(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

Attachment_ResponseCompound::Attachment_ResponseCompound() {
    this->initializeModel();
}

Attachment_ResponseCompound::~Attachment_ResponseCompound() {}

void Attachment_ResponseCompound::initializeModel() {

    m_pki_attachment_id_isSet = false;
    m_pki_attachment_id_isValid = false;

    m_fki_computer_id_isSet = false;
    m_fki_computer_id_isValid = false;

    m_fki_adjustment_id_isSet = false;
    m_fki_adjustment_id_isValid = false;

    m_fki_agent_id_isSet = false;
    m_fki_agent_id_isValid = false;

    m_fki_bankaccount_id_isSet = false;
    m_fki_bankaccount_id_isValid = false;

    m_fki_broker_id_isSet = false;
    m_fki_broker_id_isValid = false;

    m_fki_commissionadvance_id_isSet = false;
    m_fki_commissionadvance_id_isValid = false;

    m_fki_communication_id_isSet = false;
    m_fki_communication_id_isValid = false;

    m_fki_customer_id_isSet = false;
    m_fki_customer_id_isValid = false;

    m_fki_customertemplate_id_isSet = false;
    m_fki_customertemplate_id_isValid = false;

    m_fki_deposit_id_isSet = false;
    m_fki_deposit_id_isValid = false;

    m_fki_deposittransitcheque_id_isSet = false;
    m_fki_deposittransitcheque_id_isValid = false;

    m_fki_electronicfundstransfer_id_isSet = false;
    m_fki_electronicfundstransfer_id_isValid = false;

    m_fki_employee_id_isSet = false;
    m_fki_employee_id_isValid = false;

    m_fki_externalbroker_id_isSet = false;
    m_fki_externalbroker_id_isValid = false;

    m_fki_ezcomadvanceserver_id_isSet = false;
    m_fki_ezcomadvanceserver_id_isValid = false;

    m_fki_ezcomcompany_id_isSet = false;
    m_fki_ezcomcompany_id_isValid = false;

    m_fki_ezsigndocument_id_isSet = false;
    m_fki_ezsigndocument_id_isValid = false;

    m_fki_ghacqcontract_id_isSet = false;
    m_fki_ghacqcontract_id_isValid = false;

    m_fki_inscription_id_isSet = false;
    m_fki_inscription_id_isValid = false;

    m_fki_inscriptiontemp_id_isSet = false;
    m_fki_inscriptiontemp_id_isValid = false;

    m_fki_inscriptionnotauthenticated_id_isSet = false;
    m_fki_inscriptionnotauthenticated_id_isValid = false;

    m_fki_invoice_id_isSet = false;
    m_fki_invoice_id_isValid = false;

    m_fki_buyercontract_id_isSet = false;
    m_fki_buyercontract_id_isValid = false;

    m_fki_franchisebroker_id_isSet = false;
    m_fki_franchisebroker_id_isValid = false;

    m_fki_franchiseagence_id_isSet = false;
    m_fki_franchiseagence_id_isValid = false;

    m_fki_franchiseoffice_id_isSet = false;
    m_fki_franchiseoffice_id_isValid = false;

    m_fki_franchisefranchise_id_isSet = false;
    m_fki_franchisefranchise_id_isValid = false;

    m_fki_franchisecomplaint_id_isSet = false;
    m_fki_franchisecomplaint_id_isValid = false;

    m_fki_lead_id_isSet = false;
    m_fki_lead_id_isValid = false;

    m_fki_marketingprogram_id_isSet = false;
    m_fki_marketingprogram_id_isValid = false;

    m_fki_marketingfollow_id_isSet = false;
    m_fki_marketingfollow_id_isValid = false;

    m_fki_notary_id_isSet = false;
    m_fki_notary_id_isValid = false;

    m_fki_officetaxreport_id_isSet = false;
    m_fki_officetaxreport_id_isValid = false;

    m_fki_otherincome_id_isSet = false;
    m_fki_otherincome_id_isValid = false;

    m_fki_paymentpreparation_id_isSet = false;
    m_fki_paymentpreparation_id_isValid = false;

    m_fki_purchase_id_isSet = false;
    m_fki_purchase_id_isValid = false;

    m_fki_salary_id_isSet = false;
    m_fki_salary_id_isValid = false;

    m_fki_supplier_id_isSet = false;
    m_fki_supplier_id_isValid = false;

    m_fki_tranqcontract_id_isSet = false;
    m_fki_tranqcontract_id_isValid = false;

    m_fki_template_id_isSet = false;
    m_fki_template_id_isValid = false;

    m_fki_inscriptionchecklist_id_isSet = false;
    m_fki_inscriptionchecklist_id_isValid = false;

    m_fki_folder_id_isSet = false;
    m_fki_folder_id_isValid = false;

    m_fki_rejectedoffertopurchase_id_isSet = false;
    m_fki_rejectedoffertopurchase_id_isValid = false;

    m_fki_disclosure_id_isSet = false;
    m_fki_disclosure_id_isValid = false;

    m_fki_reconciliation_id_isSet = false;
    m_fki_reconciliation_id_isValid = false;

    m_fki_ezsigndocument_id_reference_isSet = false;
    m_fki_ezsigndocument_id_reference_isValid = false;

    m_e_attachment_documenttype_isSet = false;
    m_e_attachment_documenttype_isValid = false;

    m_s_attachment_name_isSet = false;
    m_s_attachment_name_isValid = false;

    m_e_attachment_privacy_isSet = false;
    m_e_attachment_privacy_isValid = false;

    m_fki_user_id_specific_isSet = false;
    m_fki_user_id_specific_isValid = false;

    m_e_attachment_type_isSet = false;
    m_e_attachment_type_isValid = false;

    m_i_attachment_size_isSet = false;
    m_i_attachment_size_isValid = false;

    m_i_attachment_ed_mmoduleflag_isSet = false;
    m_i_attachment_ed_mmoduleflag_isValid = false;

    m_s_attachment_md5_isSet = false;
    m_s_attachment_md5_isValid = false;

    m_b_attachment_deleted_isSet = false;
    m_b_attachment_deleted_isValid = false;

    m_b_attachment_valid_isSet = false;
    m_b_attachment_valid_isValid = false;

    m_e_attachment_verified_isSet = false;
    m_e_attachment_verified_isValid = false;

    m_t_attachment_rejectioncomment_isSet = false;
    m_t_attachment_rejectioncomment_isValid = false;

    m_fki_user_id_owner_isSet = false;
    m_fki_user_id_owner_isValid = false;

    m_obj_audit_isSet = false;
    m_obj_audit_isValid = false;
}

void Attachment_ResponseCompound::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void Attachment_ResponseCompound::fromJsonObject(QJsonObject json) {

    m_pki_attachment_id_isValid = ::Ezmaxapi::fromJsonValue(m_pki_attachment_id, json[QString("pkiAttachmentID")]);
    m_pki_attachment_id_isSet = !json[QString("pkiAttachmentID")].isNull() && m_pki_attachment_id_isValid;

    m_fki_computer_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_computer_id, json[QString("fkiComputerID")]);
    m_fki_computer_id_isSet = !json[QString("fkiComputerID")].isNull() && m_fki_computer_id_isValid;

    m_fki_adjustment_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_adjustment_id, json[QString("fkiAdjustmentID")]);
    m_fki_adjustment_id_isSet = !json[QString("fkiAdjustmentID")].isNull() && m_fki_adjustment_id_isValid;

    m_fki_agent_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_agent_id, json[QString("fkiAgentID")]);
    m_fki_agent_id_isSet = !json[QString("fkiAgentID")].isNull() && m_fki_agent_id_isValid;

    m_fki_bankaccount_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_bankaccount_id, json[QString("fkiBankaccountID")]);
    m_fki_bankaccount_id_isSet = !json[QString("fkiBankaccountID")].isNull() && m_fki_bankaccount_id_isValid;

    m_fki_broker_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_broker_id, json[QString("fkiBrokerID")]);
    m_fki_broker_id_isSet = !json[QString("fkiBrokerID")].isNull() && m_fki_broker_id_isValid;

    m_fki_commissionadvance_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_commissionadvance_id, json[QString("fkiCommissionadvanceID")]);
    m_fki_commissionadvance_id_isSet = !json[QString("fkiCommissionadvanceID")].isNull() && m_fki_commissionadvance_id_isValid;

    m_fki_communication_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_communication_id, json[QString("fkiCommunicationID")]);
    m_fki_communication_id_isSet = !json[QString("fkiCommunicationID")].isNull() && m_fki_communication_id_isValid;

    m_fki_customer_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_customer_id, json[QString("fkiCustomerID")]);
    m_fki_customer_id_isSet = !json[QString("fkiCustomerID")].isNull() && m_fki_customer_id_isValid;

    m_fki_customertemplate_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_customertemplate_id, json[QString("fkiCustomertemplateID")]);
    m_fki_customertemplate_id_isSet = !json[QString("fkiCustomertemplateID")].isNull() && m_fki_customertemplate_id_isValid;

    m_fki_deposit_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_deposit_id, json[QString("fkiDepositID")]);
    m_fki_deposit_id_isSet = !json[QString("fkiDepositID")].isNull() && m_fki_deposit_id_isValid;

    m_fki_deposittransitcheque_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_deposittransitcheque_id, json[QString("fkiDeposittransitchequeID")]);
    m_fki_deposittransitcheque_id_isSet = !json[QString("fkiDeposittransitchequeID")].isNull() && m_fki_deposittransitcheque_id_isValid;

    m_fki_electronicfundstransfer_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_electronicfundstransfer_id, json[QString("fkiElectronicfundstransferID")]);
    m_fki_electronicfundstransfer_id_isSet = !json[QString("fkiElectronicfundstransferID")].isNull() && m_fki_electronicfundstransfer_id_isValid;

    m_fki_employee_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_employee_id, json[QString("fkiEmployeeID")]);
    m_fki_employee_id_isSet = !json[QString("fkiEmployeeID")].isNull() && m_fki_employee_id_isValid;

    m_fki_externalbroker_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_externalbroker_id, json[QString("fkiExternalbrokerID")]);
    m_fki_externalbroker_id_isSet = !json[QString("fkiExternalbrokerID")].isNull() && m_fki_externalbroker_id_isValid;

    m_fki_ezcomadvanceserver_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezcomadvanceserver_id, json[QString("fkiEzcomadvanceserverID")]);
    m_fki_ezcomadvanceserver_id_isSet = !json[QString("fkiEzcomadvanceserverID")].isNull() && m_fki_ezcomadvanceserver_id_isValid;

    m_fki_ezcomcompany_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezcomcompany_id, json[QString("fkiEzcomcompanyID")]);
    m_fki_ezcomcompany_id_isSet = !json[QString("fkiEzcomcompanyID")].isNull() && m_fki_ezcomcompany_id_isValid;

    m_fki_ezsigndocument_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsigndocument_id, json[QString("fkiEzsigndocumentID")]);
    m_fki_ezsigndocument_id_isSet = !json[QString("fkiEzsigndocumentID")].isNull() && m_fki_ezsigndocument_id_isValid;

    m_fki_ghacqcontract_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ghacqcontract_id, json[QString("fkiGhacqcontractID")]);
    m_fki_ghacqcontract_id_isSet = !json[QString("fkiGhacqcontractID")].isNull() && m_fki_ghacqcontract_id_isValid;

    m_fki_inscription_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_inscription_id, json[QString("fkiInscriptionID")]);
    m_fki_inscription_id_isSet = !json[QString("fkiInscriptionID")].isNull() && m_fki_inscription_id_isValid;

    m_fki_inscriptiontemp_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_inscriptiontemp_id, json[QString("fkiInscriptiontempID")]);
    m_fki_inscriptiontemp_id_isSet = !json[QString("fkiInscriptiontempID")].isNull() && m_fki_inscriptiontemp_id_isValid;

    m_fki_inscriptionnotauthenticated_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_inscriptionnotauthenticated_id, json[QString("fkiInscriptionnotauthenticatedID")]);
    m_fki_inscriptionnotauthenticated_id_isSet = !json[QString("fkiInscriptionnotauthenticatedID")].isNull() && m_fki_inscriptionnotauthenticated_id_isValid;

    m_fki_invoice_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_invoice_id, json[QString("fkiInvoiceID")]);
    m_fki_invoice_id_isSet = !json[QString("fkiInvoiceID")].isNull() && m_fki_invoice_id_isValid;

    m_fki_buyercontract_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_buyercontract_id, json[QString("fkiBuyercontractID")]);
    m_fki_buyercontract_id_isSet = !json[QString("fkiBuyercontractID")].isNull() && m_fki_buyercontract_id_isValid;

    m_fki_franchisebroker_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_franchisebroker_id, json[QString("fkiFranchisebrokerID")]);
    m_fki_franchisebroker_id_isSet = !json[QString("fkiFranchisebrokerID")].isNull() && m_fki_franchisebroker_id_isValid;

    m_fki_franchiseagence_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_franchiseagence_id, json[QString("fkiFranchiseagenceID")]);
    m_fki_franchiseagence_id_isSet = !json[QString("fkiFranchiseagenceID")].isNull() && m_fki_franchiseagence_id_isValid;

    m_fki_franchiseoffice_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_franchiseoffice_id, json[QString("fkiFranchiseofficeID")]);
    m_fki_franchiseoffice_id_isSet = !json[QString("fkiFranchiseofficeID")].isNull() && m_fki_franchiseoffice_id_isValid;

    m_fki_franchisefranchise_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_franchisefranchise_id, json[QString("fkiFranchisefranchiseID")]);
    m_fki_franchisefranchise_id_isSet = !json[QString("fkiFranchisefranchiseID")].isNull() && m_fki_franchisefranchise_id_isValid;

    m_fki_franchisecomplaint_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_franchisecomplaint_id, json[QString("fkiFranchisecomplaintID")]);
    m_fki_franchisecomplaint_id_isSet = !json[QString("fkiFranchisecomplaintID")].isNull() && m_fki_franchisecomplaint_id_isValid;

    m_fki_lead_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_lead_id, json[QString("fkiLeadID")]);
    m_fki_lead_id_isSet = !json[QString("fkiLeadID")].isNull() && m_fki_lead_id_isValid;

    m_fki_marketingprogram_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_marketingprogram_id, json[QString("fkiMarketingprogramID")]);
    m_fki_marketingprogram_id_isSet = !json[QString("fkiMarketingprogramID")].isNull() && m_fki_marketingprogram_id_isValid;

    m_fki_marketingfollow_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_marketingfollow_id, json[QString("fkiMarketingfollowID")]);
    m_fki_marketingfollow_id_isSet = !json[QString("fkiMarketingfollowID")].isNull() && m_fki_marketingfollow_id_isValid;

    m_fki_notary_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_notary_id, json[QString("fkiNotaryID")]);
    m_fki_notary_id_isSet = !json[QString("fkiNotaryID")].isNull() && m_fki_notary_id_isValid;

    m_fki_officetaxreport_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_officetaxreport_id, json[QString("fkiOfficetaxreportID")]);
    m_fki_officetaxreport_id_isSet = !json[QString("fkiOfficetaxreportID")].isNull() && m_fki_officetaxreport_id_isValid;

    m_fki_otherincome_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_otherincome_id, json[QString("fkiOtherincomeID")]);
    m_fki_otherincome_id_isSet = !json[QString("fkiOtherincomeID")].isNull() && m_fki_otherincome_id_isValid;

    m_fki_paymentpreparation_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_paymentpreparation_id, json[QString("fkiPaymentpreparationID")]);
    m_fki_paymentpreparation_id_isSet = !json[QString("fkiPaymentpreparationID")].isNull() && m_fki_paymentpreparation_id_isValid;

    m_fki_purchase_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_purchase_id, json[QString("fkiPurchaseID")]);
    m_fki_purchase_id_isSet = !json[QString("fkiPurchaseID")].isNull() && m_fki_purchase_id_isValid;

    m_fki_salary_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_salary_id, json[QString("fkiSalaryID")]);
    m_fki_salary_id_isSet = !json[QString("fkiSalaryID")].isNull() && m_fki_salary_id_isValid;

    m_fki_supplier_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_supplier_id, json[QString("fkiSupplierID")]);
    m_fki_supplier_id_isSet = !json[QString("fkiSupplierID")].isNull() && m_fki_supplier_id_isValid;

    m_fki_tranqcontract_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_tranqcontract_id, json[QString("fkiTranqcontractID")]);
    m_fki_tranqcontract_id_isSet = !json[QString("fkiTranqcontractID")].isNull() && m_fki_tranqcontract_id_isValid;

    m_fki_template_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_template_id, json[QString("fkiTemplateID")]);
    m_fki_template_id_isSet = !json[QString("fkiTemplateID")].isNull() && m_fki_template_id_isValid;

    m_fki_inscriptionchecklist_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_inscriptionchecklist_id, json[QString("fkiInscriptionchecklistID")]);
    m_fki_inscriptionchecklist_id_isSet = !json[QString("fkiInscriptionchecklistID")].isNull() && m_fki_inscriptionchecklist_id_isValid;

    m_fki_folder_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_folder_id, json[QString("fkiFolderID")]);
    m_fki_folder_id_isSet = !json[QString("fkiFolderID")].isNull() && m_fki_folder_id_isValid;

    m_fki_rejectedoffertopurchase_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_rejectedoffertopurchase_id, json[QString("fkiRejectedoffertopurchaseID")]);
    m_fki_rejectedoffertopurchase_id_isSet = !json[QString("fkiRejectedoffertopurchaseID")].isNull() && m_fki_rejectedoffertopurchase_id_isValid;

    m_fki_disclosure_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_disclosure_id, json[QString("fkiDisclosureID")]);
    m_fki_disclosure_id_isSet = !json[QString("fkiDisclosureID")].isNull() && m_fki_disclosure_id_isValid;

    m_fki_reconciliation_id_isValid = ::Ezmaxapi::fromJsonValue(m_fki_reconciliation_id, json[QString("fkiReconciliationID")]);
    m_fki_reconciliation_id_isSet = !json[QString("fkiReconciliationID")].isNull() && m_fki_reconciliation_id_isValid;

    m_fki_ezsigndocument_id_reference_isValid = ::Ezmaxapi::fromJsonValue(m_fki_ezsigndocument_id_reference, json[QString("fkiEzsigndocumentIDReference")]);
    m_fki_ezsigndocument_id_reference_isSet = !json[QString("fkiEzsigndocumentIDReference")].isNull() && m_fki_ezsigndocument_id_reference_isValid;

    m_e_attachment_documenttype_isValid = ::Ezmaxapi::fromJsonValue(m_e_attachment_documenttype, json[QString("eAttachmentDocumenttype")]);
    m_e_attachment_documenttype_isSet = !json[QString("eAttachmentDocumenttype")].isNull() && m_e_attachment_documenttype_isValid;

    m_s_attachment_name_isValid = ::Ezmaxapi::fromJsonValue(m_s_attachment_name, json[QString("sAttachmentName")]);
    m_s_attachment_name_isSet = !json[QString("sAttachmentName")].isNull() && m_s_attachment_name_isValid;

    m_e_attachment_privacy_isValid = ::Ezmaxapi::fromJsonValue(m_e_attachment_privacy, json[QString("eAttachmentPrivacy")]);
    m_e_attachment_privacy_isSet = !json[QString("eAttachmentPrivacy")].isNull() && m_e_attachment_privacy_isValid;

    m_fki_user_id_specific_isValid = ::Ezmaxapi::fromJsonValue(m_fki_user_id_specific, json[QString("fkiUserIDSpecific")]);
    m_fki_user_id_specific_isSet = !json[QString("fkiUserIDSpecific")].isNull() && m_fki_user_id_specific_isValid;

    m_e_attachment_type_isValid = ::Ezmaxapi::fromJsonValue(m_e_attachment_type, json[QString("eAttachmentType")]);
    m_e_attachment_type_isSet = !json[QString("eAttachmentType")].isNull() && m_e_attachment_type_isValid;

    m_i_attachment_size_isValid = ::Ezmaxapi::fromJsonValue(m_i_attachment_size, json[QString("iAttachmentSize")]);
    m_i_attachment_size_isSet = !json[QString("iAttachmentSize")].isNull() && m_i_attachment_size_isValid;

    m_i_attachment_ed_mmoduleflag_isValid = ::Ezmaxapi::fromJsonValue(m_i_attachment_ed_mmoduleflag, json[QString("iAttachmentEDMmoduleflag")]);
    m_i_attachment_ed_mmoduleflag_isSet = !json[QString("iAttachmentEDMmoduleflag")].isNull() && m_i_attachment_ed_mmoduleflag_isValid;

    m_s_attachment_md5_isValid = ::Ezmaxapi::fromJsonValue(m_s_attachment_md5, json[QString("sAttachmentMD5")]);
    m_s_attachment_md5_isSet = !json[QString("sAttachmentMD5")].isNull() && m_s_attachment_md5_isValid;

    m_b_attachment_deleted_isValid = ::Ezmaxapi::fromJsonValue(m_b_attachment_deleted, json[QString("bAttachmentDeleted")]);
    m_b_attachment_deleted_isSet = !json[QString("bAttachmentDeleted")].isNull() && m_b_attachment_deleted_isValid;

    m_b_attachment_valid_isValid = ::Ezmaxapi::fromJsonValue(m_b_attachment_valid, json[QString("bAttachmentValid")]);
    m_b_attachment_valid_isSet = !json[QString("bAttachmentValid")].isNull() && m_b_attachment_valid_isValid;

    m_e_attachment_verified_isValid = ::Ezmaxapi::fromJsonValue(m_e_attachment_verified, json[QString("eAttachmentVerified")]);
    m_e_attachment_verified_isSet = !json[QString("eAttachmentVerified")].isNull() && m_e_attachment_verified_isValid;

    m_t_attachment_rejectioncomment_isValid = ::Ezmaxapi::fromJsonValue(m_t_attachment_rejectioncomment, json[QString("tAttachmentRejectioncomment")]);
    m_t_attachment_rejectioncomment_isSet = !json[QString("tAttachmentRejectioncomment")].isNull() && m_t_attachment_rejectioncomment_isValid;

    m_fki_user_id_owner_isValid = ::Ezmaxapi::fromJsonValue(m_fki_user_id_owner, json[QString("fkiUserIDOwner")]);
    m_fki_user_id_owner_isSet = !json[QString("fkiUserIDOwner")].isNull() && m_fki_user_id_owner_isValid;

    m_obj_audit_isValid = ::Ezmaxapi::fromJsonValue(m_obj_audit, json[QString("objAudit")]);
    m_obj_audit_isSet = !json[QString("objAudit")].isNull() && m_obj_audit_isValid;
}

QString Attachment_ResponseCompound::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject Attachment_ResponseCompound::asJsonObject() const {
    QJsonObject obj;
    if (m_pki_attachment_id_isSet) {
        obj.insert(QString("pkiAttachmentID"), ::Ezmaxapi::toJsonValue(m_pki_attachment_id));
    }
    if (m_fki_computer_id_isSet) {
        obj.insert(QString("fkiComputerID"), ::Ezmaxapi::toJsonValue(m_fki_computer_id));
    }
    if (m_fki_adjustment_id_isSet) {
        obj.insert(QString("fkiAdjustmentID"), ::Ezmaxapi::toJsonValue(m_fki_adjustment_id));
    }
    if (m_fki_agent_id_isSet) {
        obj.insert(QString("fkiAgentID"), ::Ezmaxapi::toJsonValue(m_fki_agent_id));
    }
    if (m_fki_bankaccount_id_isSet) {
        obj.insert(QString("fkiBankaccountID"), ::Ezmaxapi::toJsonValue(m_fki_bankaccount_id));
    }
    if (m_fki_broker_id_isSet) {
        obj.insert(QString("fkiBrokerID"), ::Ezmaxapi::toJsonValue(m_fki_broker_id));
    }
    if (m_fki_commissionadvance_id_isSet) {
        obj.insert(QString("fkiCommissionadvanceID"), ::Ezmaxapi::toJsonValue(m_fki_commissionadvance_id));
    }
    if (m_fki_communication_id_isSet) {
        obj.insert(QString("fkiCommunicationID"), ::Ezmaxapi::toJsonValue(m_fki_communication_id));
    }
    if (m_fki_customer_id_isSet) {
        obj.insert(QString("fkiCustomerID"), ::Ezmaxapi::toJsonValue(m_fki_customer_id));
    }
    if (m_fki_customertemplate_id_isSet) {
        obj.insert(QString("fkiCustomertemplateID"), ::Ezmaxapi::toJsonValue(m_fki_customertemplate_id));
    }
    if (m_fki_deposit_id_isSet) {
        obj.insert(QString("fkiDepositID"), ::Ezmaxapi::toJsonValue(m_fki_deposit_id));
    }
    if (m_fki_deposittransitcheque_id_isSet) {
        obj.insert(QString("fkiDeposittransitchequeID"), ::Ezmaxapi::toJsonValue(m_fki_deposittransitcheque_id));
    }
    if (m_fki_electronicfundstransfer_id_isSet) {
        obj.insert(QString("fkiElectronicfundstransferID"), ::Ezmaxapi::toJsonValue(m_fki_electronicfundstransfer_id));
    }
    if (m_fki_employee_id_isSet) {
        obj.insert(QString("fkiEmployeeID"), ::Ezmaxapi::toJsonValue(m_fki_employee_id));
    }
    if (m_fki_externalbroker_id_isSet) {
        obj.insert(QString("fkiExternalbrokerID"), ::Ezmaxapi::toJsonValue(m_fki_externalbroker_id));
    }
    if (m_fki_ezcomadvanceserver_id_isSet) {
        obj.insert(QString("fkiEzcomadvanceserverID"), ::Ezmaxapi::toJsonValue(m_fki_ezcomadvanceserver_id));
    }
    if (m_fki_ezcomcompany_id_isSet) {
        obj.insert(QString("fkiEzcomcompanyID"), ::Ezmaxapi::toJsonValue(m_fki_ezcomcompany_id));
    }
    if (m_fki_ezsigndocument_id_isSet) {
        obj.insert(QString("fkiEzsigndocumentID"), ::Ezmaxapi::toJsonValue(m_fki_ezsigndocument_id));
    }
    if (m_fki_ghacqcontract_id_isSet) {
        obj.insert(QString("fkiGhacqcontractID"), ::Ezmaxapi::toJsonValue(m_fki_ghacqcontract_id));
    }
    if (m_fki_inscription_id_isSet) {
        obj.insert(QString("fkiInscriptionID"), ::Ezmaxapi::toJsonValue(m_fki_inscription_id));
    }
    if (m_fki_inscriptiontemp_id_isSet) {
        obj.insert(QString("fkiInscriptiontempID"), ::Ezmaxapi::toJsonValue(m_fki_inscriptiontemp_id));
    }
    if (m_fki_inscriptionnotauthenticated_id_isSet) {
        obj.insert(QString("fkiInscriptionnotauthenticatedID"), ::Ezmaxapi::toJsonValue(m_fki_inscriptionnotauthenticated_id));
    }
    if (m_fki_invoice_id_isSet) {
        obj.insert(QString("fkiInvoiceID"), ::Ezmaxapi::toJsonValue(m_fki_invoice_id));
    }
    if (m_fki_buyercontract_id_isSet) {
        obj.insert(QString("fkiBuyercontractID"), ::Ezmaxapi::toJsonValue(m_fki_buyercontract_id));
    }
    if (m_fki_franchisebroker_id_isSet) {
        obj.insert(QString("fkiFranchisebrokerID"), ::Ezmaxapi::toJsonValue(m_fki_franchisebroker_id));
    }
    if (m_fki_franchiseagence_id_isSet) {
        obj.insert(QString("fkiFranchiseagenceID"), ::Ezmaxapi::toJsonValue(m_fki_franchiseagence_id));
    }
    if (m_fki_franchiseoffice_id_isSet) {
        obj.insert(QString("fkiFranchiseofficeID"), ::Ezmaxapi::toJsonValue(m_fki_franchiseoffice_id));
    }
    if (m_fki_franchisefranchise_id_isSet) {
        obj.insert(QString("fkiFranchisefranchiseID"), ::Ezmaxapi::toJsonValue(m_fki_franchisefranchise_id));
    }
    if (m_fki_franchisecomplaint_id_isSet) {
        obj.insert(QString("fkiFranchisecomplaintID"), ::Ezmaxapi::toJsonValue(m_fki_franchisecomplaint_id));
    }
    if (m_fki_lead_id_isSet) {
        obj.insert(QString("fkiLeadID"), ::Ezmaxapi::toJsonValue(m_fki_lead_id));
    }
    if (m_fki_marketingprogram_id_isSet) {
        obj.insert(QString("fkiMarketingprogramID"), ::Ezmaxapi::toJsonValue(m_fki_marketingprogram_id));
    }
    if (m_fki_marketingfollow_id_isSet) {
        obj.insert(QString("fkiMarketingfollowID"), ::Ezmaxapi::toJsonValue(m_fki_marketingfollow_id));
    }
    if (m_fki_notary_id_isSet) {
        obj.insert(QString("fkiNotaryID"), ::Ezmaxapi::toJsonValue(m_fki_notary_id));
    }
    if (m_fki_officetaxreport_id_isSet) {
        obj.insert(QString("fkiOfficetaxreportID"), ::Ezmaxapi::toJsonValue(m_fki_officetaxreport_id));
    }
    if (m_fki_otherincome_id_isSet) {
        obj.insert(QString("fkiOtherincomeID"), ::Ezmaxapi::toJsonValue(m_fki_otherincome_id));
    }
    if (m_fki_paymentpreparation_id_isSet) {
        obj.insert(QString("fkiPaymentpreparationID"), ::Ezmaxapi::toJsonValue(m_fki_paymentpreparation_id));
    }
    if (m_fki_purchase_id_isSet) {
        obj.insert(QString("fkiPurchaseID"), ::Ezmaxapi::toJsonValue(m_fki_purchase_id));
    }
    if (m_fki_salary_id_isSet) {
        obj.insert(QString("fkiSalaryID"), ::Ezmaxapi::toJsonValue(m_fki_salary_id));
    }
    if (m_fki_supplier_id_isSet) {
        obj.insert(QString("fkiSupplierID"), ::Ezmaxapi::toJsonValue(m_fki_supplier_id));
    }
    if (m_fki_tranqcontract_id_isSet) {
        obj.insert(QString("fkiTranqcontractID"), ::Ezmaxapi::toJsonValue(m_fki_tranqcontract_id));
    }
    if (m_fki_template_id_isSet) {
        obj.insert(QString("fkiTemplateID"), ::Ezmaxapi::toJsonValue(m_fki_template_id));
    }
    if (m_fki_inscriptionchecklist_id_isSet) {
        obj.insert(QString("fkiInscriptionchecklistID"), ::Ezmaxapi::toJsonValue(m_fki_inscriptionchecklist_id));
    }
    if (m_fki_folder_id_isSet) {
        obj.insert(QString("fkiFolderID"), ::Ezmaxapi::toJsonValue(m_fki_folder_id));
    }
    if (m_fki_rejectedoffertopurchase_id_isSet) {
        obj.insert(QString("fkiRejectedoffertopurchaseID"), ::Ezmaxapi::toJsonValue(m_fki_rejectedoffertopurchase_id));
    }
    if (m_fki_disclosure_id_isSet) {
        obj.insert(QString("fkiDisclosureID"), ::Ezmaxapi::toJsonValue(m_fki_disclosure_id));
    }
    if (m_fki_reconciliation_id_isSet) {
        obj.insert(QString("fkiReconciliationID"), ::Ezmaxapi::toJsonValue(m_fki_reconciliation_id));
    }
    if (m_fki_ezsigndocument_id_reference_isSet) {
        obj.insert(QString("fkiEzsigndocumentIDReference"), ::Ezmaxapi::toJsonValue(m_fki_ezsigndocument_id_reference));
    }
    if (m_e_attachment_documenttype.isSet()) {
        obj.insert(QString("eAttachmentDocumenttype"), ::Ezmaxapi::toJsonValue(m_e_attachment_documenttype));
    }
    if (m_s_attachment_name_isSet) {
        obj.insert(QString("sAttachmentName"), ::Ezmaxapi::toJsonValue(m_s_attachment_name));
    }
    if (m_e_attachment_privacy.isSet()) {
        obj.insert(QString("eAttachmentPrivacy"), ::Ezmaxapi::toJsonValue(m_e_attachment_privacy));
    }
    if (m_fki_user_id_specific_isSet) {
        obj.insert(QString("fkiUserIDSpecific"), ::Ezmaxapi::toJsonValue(m_fki_user_id_specific));
    }
    if (m_e_attachment_type.isSet()) {
        obj.insert(QString("eAttachmentType"), ::Ezmaxapi::toJsonValue(m_e_attachment_type));
    }
    if (m_i_attachment_size_isSet) {
        obj.insert(QString("iAttachmentSize"), ::Ezmaxapi::toJsonValue(m_i_attachment_size));
    }
    if (m_i_attachment_ed_mmoduleflag_isSet) {
        obj.insert(QString("iAttachmentEDMmoduleflag"), ::Ezmaxapi::toJsonValue(m_i_attachment_ed_mmoduleflag));
    }
    if (m_s_attachment_md5_isSet) {
        obj.insert(QString("sAttachmentMD5"), ::Ezmaxapi::toJsonValue(m_s_attachment_md5));
    }
    if (m_b_attachment_deleted_isSet) {
        obj.insert(QString("bAttachmentDeleted"), ::Ezmaxapi::toJsonValue(m_b_attachment_deleted));
    }
    if (m_b_attachment_valid_isSet) {
        obj.insert(QString("bAttachmentValid"), ::Ezmaxapi::toJsonValue(m_b_attachment_valid));
    }
    if (m_e_attachment_verified.isSet()) {
        obj.insert(QString("eAttachmentVerified"), ::Ezmaxapi::toJsonValue(m_e_attachment_verified));
    }
    if (m_t_attachment_rejectioncomment_isSet) {
        obj.insert(QString("tAttachmentRejectioncomment"), ::Ezmaxapi::toJsonValue(m_t_attachment_rejectioncomment));
    }
    if (m_fki_user_id_owner_isSet) {
        obj.insert(QString("fkiUserIDOwner"), ::Ezmaxapi::toJsonValue(m_fki_user_id_owner));
    }
    if (m_obj_audit.isSet()) {
        obj.insert(QString("objAudit"), ::Ezmaxapi::toJsonValue(m_obj_audit));
    }
    return obj;
}

qint32 Attachment_ResponseCompound::getPkiAttachmentId() const {
    return m_pki_attachment_id;
}
void Attachment_ResponseCompound::setPkiAttachmentId(const qint32 &pki_attachment_id) {
    m_pki_attachment_id = pki_attachment_id;
    m_pki_attachment_id_isSet = true;
}

bool Attachment_ResponseCompound::is_pki_attachment_id_Set() const{
    return m_pki_attachment_id_isSet;
}

bool Attachment_ResponseCompound::is_pki_attachment_id_Valid() const{
    return m_pki_attachment_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiComputerId() const {
    return m_fki_computer_id;
}
void Attachment_ResponseCompound::setFkiComputerId(const qint32 &fki_computer_id) {
    m_fki_computer_id = fki_computer_id;
    m_fki_computer_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_computer_id_Set() const{
    return m_fki_computer_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_computer_id_Valid() const{
    return m_fki_computer_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiAdjustmentId() const {
    return m_fki_adjustment_id;
}
void Attachment_ResponseCompound::setFkiAdjustmentId(const qint32 &fki_adjustment_id) {
    m_fki_adjustment_id = fki_adjustment_id;
    m_fki_adjustment_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_adjustment_id_Set() const{
    return m_fki_adjustment_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_adjustment_id_Valid() const{
    return m_fki_adjustment_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiAgentId() const {
    return m_fki_agent_id;
}
void Attachment_ResponseCompound::setFkiAgentId(const qint32 &fki_agent_id) {
    m_fki_agent_id = fki_agent_id;
    m_fki_agent_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_agent_id_Set() const{
    return m_fki_agent_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_agent_id_Valid() const{
    return m_fki_agent_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiBankaccountId() const {
    return m_fki_bankaccount_id;
}
void Attachment_ResponseCompound::setFkiBankaccountId(const qint32 &fki_bankaccount_id) {
    m_fki_bankaccount_id = fki_bankaccount_id;
    m_fki_bankaccount_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_bankaccount_id_Set() const{
    return m_fki_bankaccount_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_bankaccount_id_Valid() const{
    return m_fki_bankaccount_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiBrokerId() const {
    return m_fki_broker_id;
}
void Attachment_ResponseCompound::setFkiBrokerId(const qint32 &fki_broker_id) {
    m_fki_broker_id = fki_broker_id;
    m_fki_broker_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_broker_id_Set() const{
    return m_fki_broker_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_broker_id_Valid() const{
    return m_fki_broker_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiCommissionadvanceId() const {
    return m_fki_commissionadvance_id;
}
void Attachment_ResponseCompound::setFkiCommissionadvanceId(const qint32 &fki_commissionadvance_id) {
    m_fki_commissionadvance_id = fki_commissionadvance_id;
    m_fki_commissionadvance_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_commissionadvance_id_Set() const{
    return m_fki_commissionadvance_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_commissionadvance_id_Valid() const{
    return m_fki_commissionadvance_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiCommunicationId() const {
    return m_fki_communication_id;
}
void Attachment_ResponseCompound::setFkiCommunicationId(const qint32 &fki_communication_id) {
    m_fki_communication_id = fki_communication_id;
    m_fki_communication_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_communication_id_Set() const{
    return m_fki_communication_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_communication_id_Valid() const{
    return m_fki_communication_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiCustomerId() const {
    return m_fki_customer_id;
}
void Attachment_ResponseCompound::setFkiCustomerId(const qint32 &fki_customer_id) {
    m_fki_customer_id = fki_customer_id;
    m_fki_customer_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_customer_id_Set() const{
    return m_fki_customer_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_customer_id_Valid() const{
    return m_fki_customer_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiCustomertemplateId() const {
    return m_fki_customertemplate_id;
}
void Attachment_ResponseCompound::setFkiCustomertemplateId(const qint32 &fki_customertemplate_id) {
    m_fki_customertemplate_id = fki_customertemplate_id;
    m_fki_customertemplate_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_customertemplate_id_Set() const{
    return m_fki_customertemplate_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_customertemplate_id_Valid() const{
    return m_fki_customertemplate_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiDepositId() const {
    return m_fki_deposit_id;
}
void Attachment_ResponseCompound::setFkiDepositId(const qint32 &fki_deposit_id) {
    m_fki_deposit_id = fki_deposit_id;
    m_fki_deposit_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_deposit_id_Set() const{
    return m_fki_deposit_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_deposit_id_Valid() const{
    return m_fki_deposit_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiDeposittransitchequeId() const {
    return m_fki_deposittransitcheque_id;
}
void Attachment_ResponseCompound::setFkiDeposittransitchequeId(const qint32 &fki_deposittransitcheque_id) {
    m_fki_deposittransitcheque_id = fki_deposittransitcheque_id;
    m_fki_deposittransitcheque_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_deposittransitcheque_id_Set() const{
    return m_fki_deposittransitcheque_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_deposittransitcheque_id_Valid() const{
    return m_fki_deposittransitcheque_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiElectronicfundstransferId() const {
    return m_fki_electronicfundstransfer_id;
}
void Attachment_ResponseCompound::setFkiElectronicfundstransferId(const qint32 &fki_electronicfundstransfer_id) {
    m_fki_electronicfundstransfer_id = fki_electronicfundstransfer_id;
    m_fki_electronicfundstransfer_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_electronicfundstransfer_id_Set() const{
    return m_fki_electronicfundstransfer_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_electronicfundstransfer_id_Valid() const{
    return m_fki_electronicfundstransfer_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiEmployeeId() const {
    return m_fki_employee_id;
}
void Attachment_ResponseCompound::setFkiEmployeeId(const qint32 &fki_employee_id) {
    m_fki_employee_id = fki_employee_id;
    m_fki_employee_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_employee_id_Set() const{
    return m_fki_employee_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_employee_id_Valid() const{
    return m_fki_employee_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiExternalbrokerId() const {
    return m_fki_externalbroker_id;
}
void Attachment_ResponseCompound::setFkiExternalbrokerId(const qint32 &fki_externalbroker_id) {
    m_fki_externalbroker_id = fki_externalbroker_id;
    m_fki_externalbroker_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_externalbroker_id_Set() const{
    return m_fki_externalbroker_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_externalbroker_id_Valid() const{
    return m_fki_externalbroker_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiEzcomadvanceserverId() const {
    return m_fki_ezcomadvanceserver_id;
}
void Attachment_ResponseCompound::setFkiEzcomadvanceserverId(const qint32 &fki_ezcomadvanceserver_id) {
    m_fki_ezcomadvanceserver_id = fki_ezcomadvanceserver_id;
    m_fki_ezcomadvanceserver_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_ezcomadvanceserver_id_Set() const{
    return m_fki_ezcomadvanceserver_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_ezcomadvanceserver_id_Valid() const{
    return m_fki_ezcomadvanceserver_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiEzcomcompanyId() const {
    return m_fki_ezcomcompany_id;
}
void Attachment_ResponseCompound::setFkiEzcomcompanyId(const qint32 &fki_ezcomcompany_id) {
    m_fki_ezcomcompany_id = fki_ezcomcompany_id;
    m_fki_ezcomcompany_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_ezcomcompany_id_Set() const{
    return m_fki_ezcomcompany_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_ezcomcompany_id_Valid() const{
    return m_fki_ezcomcompany_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiEzsigndocumentId() const {
    return m_fki_ezsigndocument_id;
}
void Attachment_ResponseCompound::setFkiEzsigndocumentId(const qint32 &fki_ezsigndocument_id) {
    m_fki_ezsigndocument_id = fki_ezsigndocument_id;
    m_fki_ezsigndocument_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_ezsigndocument_id_Set() const{
    return m_fki_ezsigndocument_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_ezsigndocument_id_Valid() const{
    return m_fki_ezsigndocument_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiGhacqcontractId() const {
    return m_fki_ghacqcontract_id;
}
void Attachment_ResponseCompound::setFkiGhacqcontractId(const qint32 &fki_ghacqcontract_id) {
    m_fki_ghacqcontract_id = fki_ghacqcontract_id;
    m_fki_ghacqcontract_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_ghacqcontract_id_Set() const{
    return m_fki_ghacqcontract_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_ghacqcontract_id_Valid() const{
    return m_fki_ghacqcontract_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiInscriptionId() const {
    return m_fki_inscription_id;
}
void Attachment_ResponseCompound::setFkiInscriptionId(const qint32 &fki_inscription_id) {
    m_fki_inscription_id = fki_inscription_id;
    m_fki_inscription_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_inscription_id_Set() const{
    return m_fki_inscription_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_inscription_id_Valid() const{
    return m_fki_inscription_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiInscriptiontempId() const {
    return m_fki_inscriptiontemp_id;
}
void Attachment_ResponseCompound::setFkiInscriptiontempId(const qint32 &fki_inscriptiontemp_id) {
    m_fki_inscriptiontemp_id = fki_inscriptiontemp_id;
    m_fki_inscriptiontemp_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_inscriptiontemp_id_Set() const{
    return m_fki_inscriptiontemp_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_inscriptiontemp_id_Valid() const{
    return m_fki_inscriptiontemp_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiInscriptionnotauthenticatedId() const {
    return m_fki_inscriptionnotauthenticated_id;
}
void Attachment_ResponseCompound::setFkiInscriptionnotauthenticatedId(const qint32 &fki_inscriptionnotauthenticated_id) {
    m_fki_inscriptionnotauthenticated_id = fki_inscriptionnotauthenticated_id;
    m_fki_inscriptionnotauthenticated_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_inscriptionnotauthenticated_id_Set() const{
    return m_fki_inscriptionnotauthenticated_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_inscriptionnotauthenticated_id_Valid() const{
    return m_fki_inscriptionnotauthenticated_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiInvoiceId() const {
    return m_fki_invoice_id;
}
void Attachment_ResponseCompound::setFkiInvoiceId(const qint32 &fki_invoice_id) {
    m_fki_invoice_id = fki_invoice_id;
    m_fki_invoice_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_invoice_id_Set() const{
    return m_fki_invoice_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_invoice_id_Valid() const{
    return m_fki_invoice_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiBuyercontractId() const {
    return m_fki_buyercontract_id;
}
void Attachment_ResponseCompound::setFkiBuyercontractId(const qint32 &fki_buyercontract_id) {
    m_fki_buyercontract_id = fki_buyercontract_id;
    m_fki_buyercontract_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_buyercontract_id_Set() const{
    return m_fki_buyercontract_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_buyercontract_id_Valid() const{
    return m_fki_buyercontract_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiFranchisebrokerId() const {
    return m_fki_franchisebroker_id;
}
void Attachment_ResponseCompound::setFkiFranchisebrokerId(const qint32 &fki_franchisebroker_id) {
    m_fki_franchisebroker_id = fki_franchisebroker_id;
    m_fki_franchisebroker_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_franchisebroker_id_Set() const{
    return m_fki_franchisebroker_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_franchisebroker_id_Valid() const{
    return m_fki_franchisebroker_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiFranchiseagenceId() const {
    return m_fki_franchiseagence_id;
}
void Attachment_ResponseCompound::setFkiFranchiseagenceId(const qint32 &fki_franchiseagence_id) {
    m_fki_franchiseagence_id = fki_franchiseagence_id;
    m_fki_franchiseagence_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_franchiseagence_id_Set() const{
    return m_fki_franchiseagence_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_franchiseagence_id_Valid() const{
    return m_fki_franchiseagence_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiFranchiseofficeId() const {
    return m_fki_franchiseoffice_id;
}
void Attachment_ResponseCompound::setFkiFranchiseofficeId(const qint32 &fki_franchiseoffice_id) {
    m_fki_franchiseoffice_id = fki_franchiseoffice_id;
    m_fki_franchiseoffice_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_franchiseoffice_id_Set() const{
    return m_fki_franchiseoffice_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_franchiseoffice_id_Valid() const{
    return m_fki_franchiseoffice_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiFranchisefranchiseId() const {
    return m_fki_franchisefranchise_id;
}
void Attachment_ResponseCompound::setFkiFranchisefranchiseId(const qint32 &fki_franchisefranchise_id) {
    m_fki_franchisefranchise_id = fki_franchisefranchise_id;
    m_fki_franchisefranchise_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_franchisefranchise_id_Set() const{
    return m_fki_franchisefranchise_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_franchisefranchise_id_Valid() const{
    return m_fki_franchisefranchise_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiFranchisecomplaintId() const {
    return m_fki_franchisecomplaint_id;
}
void Attachment_ResponseCompound::setFkiFranchisecomplaintId(const qint32 &fki_franchisecomplaint_id) {
    m_fki_franchisecomplaint_id = fki_franchisecomplaint_id;
    m_fki_franchisecomplaint_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_franchisecomplaint_id_Set() const{
    return m_fki_franchisecomplaint_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_franchisecomplaint_id_Valid() const{
    return m_fki_franchisecomplaint_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiLeadId() const {
    return m_fki_lead_id;
}
void Attachment_ResponseCompound::setFkiLeadId(const qint32 &fki_lead_id) {
    m_fki_lead_id = fki_lead_id;
    m_fki_lead_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_lead_id_Set() const{
    return m_fki_lead_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_lead_id_Valid() const{
    return m_fki_lead_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiMarketingprogramId() const {
    return m_fki_marketingprogram_id;
}
void Attachment_ResponseCompound::setFkiMarketingprogramId(const qint32 &fki_marketingprogram_id) {
    m_fki_marketingprogram_id = fki_marketingprogram_id;
    m_fki_marketingprogram_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_marketingprogram_id_Set() const{
    return m_fki_marketingprogram_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_marketingprogram_id_Valid() const{
    return m_fki_marketingprogram_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiMarketingfollowId() const {
    return m_fki_marketingfollow_id;
}
void Attachment_ResponseCompound::setFkiMarketingfollowId(const qint32 &fki_marketingfollow_id) {
    m_fki_marketingfollow_id = fki_marketingfollow_id;
    m_fki_marketingfollow_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_marketingfollow_id_Set() const{
    return m_fki_marketingfollow_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_marketingfollow_id_Valid() const{
    return m_fki_marketingfollow_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiNotaryId() const {
    return m_fki_notary_id;
}
void Attachment_ResponseCompound::setFkiNotaryId(const qint32 &fki_notary_id) {
    m_fki_notary_id = fki_notary_id;
    m_fki_notary_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_notary_id_Set() const{
    return m_fki_notary_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_notary_id_Valid() const{
    return m_fki_notary_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiOfficetaxreportId() const {
    return m_fki_officetaxreport_id;
}
void Attachment_ResponseCompound::setFkiOfficetaxreportId(const qint32 &fki_officetaxreport_id) {
    m_fki_officetaxreport_id = fki_officetaxreport_id;
    m_fki_officetaxreport_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_officetaxreport_id_Set() const{
    return m_fki_officetaxreport_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_officetaxreport_id_Valid() const{
    return m_fki_officetaxreport_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiOtherincomeId() const {
    return m_fki_otherincome_id;
}
void Attachment_ResponseCompound::setFkiOtherincomeId(const qint32 &fki_otherincome_id) {
    m_fki_otherincome_id = fki_otherincome_id;
    m_fki_otherincome_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_otherincome_id_Set() const{
    return m_fki_otherincome_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_otherincome_id_Valid() const{
    return m_fki_otherincome_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiPaymentpreparationId() const {
    return m_fki_paymentpreparation_id;
}
void Attachment_ResponseCompound::setFkiPaymentpreparationId(const qint32 &fki_paymentpreparation_id) {
    m_fki_paymentpreparation_id = fki_paymentpreparation_id;
    m_fki_paymentpreparation_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_paymentpreparation_id_Set() const{
    return m_fki_paymentpreparation_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_paymentpreparation_id_Valid() const{
    return m_fki_paymentpreparation_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiPurchaseId() const {
    return m_fki_purchase_id;
}
void Attachment_ResponseCompound::setFkiPurchaseId(const qint32 &fki_purchase_id) {
    m_fki_purchase_id = fki_purchase_id;
    m_fki_purchase_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_purchase_id_Set() const{
    return m_fki_purchase_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_purchase_id_Valid() const{
    return m_fki_purchase_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiSalaryId() const {
    return m_fki_salary_id;
}
void Attachment_ResponseCompound::setFkiSalaryId(const qint32 &fki_salary_id) {
    m_fki_salary_id = fki_salary_id;
    m_fki_salary_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_salary_id_Set() const{
    return m_fki_salary_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_salary_id_Valid() const{
    return m_fki_salary_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiSupplierId() const {
    return m_fki_supplier_id;
}
void Attachment_ResponseCompound::setFkiSupplierId(const qint32 &fki_supplier_id) {
    m_fki_supplier_id = fki_supplier_id;
    m_fki_supplier_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_supplier_id_Set() const{
    return m_fki_supplier_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_supplier_id_Valid() const{
    return m_fki_supplier_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiTranqcontractId() const {
    return m_fki_tranqcontract_id;
}
void Attachment_ResponseCompound::setFkiTranqcontractId(const qint32 &fki_tranqcontract_id) {
    m_fki_tranqcontract_id = fki_tranqcontract_id;
    m_fki_tranqcontract_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_tranqcontract_id_Set() const{
    return m_fki_tranqcontract_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_tranqcontract_id_Valid() const{
    return m_fki_tranqcontract_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiTemplateId() const {
    return m_fki_template_id;
}
void Attachment_ResponseCompound::setFkiTemplateId(const qint32 &fki_template_id) {
    m_fki_template_id = fki_template_id;
    m_fki_template_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_template_id_Set() const{
    return m_fki_template_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_template_id_Valid() const{
    return m_fki_template_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiInscriptionchecklistId() const {
    return m_fki_inscriptionchecklist_id;
}
void Attachment_ResponseCompound::setFkiInscriptionchecklistId(const qint32 &fki_inscriptionchecklist_id) {
    m_fki_inscriptionchecklist_id = fki_inscriptionchecklist_id;
    m_fki_inscriptionchecklist_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_inscriptionchecklist_id_Set() const{
    return m_fki_inscriptionchecklist_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_inscriptionchecklist_id_Valid() const{
    return m_fki_inscriptionchecklist_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiFolderId() const {
    return m_fki_folder_id;
}
void Attachment_ResponseCompound::setFkiFolderId(const qint32 &fki_folder_id) {
    m_fki_folder_id = fki_folder_id;
    m_fki_folder_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_folder_id_Set() const{
    return m_fki_folder_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_folder_id_Valid() const{
    return m_fki_folder_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiRejectedoffertopurchaseId() const {
    return m_fki_rejectedoffertopurchase_id;
}
void Attachment_ResponseCompound::setFkiRejectedoffertopurchaseId(const qint32 &fki_rejectedoffertopurchase_id) {
    m_fki_rejectedoffertopurchase_id = fki_rejectedoffertopurchase_id;
    m_fki_rejectedoffertopurchase_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_rejectedoffertopurchase_id_Set() const{
    return m_fki_rejectedoffertopurchase_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_rejectedoffertopurchase_id_Valid() const{
    return m_fki_rejectedoffertopurchase_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiDisclosureId() const {
    return m_fki_disclosure_id;
}
void Attachment_ResponseCompound::setFkiDisclosureId(const qint32 &fki_disclosure_id) {
    m_fki_disclosure_id = fki_disclosure_id;
    m_fki_disclosure_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_disclosure_id_Set() const{
    return m_fki_disclosure_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_disclosure_id_Valid() const{
    return m_fki_disclosure_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiReconciliationId() const {
    return m_fki_reconciliation_id;
}
void Attachment_ResponseCompound::setFkiReconciliationId(const qint32 &fki_reconciliation_id) {
    m_fki_reconciliation_id = fki_reconciliation_id;
    m_fki_reconciliation_id_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_reconciliation_id_Set() const{
    return m_fki_reconciliation_id_isSet;
}

bool Attachment_ResponseCompound::is_fki_reconciliation_id_Valid() const{
    return m_fki_reconciliation_id_isValid;
}

qint32 Attachment_ResponseCompound::getFkiEzsigndocumentIdReference() const {
    return m_fki_ezsigndocument_id_reference;
}
void Attachment_ResponseCompound::setFkiEzsigndocumentIdReference(const qint32 &fki_ezsigndocument_id_reference) {
    m_fki_ezsigndocument_id_reference = fki_ezsigndocument_id_reference;
    m_fki_ezsigndocument_id_reference_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_ezsigndocument_id_reference_Set() const{
    return m_fki_ezsigndocument_id_reference_isSet;
}

bool Attachment_ResponseCompound::is_fki_ezsigndocument_id_reference_Valid() const{
    return m_fki_ezsigndocument_id_reference_isValid;
}

Field_eAttachmentDocumenttype Attachment_ResponseCompound::getEAttachmentDocumenttype() const {
    return m_e_attachment_documenttype;
}
void Attachment_ResponseCompound::setEAttachmentDocumenttype(const Field_eAttachmentDocumenttype &e_attachment_documenttype) {
    m_e_attachment_documenttype = e_attachment_documenttype;
    m_e_attachment_documenttype_isSet = true;
}

bool Attachment_ResponseCompound::is_e_attachment_documenttype_Set() const{
    return m_e_attachment_documenttype_isSet;
}

bool Attachment_ResponseCompound::is_e_attachment_documenttype_Valid() const{
    return m_e_attachment_documenttype_isValid;
}

QString Attachment_ResponseCompound::getSAttachmentName() const {
    return m_s_attachment_name;
}
void Attachment_ResponseCompound::setSAttachmentName(const QString &s_attachment_name) {
    m_s_attachment_name = s_attachment_name;
    m_s_attachment_name_isSet = true;
}

bool Attachment_ResponseCompound::is_s_attachment_name_Set() const{
    return m_s_attachment_name_isSet;
}

bool Attachment_ResponseCompound::is_s_attachment_name_Valid() const{
    return m_s_attachment_name_isValid;
}

Field_eAttachmentPrivacy Attachment_ResponseCompound::getEAttachmentPrivacy() const {
    return m_e_attachment_privacy;
}
void Attachment_ResponseCompound::setEAttachmentPrivacy(const Field_eAttachmentPrivacy &e_attachment_privacy) {
    m_e_attachment_privacy = e_attachment_privacy;
    m_e_attachment_privacy_isSet = true;
}

bool Attachment_ResponseCompound::is_e_attachment_privacy_Set() const{
    return m_e_attachment_privacy_isSet;
}

bool Attachment_ResponseCompound::is_e_attachment_privacy_Valid() const{
    return m_e_attachment_privacy_isValid;
}

qint32 Attachment_ResponseCompound::getFkiUserIdSpecific() const {
    return m_fki_user_id_specific;
}
void Attachment_ResponseCompound::setFkiUserIdSpecific(const qint32 &fki_user_id_specific) {
    m_fki_user_id_specific = fki_user_id_specific;
    m_fki_user_id_specific_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_user_id_specific_Set() const{
    return m_fki_user_id_specific_isSet;
}

bool Attachment_ResponseCompound::is_fki_user_id_specific_Valid() const{
    return m_fki_user_id_specific_isValid;
}

Field_eAttachmentType Attachment_ResponseCompound::getEAttachmentType() const {
    return m_e_attachment_type;
}
void Attachment_ResponseCompound::setEAttachmentType(const Field_eAttachmentType &e_attachment_type) {
    m_e_attachment_type = e_attachment_type;
    m_e_attachment_type_isSet = true;
}

bool Attachment_ResponseCompound::is_e_attachment_type_Set() const{
    return m_e_attachment_type_isSet;
}

bool Attachment_ResponseCompound::is_e_attachment_type_Valid() const{
    return m_e_attachment_type_isValid;
}

qint32 Attachment_ResponseCompound::getIAttachmentSize() const {
    return m_i_attachment_size;
}
void Attachment_ResponseCompound::setIAttachmentSize(const qint32 &i_attachment_size) {
    m_i_attachment_size = i_attachment_size;
    m_i_attachment_size_isSet = true;
}

bool Attachment_ResponseCompound::is_i_attachment_size_Set() const{
    return m_i_attachment_size_isSet;
}

bool Attachment_ResponseCompound::is_i_attachment_size_Valid() const{
    return m_i_attachment_size_isValid;
}

qint32 Attachment_ResponseCompound::getIAttachmentEdMmoduleflag() const {
    return m_i_attachment_ed_mmoduleflag;
}
void Attachment_ResponseCompound::setIAttachmentEdMmoduleflag(const qint32 &i_attachment_ed_mmoduleflag) {
    m_i_attachment_ed_mmoduleflag = i_attachment_ed_mmoduleflag;
    m_i_attachment_ed_mmoduleflag_isSet = true;
}

bool Attachment_ResponseCompound::is_i_attachment_ed_mmoduleflag_Set() const{
    return m_i_attachment_ed_mmoduleflag_isSet;
}

bool Attachment_ResponseCompound::is_i_attachment_ed_mmoduleflag_Valid() const{
    return m_i_attachment_ed_mmoduleflag_isValid;
}

QString Attachment_ResponseCompound::getSAttachmentMd5() const {
    return m_s_attachment_md5;
}
void Attachment_ResponseCompound::setSAttachmentMd5(const QString &s_attachment_md5) {
    m_s_attachment_md5 = s_attachment_md5;
    m_s_attachment_md5_isSet = true;
}

bool Attachment_ResponseCompound::is_s_attachment_md5_Set() const{
    return m_s_attachment_md5_isSet;
}

bool Attachment_ResponseCompound::is_s_attachment_md5_Valid() const{
    return m_s_attachment_md5_isValid;
}

bool Attachment_ResponseCompound::isBAttachmentDeleted() const {
    return m_b_attachment_deleted;
}
void Attachment_ResponseCompound::setBAttachmentDeleted(const bool &b_attachment_deleted) {
    m_b_attachment_deleted = b_attachment_deleted;
    m_b_attachment_deleted_isSet = true;
}

bool Attachment_ResponseCompound::is_b_attachment_deleted_Set() const{
    return m_b_attachment_deleted_isSet;
}

bool Attachment_ResponseCompound::is_b_attachment_deleted_Valid() const{
    return m_b_attachment_deleted_isValid;
}

bool Attachment_ResponseCompound::isBAttachmentValid() const {
    return m_b_attachment_valid;
}
void Attachment_ResponseCompound::setBAttachmentValid(const bool &b_attachment_valid) {
    m_b_attachment_valid = b_attachment_valid;
    m_b_attachment_valid_isSet = true;
}

bool Attachment_ResponseCompound::is_b_attachment_valid_Set() const{
    return m_b_attachment_valid_isSet;
}

bool Attachment_ResponseCompound::is_b_attachment_valid_Valid() const{
    return m_b_attachment_valid_isValid;
}

Field_eAttachmentVerified Attachment_ResponseCompound::getEAttachmentVerified() const {
    return m_e_attachment_verified;
}
void Attachment_ResponseCompound::setEAttachmentVerified(const Field_eAttachmentVerified &e_attachment_verified) {
    m_e_attachment_verified = e_attachment_verified;
    m_e_attachment_verified_isSet = true;
}

bool Attachment_ResponseCompound::is_e_attachment_verified_Set() const{
    return m_e_attachment_verified_isSet;
}

bool Attachment_ResponseCompound::is_e_attachment_verified_Valid() const{
    return m_e_attachment_verified_isValid;
}

QString Attachment_ResponseCompound::getTAttachmentRejectioncomment() const {
    return m_t_attachment_rejectioncomment;
}
void Attachment_ResponseCompound::setTAttachmentRejectioncomment(const QString &t_attachment_rejectioncomment) {
    m_t_attachment_rejectioncomment = t_attachment_rejectioncomment;
    m_t_attachment_rejectioncomment_isSet = true;
}

bool Attachment_ResponseCompound::is_t_attachment_rejectioncomment_Set() const{
    return m_t_attachment_rejectioncomment_isSet;
}

bool Attachment_ResponseCompound::is_t_attachment_rejectioncomment_Valid() const{
    return m_t_attachment_rejectioncomment_isValid;
}

qint32 Attachment_ResponseCompound::getFkiUserIdOwner() const {
    return m_fki_user_id_owner;
}
void Attachment_ResponseCompound::setFkiUserIdOwner(const qint32 &fki_user_id_owner) {
    m_fki_user_id_owner = fki_user_id_owner;
    m_fki_user_id_owner_isSet = true;
}

bool Attachment_ResponseCompound::is_fki_user_id_owner_Set() const{
    return m_fki_user_id_owner_isSet;
}

bool Attachment_ResponseCompound::is_fki_user_id_owner_Valid() const{
    return m_fki_user_id_owner_isValid;
}

Common_Audit Attachment_ResponseCompound::getObjAudit() const {
    return m_obj_audit;
}
void Attachment_ResponseCompound::setObjAudit(const Common_Audit &obj_audit) {
    m_obj_audit = obj_audit;
    m_obj_audit_isSet = true;
}

bool Attachment_ResponseCompound::is_obj_audit_Set() const{
    return m_obj_audit_isSet;
}

bool Attachment_ResponseCompound::is_obj_audit_Valid() const{
    return m_obj_audit_isValid;
}

bool Attachment_ResponseCompound::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pki_attachment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_computer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_adjustment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_agent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_bankaccount_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_broker_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_commissionadvance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_communication_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_customertemplate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_deposit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_deposittransitcheque_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_electronicfundstransfer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_employee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_externalbroker_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezcomadvanceserver_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezcomcompany_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsigndocument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ghacqcontract_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_inscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_inscriptiontemp_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_inscriptionnotauthenticated_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_invoice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_buyercontract_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_franchisebroker_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_franchiseagence_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_franchiseoffice_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_franchisefranchise_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_franchisecomplaint_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_lead_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_marketingprogram_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_marketingfollow_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_notary_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_officetaxreport_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_otherincome_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_paymentpreparation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_purchase_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_salary_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_supplier_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_tranqcontract_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_template_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_inscriptionchecklist_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_folder_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_rejectedoffertopurchase_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_disclosure_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_reconciliation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_ezsigndocument_id_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_attachment_documenttype.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_attachment_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_attachment_privacy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_user_id_specific_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_attachment_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_attachment_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_i_attachment_ed_mmoduleflag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_s_attachment_md5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_attachment_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_b_attachment_valid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_attachment_verified.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_t_attachment_rejectioncomment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fki_user_id_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_obj_audit.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool Attachment_ResponseCompound::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pki_attachment_id_isValid && m_e_attachment_documenttype_isValid && m_s_attachment_name_isValid && m_e_attachment_privacy_isValid && m_e_attachment_type_isValid && m_i_attachment_size_isValid && m_s_attachment_md5_isValid && m_b_attachment_deleted_isValid && m_b_attachment_valid_isValid && m_e_attachment_verified_isValid && true;
}

} // namespace Ezmaxapi
