/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.29
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommon_Response_objDebugPayload.h
 *
 * This is a debug object containing debugging information on the actual function
 */

#ifndef OAICommon_Response_objDebugPayload_H
#define OAICommon_Response_objDebugPayload_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommon_Response_objDebugPayload : public OAIObject {
public:
    OAICommon_Response_objDebugPayload();
    OAICommon_Response_objDebugPayload(QString json);
    ~OAICommon_Response_objDebugPayload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIVersionMin() const;
    void setIVersionMin(const qint32 &i_version_min);
    bool is_i_version_min_Set() const;
    bool is_i_version_min_Valid() const;

    qint32 getIVersionMax() const;
    void setIVersionMax(const qint32 &i_version_max);
    bool is_i_version_max_Set() const;
    bool is_i_version_max_Valid() const;

    QList<qint32> getARequiredPermissions() const;
    void setARequiredPermissions(const QList<qint32> &a_required_permissions);
    bool is_a_required_permissions_Set() const;
    bool is_a_required_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 i_version_min;
    bool m_i_version_min_isSet;
    bool m_i_version_min_isValid;

    qint32 i_version_max;
    bool m_i_version_max_isSet;
    bool m_i_version_max_isValid;

    QList<qint32> a_required_permissions;
    bool m_a_required_permissions_isSet;
    bool m_a_required_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommon_Response_objDebugPayload)

#endif // OAICommon_Response_objDebugPayload_H
